{"version":3,"sources":["webpack://Subjx/webpack/bootstrap","webpack://Subjx/./src/js/core/util/util.js","webpack://Subjx/./src/js/core/observer/Observer.js","webpack://Subjx/./src/js/core/helper.js","webpack://Subjx/./src/js/core/util/css-util.js","webpack://Subjx/./src/js/core/transform/common.js","webpack://Subjx/./src/js/core/transform/subject.js","webpack://Subjx/./src/js/core/transform/html.js","webpack://Subjx/./src/js/core/transform/svg/util.js","webpack://Subjx/./src/js/core/transform/svg/path.js","webpack://Subjx/./src/js/core/transform/svg/index.js","webpack://Subjx/./src/js/core/transform/index.js","webpack://Subjx/./src/js/core/clone/clone.js","webpack://Subjx/./src/js/index.js","webpack://Subjx/./src/js/core/clone/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","arrSlice","Array","forEach","slice","arrMap","map","arrReduce","reduce","warn","console","isDef","val","isUndef","isFunc","Observable","_classCallCheck","this","observers","eventName","sub","obs","push","index","indexOf","splice","source","data","observer","notifyMove","notifyRotate","notifyResize","notifyApply","notifyGetState","Helper_","params","helper_classCallCheck","selector","document","querySelectorAll","length","count","nodeType","Subjx","_typeof","isArray","helper_createClass","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","_getStyle","apply","arguments","concat","node","sel","Helper","fn","arr","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","getOffset","getBoundingClientRect","getTransform","css","parseMatrix","transform","match","item","parseFloat","addClass","cls","classList","add","split","cl","unitRE","RAD","Math","PI","snapToGrid","snap","result","gridSize","round","snapCandidate","rotatedTopLeft","x","y","width","height","rotationAngle","revX","revY","hw","hh","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","left","floatToFixed","top","toPX","parent","test","fromPX","toUnit","getUnitDimension","Number","toFixed","Subject","subject_classCallCheck","constructor","TypeError","storage","proxyMethods","Ob","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_animate","_load","_init","onExecution","_end","off","remove","removeClass","_destroy","unsubscribe","onDestroy","_this$proxyMethods$on","_processMove","onMove","_this$proxyMethods$on2","_processRotate","onRotate","_this$proxyMethods$on3","_processResize","onResize","_proportions","_snap","angle","_each","move","resize","rotate","_showHandles","_restrict","_onInit","_onMove","_onRotate","_onResize","_onDrop","_onDestroy","_container","each","showHandles","restrict","onInit","onDrop","container","proportions","createEvent","subscribe","ctx","frame","doDraw","handle","handles","nx","ny","pressang","clientX","clientY","center","doDrag","doResize","doRotate","_storage$each","moveEach","resizeEach","rotateEach","_this$_pointToElement","_pointToElement","dox","is","ml","mr","tl","tr","bl","br","doy","bc","tc","isCenter","_resize","notify","_drag","radians","_rotate","e","stopImmediatePropagation","computed","_compute","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","factor","rotator","ctrlKey","_this$_cursorPoint","_cursorPoint","_this$_pointToElement2","_draw","preventDefault","_this$_cursorPoint2","action","_apply","_start","on","touches","_moving","changedTouches","actionName","store","recalc","_getState","BRACKETS_START","BRACKETS_CORNERS","BRACKETS_SIDES_H","BRACKETS_SIDES","BRACKETS_PROPORTIONS","BRACKETS","Draggable","_this","html_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","enable","createElement","insertBefore","_sel$style","w","h","_parent","controls","innerHTML","appendChild","_controls","assign","find","_this$storage","removeChild","_computed","ctm","_toConsumableArray","matrix","multiplyMatrixAndPoint","matrixInvert","globalMatrix","_el","cached","dimens","pW","pH","diffLeft","diffTop","matrixToCSS","coords","cw","ch","refang","newWidth","min","newHeight","max","minWidth","minHeight","newCoords","n_matrix","parentMatrix","rotMatrix","pctm","resMatrix","multiplyMatrix","tl_off","tr_off","styleList","offset_","_multiplyMatrixAndPoi","join","webkitTranform","mozTransform","msTransform","otransform","point","_matrix","_slicedToArray","a","b","M","dim","I","C","j","ii","mtrx1","mtrx2","m1","m2","k","sum","ALLOWED_ELEMENTS","createSVGElement","createElementNS","createSVGMatrix","getTransformToElement","toElement","g","getScreenCTM","inverse","multiply","matrixToString","pointTo","svg","pt","createSVGPoint","matrixTransform","cloneMatrix","dRE","sepRE","parsePath","path","lastIndex","serialized","exec","cmd","upCmd","toUpperCase","replace","relative","values","trim","isNaN","floatRE","DraggableSVG","svg_classCallCheck","svg_possibleConstructorReturn","svg_getPrototypeOf","wrapper","_sel$getBBox","getBBox","elCTM","box","setAttribute","handlesGroup","normalLineGroup","group","_box$getBBox","bX","bY","bW","bH","boxCTM","theta","normalLine","x1","baseVal","y1","x2","y2","items","fill","stroke","vector-effect","createHandler","_this$storage2","element","scaleX","scaleY","ox","oy","eM","translateMatrix","isGroup","checkChildElements","child","newPT","applyTranslate","_box$getBBox2","applyTransformToHandles","applyResize","defaultCTM","__ctm__","bBox","_this$storage3","scMatrix","trMatrix","ptX","ptY","_box$getBBox3","abs","scaleMatrix","res","_this$storage4","wrapperMatrix","moveWrapper","_pointTo","moveElement","_this$storage5","wrapMatrix","el_x","el_y","resRotMatrix","elMatrix","eBBox","el_w","el_h","_box$getBBox4","c_left","c_top","boxGroup","boxMatrix","hW","hH","boxCenter","elementCenter","attrs","tagName","toLowerCase","resX","getAttribute","resY","resX1","resY1","resX2","resY2","parsePoints","str","space","firstCommand","coordinates","_values$slice2","path_slicedToArray","set","path_toConsumableArray","_values$slice4","_values$slice6","err","movePath","boxW","boxH","localCTM","_pointTo2","newR","_pointTo3","_pointTo4","_pointTo5","newW","newH","rx","_pointTo6","cx1","cy1","_pointTo7","nRx","nRy","_pointTo8","resX1_","resY1_","_pointTo9","resX2_","resY2_","_pointTo10","_values$slice8","x_axis_rot","large_arc_flag","sweep_flag","mtrx","newRx","newRy","unshift","_values$slice10","_values$slice16","_values$slice18","_values$slice20","_pointTo11","_values$slice22","_pointTo12","_pointTo13","resizePath","attr","boxAttrs","hdl","arrOfElements","childNodes","svg_toConsumableArray","pts","array","SVGElement","checkElement","Clone","clone_classCallCheck","_ctx$options","appendTo","stack","position","z-index","clone_typeof","dropZone","clone","_getOffset","aTop","aLeft","_getOffset2","bTop","bLeft","_a","_b","objectsCollide","body","offset","cloneNode","doMove","frameId","translate","_move","js_classCallCheck","js_possibleConstructorReturn","js_getPrototypeOf","__webpack_exports__"],"mappings":"yBACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oEClFaC,EAAmBC,uBAC5BC,0BACAC,6BACAC,yBACA,SAAUC,GACN,OAAOC,WAAWD,EAAG,IAAO,KAGvBE,EAAkBC,sBAC3BC,yBACA,SAAUC,GACNC,aAAaD,IAIjBE,GADmBC,MAAMjB,UAAUkB,QACxBD,MAAMjB,UAAUmB,OAC3BC,EAASH,MAAMjB,UAAUqB,IACzBC,EAAYL,MAAMjB,UAAUuB,OAC5BC,GAAOC,QAAQD,KAEZ,SAASE,EAAMC,GAClB,OAAOA,QAGJ,SAASC,EAAQD,GACpB,OAAOA,QAGJ,SAASE,EAAOF,GACnB,MAAsB,mBAARA,4KC3BGG,aAEjB,SAAAA,iGAAcC,CAAAC,KAAAF,GACVE,KAAKC,UAAY,4FAGXC,EAAWC,GAEjB,IAAMC,EAAMJ,KAAKC,UAEbL,EAAQQ,EAAIF,KACZpD,OAAOC,eAAeqD,EAAKF,EAAW,CAClC7C,MAAO,KAIf+C,EAAIF,GAAWG,KAAKF,uCAGZD,EAAWzB,GAEnB,IAAM2B,EAAMJ,KAAKC,UAEjB,GAAIP,EAAMU,EAAIF,IAAa,CACvB,IAAMI,EAAQF,EAAIF,GAAWK,QAAQ9B,GACrC2B,EAAIF,GAAWM,OAAOF,EAAO,mCAI9BJ,EAAWO,EAAQC,GAElBd,EAAQI,KAAKC,UAAUC,KAE3BF,KAAKC,UAAUC,GAAWhB,QAAQ,SAAAyB,GAC9B,GAAIF,IAAWE,EACf,OAAQT,GACJ,IAAK,SACDS,EAASC,WAAWF,GACpB,MACJ,IAAK,WACDC,EAASE,aAAaH,GACtB,MACJ,IAAK,WACDC,EAASG,aAAaJ,GACtB,MACJ,IAAK,UACDC,EAASI,YAAYL,GACrB,MACJ,IAAK,aACDC,EAASK,eAAeN,0ZC9CrC,IAAMO,EAAb,WAEI,SAAAA,EAAYC,GAER,+FAFgBC,CAAAnB,KAAAiB,IAEXC,EAAQ,OAAOlB,KAEpB,GAAsB,iBAAXkB,EAAqB,CAC5B,IAAIE,EAAWC,SAASC,iBAAiBJ,GACzClB,KAAKuB,OAASH,EAASG,OACvB,IAAK,IAAIC,EAAQ,EAAGA,EAAQxB,KAAKuB,OAAQC,IACrCxB,KAAKwB,GAASJ,EAASI,QAExB,GAAwB,IAApBN,EAAOO,UAAkBP,IAAWG,SAC3CrB,KAAK,GAAKkB,EACVlB,KAAKuB,OAAS,OACX,GAAIL,aAAkBQ,OAA2B,WAAlBC,EAAOT,GAAqB,CAC9DlB,KAAKuB,OAASL,EAAOK,OACrB,IAAK,IAAIC,EAAQ,EAAGA,EAAQxB,KAAKuB,OAAQC,IACrCxB,KAAKwB,GAASN,EAAOM,QAEtB,GAAIvC,MAAM2C,QAAQV,GAErB,IAAK,IAAIM,EADTxB,KAAKuB,OAAS,EACMC,EAAQxB,KAAKuB,OAAQC,IACb,IAApBN,EAAOO,WACPzB,KAAKwB,GAASN,EAAOM,GACrBxB,KAAKuB,UAIjB,OAAOvB,KA7Bf,qDAAA6B,CAAAZ,EAAA,EAAAtD,IAAA,MAAAN,MAAA,SAgCQU,GACA,OAmBR,SAAc+D,GAEV,IAAMC,EAAU,CACZC,SADY,SACHC,GACL,OAiCR,SAAmBC,EAAKD,GAEpB,IAAIE,EAAMD,EAAIX,OAEd,KAAOY,KACH,IAAK,IAAIpE,KAAYkE,EACjBC,EAAIC,GAAKC,MAAMrE,GAAYkE,EAAQlE,GAG3C,OAAOmE,EAAIE,MA1CAC,CAAUrC,KAAMiC,IAG3BK,SALY,WAMR,OAcR,SAAmBJ,GAEf,IAAIC,EAAMD,EAAIX,OAEd,KAAOY,KACH,OAAID,EAAIC,GAAKI,aACFL,EAAIC,GAAKI,aAAaT,GACtBT,SAASmB,aAAenB,SAASmB,YAAYC,iBAC7CpB,SAASmB,YAAYC,iBAAiBP,EAAIC,GAAM,IAAIL,GAEpDI,EAAIC,GAAKC,MAAMN,GAxBnBY,CAAU1C,QAIzB,IAAoB,iBAAT8B,EACP,OAAOC,EAAQO,SAASK,MAAM3C,KAAMhB,EAASzC,KAAKqG,UAAW,IAC1D,GAAoB,WAAhBjB,EAAOG,KAAsBA,EACpC,OAAOC,EAAQC,SAASW,MAAM3C,KAAM4C,WAEpCpD,GAAI,UAAAqD,OAAWf,EAAX,oBAER,OAAO,GAtCSvF,KAAKyD,KAAMjC,KAjC/B,CAAAJ,IAAA,OAAAN,MAAA,SAmCSyF,GACD,OA+ER,SAAeC,GAEX,IAAIZ,EAAMnC,KAAKuB,OAGf,KAAOY,KAEH,OAAOa,EADIhD,KAAKmC,GAAKb,iBAAiByB,KArFzBxG,KAAKyD,KAAM8C,KApChC,CAAAnF,IAAA,OAAAN,MAAA,SAsCS4F,GACD,OA+DR,SAAeA,GAIX,IAFA,IAAMC,EAAMlE,EAASzC,KAAKyD,KAAM,GAEvBM,EAAQ4C,EAAI3B,OAAS,EAAY,GAATjB,IAAcA,EAAtCA,IAIL2C,EAAG1G,KAFQ2G,EAAI5C,IANJ,IAINA,EAMT,OAAON,MAzEUzD,KAAKyD,KAAMiD,KAvChC,CAAAtF,IAAA,KAAAN,MAAA,WA0CQ,OAoFR,WAEI,IAAI8E,EAAMnC,KAAKuB,OAEf,KAAOY,KAEEnC,KAAKmC,GAAKgB,SACXnD,KAAKmC,GAAKgB,OAAS,GACnBnD,KAAKmC,GAAKgB,OAAOP,UAAU,IAAM,IAGZ,IAArBA,UAAUrB,OAENF,SAAS+B,iBACTpD,KAAKmC,GAAKiB,iBAAiBR,UAAU,GAAIA,UAAU,IAAI,GAChDvB,SAASgC,YAChBrD,KAAKmC,GAAKkB,YAAV,KAAAR,OAA2BD,UAAU,IAAMA,UAAU,IAErD5C,KAAKmC,GAAL,KAAAU,OAAeD,UAAU,KAAQA,UAAU,GAGnB,IAArBA,UAAUrB,QAA0C,iBAAlBqB,UAAU,IACnDU,EAAiBtD,KAAKmC,GAAMS,UAAU,GAAIA,UAAU,GAAIA,UAAU,IAAI,GAG9E,OAAO5C,MA7GQ2C,MAAM3C,KAAM4C,aA1C/B,CAAAjF,IAAA,MAAAN,MAAA,WA6CQ,OA6GR,WAEI,IAAI8E,EAAMnC,KAAKuB,OAEf,KAAOY,KAEEnC,KAAKmC,GAAKgB,SACXnD,KAAKmC,GAAKgB,OAAS,GACnBnD,KAAKmC,GAAKgB,OAAOP,UAAU,IAAM,IAGZ,IAArBA,UAAUrB,OACNF,SAASkC,oBACTvD,KAAKmC,GAAKoB,oBAAoBX,UAAU,GAAIA,UAAU,IAAI,GACnDvB,SAASmC,YAChBxD,KAAKmC,GAAKqB,YAAV,KAAAX,OAA2BD,UAAU,IAAMA,UAAU,IAErD5C,KAAKmC,GAAL,KAAAU,OAAeD,UAAU,KAAQ,KAGT,IAArBA,UAAUrB,QAA0C,iBAAlBqB,UAAU,IACnDU,EAAiBtD,KAAKmC,GAAMS,UAAU,GAAIA,UAAU,GAAIA,UAAU,IAAI,GAI9E,OAAO5C,MAtIS2C,MAAM3C,KAAM4C,aA7ChC,CAAAjF,IAAA,KAAAN,MAAA,SA+CO+D,GACC,OAsIR,SAAaA,GAET,IAAMqC,EAAOT,EAAO5B,GAChBe,EAAMnC,KAAKuB,OAEf,KAAOY,KACH,GAAInC,KAAKmC,KAASsB,EAAKtB,GAAM,OAAO,EAExC,OAAO,GA9IQ5F,KAAKyD,KAAMoB,OAhD9BH,EAAA,GAiMA,SAASqC,EAAiBI,EAAIC,EAAKZ,EAAKa,EAASC,GAEhC,SAAPC,EAAiBC,GAEnB,IADA,IAAIzG,EAAIyG,EAAMC,OACP1G,GAAKA,IAAM0C,MACV1C,EAAE2G,QAAQlB,IACVa,EAAQrH,KAAKe,EAAGyG,GAEpBzG,EAAIA,EAAE4G,YAIF,IAARL,EACIxC,SAAS+B,iBACTM,EAAGN,iBAAiBO,EAAKG,GAAM,GACxBzC,SAASgC,YAChBK,EAAGL,YAAH,KAAAR,OAAoBc,GAAOG,GAE3BJ,EAAE,KAAAb,OAAMc,IAASG,EAGjBzC,SAASkC,oBACTG,EAAGH,oBAAoBI,EAAKG,GAAM,GAC3BzC,SAASmC,YAChBE,EAAGF,YAAH,KAAAX,OAAoBc,GAAOG,GAE3BJ,EAAE,KAAAb,OAAMc,IAAS,KAKtB,SAASX,EAAO9B,GACnB,OAAO,IAAID,EAAQC,GCpOhB,SAASiD,EAAUrB,GACtB,OAAOA,EAAKsB,wBAGT,SAASC,EAAaX,GAOzB,OANkBA,EAAGY,IAAI,sBACrBZ,EAAGY,IAAI,mBACPZ,EAAGY,IAAI,kBACPZ,EAAGY,IAAI,iBACPZ,EAAGY,IAAI,cACP,OAID,SAASC,EAAYlH,GAExB,IAAMmH,EAAYnH,EAAMoH,MAAM,sBAE9B,OAAID,EACOA,EAAUnF,IAAI,SAAAqF,GACjB,OAAOC,WAAWD,KAGf,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAIxB,SAASE,EAAS9B,EAAM+B,GAC3B,GAAKA,EAAL,CAEA,GAAI/B,EAAKgC,UAAW,CAChB,MAAwB,EAApBD,EAAItE,QAAQ,MAKZ,OAAOuC,EAAKgC,UAAUC,IAAIF,GAJ1BA,EAAIG,MAAM,OAAO9F,QAAQ,SAAU+F,GAC/B,OAAOnC,EAAKgC,UAAUC,IAAIE,KAMtC,OAAOnC,GCzCJ,IAAMoC,EAAS,uDACTC,EAAMC,KAAKC,GAAK,IACJD,KAAKC,GAEvB,SAASC,EAAWjI,EAAOkI,GAE9B,GAAa,IAATA,EACA,OAAOlI,EAEP,IAAMmI,EAQP,SAAuBnI,EAAOoI,GACjC,OAAiB,IAAbA,EAAuBpI,EACpB+H,KAAKM,MAAMrI,EAAQoI,GAAYA,EAVnBE,CAActI,EAAOkI,GAEpC,OAAIC,EAASnI,EAAQkI,EACVC,OADX,EAWD,SAASI,EACZC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAAMC,EAAKzB,WAAWoB,GAAS,EAC3BM,EAAK1B,WAAWqB,GAAU,EAExBM,EAAKT,EAAIO,EACXG,EAAKT,EAAIO,EAEPG,EAAKX,EAAIS,EACXG,EAAKX,EAAIS,EAIPG,EAFuBtB,KAAKuB,MAAMF,EAAID,GAEOP,EAE7CW,EAASxB,KAAKyB,KAAKzB,KAAK0B,IAAIV,EAAI,GAAKhB,KAAK0B,IAAIT,EAAI,IAEpDU,EAAM3B,KAAK2B,IAAIL,GACfM,EAAM5B,KAAK4B,IAAIN,GAMfO,EAAKV,EAAKK,GAHdI,GAAe,IAATb,GAAiBa,EAAMA,GAK7B,MAAO,CACHE,KAAMC,EAJCb,EAAKM,GAHhBG,GAAe,IAATb,GAAiBa,EAAMA,IAQzBK,IAAKD,EAAaF,IAInB,SAASI,EAAKhK,EAAOiK,GACxB,MAAI,KAAKC,KAAKlK,GACHA,EAEP,IAAIkK,KAAKlK,GACT,GAAAwF,OAAW8B,WAAWtH,GAASsH,WAAW2C,GAAU,IAApD,WADJ,EAKG,SAASE,EAAOnK,EAAOiK,EAAQG,GAClC,MAAI,KAAKF,KAAKE,GACHpK,EAEP,IAAIkK,KAAKE,GACT,GAAA5E,OAA8B,IAApB8B,WAAWtH,GAAesH,WAAW2C,GAA/C,UADJ,EAKG,SAASI,EAAiBrK,GAC7B,OAAOA,EAAMoH,MAAMS,GAAQ,GAGxB,SAASiC,EAAaxH,GACzB,OAAOgI,OAAOhI,EAAIiI,QAAQ,8KChETC,aAEjB,SAAAA,EAAYnE,EAAI5D,GAEZ,+FAFwBgI,CAAA9H,KAAA6H,GAEpB7H,KAAK+H,cAAgBF,EACrB,MAAM,IAAIG,UAAU,+CAGxBhI,KAAK0D,GAAKA,EACV1D,KAAKiI,QAAU,KACfjI,KAAKkI,aAAe,KACpBlI,KAAKmI,GAAKrI,EAEVE,KAAKoI,aAAepI,KAAKoI,aAAaxK,KAAKoC,MAC3CA,KAAKqI,cAAgBrI,KAAKqI,cAAczK,KAAKoC,MAC7CA,KAAKsI,aAAetI,KAAKsI,aAAa1K,KAAKoC,MAC3CA,KAAKuI,aAAevI,KAAKuI,aAAa3K,KAAKoC,MAC3CA,KAAKwI,WAAaxI,KAAKwI,WAAW5K,KAAKoC,MACvCA,KAAKyI,YAAczI,KAAKyI,YAAY7K,KAAKoC,MACzCA,KAAK0I,SAAW1I,KAAK0I,SAAS9K,KAAKoC,4FAGhCiC,GAECrC,EAAQI,KAAKiI,UACbjI,KAAK2I,MAAM1G,GACXjC,KAAK4I,MAAM5I,KAAK0D,KAEhBlE,GAAK,qDAIH,IAGFyI,EAIAjI,KAJAiI,QACAC,EAGAlI,KAHAkI,aACAxE,EAEA1D,KAFA0D,GACAyE,EACAnI,KADAmI,GAGAvI,EAAQqI,KAGRA,EAAQY,cACR7I,KAAK8I,OACL9F,EAAO3B,UACF0H,IAAI,YAAa/I,KAAKsI,cACtBS,IAAI,UAAW/I,KAAKwI,YACpBO,IAAI,YAAa/I,KAAKuI,cACtBQ,IAAI,WAAY/I,KAAKyI,cF3B/B,SAAqB3F,EAAM+B,GAC9B,GAAKA,EAAL,CAEA,GAAI/B,EAAKgC,UAAW,CAChB,MAAwB,EAApBD,EAAItE,QAAQ,MAKZ,OAAOuC,EAAKgC,UAAUkE,OAAOnE,GAJ7BA,EAAIG,MAAM,OAAO9F,QAAQ,SAAU+F,GAC/B,OAAOnC,EAAKgC,UAAUkE,OAAO/D,OEwBrCgE,CAAYvF,EAAI,WAChB1D,KAAKkJ,WAELf,EAAGgB,YAAY,aAAcnJ,MAC7BmI,EAAGgB,YAAY,UAAWnJ,MAC1BmI,EAAGgB,YAAY,SAAUnJ,MACzBmI,EAAGgB,YAAY,WAAYnJ,MAC3BmI,EAAGgB,YAAY,WAAYnJ,MAE3BkI,EAAakB,UAAU7M,KAAKyD,KAAM0D,UAC3B1D,KAAKiI,sJASR,IAAAoB,EACJrJ,KAAKsJ,aAAL3G,MAAA3C,KAAqB4C,YACrByG,EAAArJ,KAAKkI,aAAaqB,QAAOhN,KAAzBoG,MAAA0G,EAAA,CAA8BrJ,MAA9B6C,OAAA5D,MAAAjB,UAAAmB,MAAA5C,KAAuCqG,+CAGjC,IAAA4G,EACNxJ,KAAKyJ,eAAL9G,MAAA3C,KAAuB4C,YACvB4G,EAAAxJ,KAAKkI,aAAawB,UAASnN,KAA3BoG,MAAA6G,EAAA,CAAgCxJ,MAAhC6C,OAAA5D,MAAAjB,UAAAmB,MAAA5C,KAAyCqG,+CAGnC,IAAA+G,EACN3J,KAAK4J,eAALjH,MAAA3C,KAAuB4C,YACvB+G,EAAA3J,KAAKkI,aAAa2B,UAAStN,KAA3BoG,MAAAgH,EAAA,CAAgC3J,MAAhC6C,OAAA5D,MAAAjB,UAAAmB,MAAA5C,KAAyCqG,2CAGvCX,GAAS,IAEHyB,EAAW1D,KAAX0D,GAAIyE,EAAOnI,KAAPmI,GAEZvD,EAASlB,EAAI,WAEb,IAuBIoG,EAvBEC,EAAQ,CACVlE,EAAG,GACHC,EAAG,GACHkE,MAAO,GAAK7E,GAGV8E,EAAQ,CACVC,MAAM,EACNC,QAAQ,EACRC,QAAQ,GAGRC,GAAe,EACfC,EAAY,KACZC,EAAU,aACVC,EAAU,aACVC,EAAY,aACZC,EAAY,aACZC,EAAU,aACVC,EAAa,aAEbC,EAAanH,EAAGQ,WAIpB,GAAIxE,EAAMuC,GAAU,KAGZsD,EAYAtD,EAZAsD,KACAuF,EAWA7I,EAXA6I,KACAC,EAUA9I,EAVA8I,YACAC,EASA/I,EATA+I,SACAC,EAQAhJ,EARAgJ,OACAC,EAOAjJ,EAPAiJ,OACA3B,EAMAtH,EANAsH,OACAM,EAKA5H,EALA4H,SACAH,EAIAzH,EAJAyH,SACAN,EAGAnH,EAHAmH,UACA+B,EAEAlJ,EAFAkJ,UACAC,EACAnJ,EADAmJ,YAGJ,GAAI1L,EAAM6F,GAAO,KAELM,EAAgBN,EAAhBM,EAAGC,EAAaP,EAAbO,EAAGkE,EAAUzE,EAAVyE,MAEdD,EAAMlE,EAAIjG,EAAQiG,GAAK,GAAKA,EAC5BkE,EAAMjE,EAAIlG,EAAQkG,GAAK,GAAKA,EAC5BiE,EAAMC,MAAQpK,EAAQoK,GAChBD,EAAMC,MACNA,EAAQ7E,EAGlB,GAAIzF,EAAMoL,GAAO,KAELZ,EAAyBY,EAAzBZ,KAAMC,EAAmBW,EAAnBX,OAAQC,EAAWU,EAAXV,OAEtBH,EAAMC,KAAOA,IAAQ,EACrBD,EAAME,OAASA,IAAU,EACzBF,EAAMG,OAASA,IAAU,EAGzB1K,EAAMsL,KACNV,EAAyB,WAAbU,EACNtH,EAAGQ,WACHlB,EAAOgI,GAAU,IAAM3J,UAGjCgJ,EAAezK,EAAQmL,KACH,IAAhBA,EAEJF,EAAa7H,EAAOmI,GAAW,IAAMN,EAErCf,EAAesB,IAAe,EAG9Bb,EAAUc,EAAYJ,GACtBN,EAAUU,EAAYH,GACtBV,EAAUa,EAAY9B,GACtBmB,EAAYW,EAAYxB,GACxBY,EAAYY,EAAY3B,GACxBkB,EAAaS,EAAYjC,GAEzBmB,EAAQhO,KAAKyD,KAAM0D,GAGvB1D,KAAKiI,QAAU,CACX8C,YAAaV,EACbW,SAAUV,EACVa,UAAWN,EACXtF,KAAMwE,EACNe,KAAMb,EACNmB,YAAatB,GAGjB9J,KAAKkI,aAAe,CAChB+C,OAAQV,EACRW,OAAQP,EACRpB,OAAQiB,EACRX,SAAUa,EACVhB,SAAUe,EACVrB,UAAWwB,IAGXX,EAAMC,MAAQD,EAAME,QAAUF,EAAMG,UACpCjC,EAAGmD,UAAU,aAActL,MAC3BmI,EAAGmD,UAAU,UAAWtL,OAGxBiK,EAAMC,MACN/B,EAAGmD,UAAU,SAAUtL,MAEvBiK,EAAME,QACNhC,EAAGmD,UAAU,WAAYtL,MAEzBiK,EAAMG,QACNjC,EAAGmD,UAAU,WAAYtL,sCAK7BA,KAAK0I,8CAKL,IAAM6C,EAAMvL,KACJiI,EAAYsD,EAAZtD,QAER,IAAIrI,EAAQqI,KAEZA,EAAQuD,MAAQpN,EAAiBmN,EAAI7C,UAEhCT,EAAQwD,QAAb,CACAxD,EAAQwD,QAAS,EAVV,IAaHC,EAgBAzD,EAhBAyD,OACAC,EAeA1D,EAfA0D,QACArF,EAcA2B,EAdA3B,GACAC,EAaA0B,EAbA1B,GACAqF,EAYA3D,EAZA2D,GACAC,EAWA5D,EAXA4D,GACAC,EAUA7D,EAVA6D,SACAC,EASA9D,EATA8D,QACAC,EAQA/D,EARA+D,QACAC,EAOAhE,EAPAgE,OACA1G,EAMA0C,EANA1C,KACA2G,EAKAjE,EALAiE,OACAC,EAIAlE,EAJAkE,SACAC,EAGAnE,EAHAmE,SACAlG,EAEA+B,EAFA/B,KACAC,EACA8B,EADA9B,KA5BGkG,EAmCHpE,EAAQ6C,KAHFwB,EAhCHD,EAgCHnC,KACQqC,EAjCLF,EAiCHlC,OACQqC,EAlCLH,EAkCHjC,OAGJ,GAAI+B,EAAU,KAAAM,EAEOzM,KAAK0M,gBAClB,CACI7G,EAAGkG,EACHjG,EAAGkG,IAHHnG,EAFE4G,EAEF5G,EAAGC,EAFD2G,EAEC3G,EAOPU,EAAKlB,EAAWO,EAAIS,EAAIf,EAAKM,GAC7BY,EAAKnB,EAAWQ,EAAIS,EAAIhB,EAAKO,GAE3B6G,EAAMjB,EAAOkB,GAAGjB,EAAQkB,KAC1BnB,EAAOkB,GAAGjB,EAAQmB,KAClBpB,EAAOkB,GAAGjB,EAAQoB,KAClBrB,EAAOkB,GAAGjB,EAAQqB,KAClBtB,EAAOkB,GAAGjB,EAAQsB,KAClBvB,EAAOkB,GAAGjB,EAAQuB,IAEhBC,EAAMzB,EAAOkB,GAAGjB,EAAQuB,KAC1BxB,EAAOkB,GAAGjB,EAAQsB,KAClBvB,EAAOkB,GAAGjB,EAAQyB,KAClB1B,EAAOkB,GAAGjB,EAAQqB,KAClBtB,EAAOkB,GAAGjB,EAAQoB,KAClBrB,EAAOkB,GAAGjB,EAAQ0B,IAEhBC,EAAW5B,EAAOkB,GAAGjB,EAAQkB,KAC/BnB,EAAOkB,GAAGjB,EAAQmB,KAClBpB,EAAOkB,GAAGjB,EAAQ0B,KAClB3B,EAAOkB,GAAGjB,EAAQyB,IAEtB5G,EAAKmG,EAAOzG,GAASM,EAAKA,EAAM,EAC5BC,EAAK0G,EAAOhH,GAASM,EAAKA,EAAM,EAEpC8E,EAAIgC,QACA/G,EACAC,EACA6G,GAGAf,GAEAhB,EAAIpD,GAAGqF,OAAO,WACVjC,EACA,CACI/E,KACAC,KACA6G,aAMhB,GAAIpB,EAAQ,CAER,IAAM1F,EAAKlB,EAAWyG,EAAUH,EAAIrG,EAAKM,GACrCY,EAAKnB,EAAW0G,EAAUH,EAAItG,EAAKO,GAEvCyF,EAAIkC,MACAjH,EACAC,GAGA6F,GACAf,EAAIpD,GAAGqF,OAAO,SACVjC,EACA,CACI/E,KACAC,OAMhB,GAAI2F,EAAU,CAEV,IAAMsB,EAAUtI,KAAKuB,MACjBqF,EAAUC,EAAOnG,EACjBiG,EAAUE,EAAOpG,GACjBiG,EAEJP,EAAIoC,QACArI,EAAWoI,EAASnI,EAAKyE,QAGzBwC,GACAjB,EAAIpD,GAAGqF,OAAO,WACVjC,EACA,CACImC,6CAObE,GAECA,EAAEC,0BACFD,EAAEC,2BAHA,IAME5F,EAAYjI,KAAZiI,QACF6F,EAAW9N,KAAK+N,SAASH,GAE/B9Q,OAAOkR,KAAKF,GAAU5O,QAAQ,SAAA4C,GAC1BmG,EAAQnG,GAAQgM,EAAShM,KAVvB,IAcFmM,EAQAH,EARAG,YACAC,EAOAJ,EAPAI,aACAC,EAMAL,EANAK,UACAC,EAKAN,EALAM,WACA1C,EAIAoC,EAJApC,OACA2C,EAGAP,EAHAO,OACAnI,EAEA4H,EAFA5H,KACAC,EACA2H,EADA3H,KAGEgG,EAAW8B,GACbC,GACAC,GACAC,EAEEhC,EAAWV,EAAOkB,GAAG3E,EAAQ0D,QAAQ2C,SAGvCvC,EAGA6B,EAHA7B,QACAC,EAEA4B,EAFA5B,QACAuC,EACAX,EADAW,QAlCEC,EAwCFxO,KAAKyO,aACL,CACI1C,UACAC,YALJnG,EAtCE2I,EAsCF3I,EACAC,EAvCE0I,EAuCF1I,EAvCE4I,EAkDF1O,KAAK0M,gBAAgB,CAAE7G,IAAGC,MAFvB8F,EAhDD8C,EAgDF7I,EACGgG,EAjDD6C,EAiDF5I,EAGJmC,EAAQ8D,QAAUA,EAClB9D,EAAQ+D,QAAUA,EAClB/D,EAAQ2D,GAAK/F,EACboC,EAAQ4D,GAAK/F,EACbmC,EAAQ3B,GAAKsF,EACb3D,EAAQ1B,GAAKsF,EACb5D,EAAQsG,QAAUA,EAClBtG,EAAQkE,SAAWA,EACnBlE,EAAQiE,QAAUE,IAAaD,EAC/BlE,EAAQmE,SAAWA,EACnBnE,EAAQY,aAAc,EAEtB7I,KAAKmI,GAAGqF,OACJ,aACAxN,KACA,CACIqO,SACAnI,OACAC,SAIRnG,KAAK2O,wCAGDf,GAEAA,EAAEgB,gBACFhB,EAAEgB,iBAHC,IAMC3G,EAAYjI,KAAZiI,QAND4G,EAQU7O,KAAKyO,aAAab,GAA3B/H,EARDgJ,EAQChJ,EAAGC,EARJ+I,EAQI/I,EAEXmC,EAAQ8D,QAAUlG,EAClBoC,EAAQ+D,QAAUlG,EAClBmC,EAAQwD,QAAS,+BAGhBmC,GAEGlO,EAAMkO,IAAMA,EAAEC,0BACdD,EAAEC,2BAHF,IAOA5F,EAEAjI,KAFAiI,QACAC,EACAlI,KADAkI,aAGE4G,EAAS7G,EAAQkE,SACjB,SACClE,EAAQiE,OAAS,OAAS,SAEjCjE,EAAQkE,UAAW,EACnBlE,EAAQiE,QAAS,EACjBjE,EAAQmE,UAAW,EACnBnE,EAAQwD,QAAS,EACjBxD,EAAQY,aAAc,EAEtB7I,KAAK+O,OAAOD,GAEZ9O,KAAKmI,GAAGqF,OACJ,UACAxN,KACA8O,GAGJnQ,EAAgBsJ,EAAQuD,OACxBtD,EAAagD,OAAO3O,KAAKyD,KAAM4N,EAAG5N,KAAK0D,yCAG9BkK,GACT5N,KAAKgP,OAAOpB,GACZ5K,EAAO3B,UACF4N,GAAG,YAAajP,KAAKsI,cACrB2G,GAAG,UAAWjP,KAAKwI,kDAGdoF,GACV5N,KAAKgP,OAAOpB,EAAEsB,QAAQ,IACtBlM,EAAO3B,UACF4N,GAAG,YAAajP,KAAKuI,cACrB0G,GAAG,WAAYjP,KAAKyI,kDAGhBmF,GACT5N,KAAKmP,QACDvB,EACA5N,KAAK0D,yCAIAkK,GACT5N,KAAKmP,QACDvB,EAAEsB,QAAQ,GACVlP,KAAK0D,uCAIFkK,GACP5K,EAAO3B,UACF0H,IAAI,YAAa/I,KAAKsI,cACtBS,IAAI,UAAW/I,KAAKwI,YACzBxI,KAAK8I,KACD8E,EACA5N,KAAK0D,wCAIDkK,GACR5K,EAAO3B,UACF0H,IAAI,YAAa/I,KAAKuI,cACtBQ,IAAI,WAAY/I,KAAKyI,aACD,IAArBmF,EAAEsB,QAAQ3N,QACVvB,KAAK8I,KACD8E,EAAEwB,eAAe,GACjBpP,KAAK0D,uCAKNhD,GAAM,IAGT8F,EAEA9F,EAFA8F,GACAC,EACA/F,EADA+F,GAGJzG,KAAKyN,MACDjH,EACAC,wCAIK/F,GAAM,IAGX6E,EACAvF,KAAKiI,QADL1C,KAGJvF,KAAK2N,QACDrI,EAAW5E,EAAKgN,QAASnI,EAAKyE,6CAIzBtJ,GAAM,IAGX8F,EAIA9F,EAJA8F,GACAC,EAGA/F,EAHA+F,GACAkG,EAEAjM,EAFAiM,IACAQ,EACAzM,EADAyM,IAGJnN,KAAKuN,QACD/G,EACAC,EACAkG,EACAQ,uCAIIkC,GACRrP,KAAK+O,OAAOM,0CAGD3O,GAEX,IAAM4O,EAAQtP,KAAKiI,QAEbsH,EAASvP,KAAKwP,UAChB9O,GAGJ5D,OAAOkR,KAAKuB,GAAQrQ,QAAQ,SAAAvB,GACxB2R,EAAM3R,GAAO4R,EAAO5R,cAKhC,SAAS0N,EAAYpI,GACjB,OAAOpD,EAAOoD,GACR,WACEA,EAAG1G,KAAHoG,MAAAM,EAAE,CAAMjD,MAAN6C,OAAA5D,MAAAjB,UAAAmB,MAAA5C,KAAeqG,cAEnB,2hDChlBV,IACM6M,EAAc,kFAEdC,EAAgB,mQAKhBC,EAAgB,mIAMhBC,EAAc,YAAA/M,OACX8M,EADW,aAAA9M,OAHE,oIAMhBgN,EAAoB,aAAAhN,OAChB4M,EADgB,cAAA5M,OAEhB6M,EAFgB,cAAA7M,OAGhB8M,GACJG,EAAQ,aAAAjN,OACJ4M,EADI,cAAA5M,OAEJ6M,EAFI,cAAA7M,OAGJ+M,GAEWG,aAEjB,SAAAA,EAAYrM,EAAIzB,EAASnC,GAAY,IAAAkQ,EAAA,mGAAAC,CAAAjQ,KAAA+P,IACjCC,EAAAE,EAAAlQ,KAAAmQ,EAAAJ,GAAAxT,KAAAyD,KAAM0D,EAAI5D,KACLsQ,OAAOnO,GAFqB+N,8OAFFnI,iFAO7B9E,GAAK,IAECkF,EAAYjI,KAAZiI,QAEFkD,EAAY9J,SAASgP,cAAc,OAEzCzL,EAASuG,EAAW,cACpBpI,EAAImB,WAAWoM,aAAanF,EAAWpI,GAEvC,IAAMU,EAAOT,EAAOD,GATbwN,EAgBHxN,EAAIX,MAJJ8E,EAZGqJ,EAYHrJ,KACAE,EAbGmJ,EAaHnJ,IACArB,EAdGwK,EAcHxK,MACAC,EAfGuK,EAeHvK,OAGEwK,EAAIzK,GAAStC,EAAKa,IAAI,SACxBmM,EAAIzK,GAAUvC,EAAKa,IAAI,UACvBhH,EAAI8J,GAAO3D,EAAKa,IAAI,OACpBjI,EAAI6K,GAAQzD,EAAKa,IAAI,QAEnBoM,EAAU1N,EAAOmI,EAAUjH,YAE3BI,EAAM,CACR8C,IAAK9J,EACL4J,KAAM7K,EACN0J,MAAOyK,EACPxK,OAAQyK,EACRjM,UAAWH,EAAaZ,IAGtBkN,EAAWtP,SAASgP,cAAc,OACxCM,EAASC,UAAY5Q,KAAKiI,QAAQmD,YAAcyE,EAAuBC,EAEvElL,EAAS+L,EAAU,eAEnBxF,EAAU0F,YAAYF,GAEtB,IAAMG,EAAY9N,EAAO2N,GACzBG,EAAUxM,IAAIA,GAEd,IAAMuG,EAAa7H,EAAOmI,GAE1BrO,OAAOiU,OAAO9I,EAAS,CACnB0I,WACAhF,QAAS,CACLoB,GAAIlC,EAAWmG,KAAK,cACpBhE,GAAInC,EAAWmG,KAAK,cACpB9D,GAAIrC,EAAWmG,KAAK,cACpB/D,GAAIpC,EAAWmG,KAAK,cACpB3D,GAAIxC,EAAWmG,KAAK,cACpB5D,GAAIvC,EAAWmG,KAAK,cACpBnE,GAAIhC,EAAWmG,KAAK,cACpBlE,GAAIjC,EAAWmG,KAAK,cACpB1C,QAASzD,EAAWmG,KAAK,gBAE7B1J,OAAQoJ,IAGZI,EAAU7B,GAAG,YAAajP,KAAKoI,cAC1B6G,GAAG,aAAcjP,KAAKqI,kDAGpB,IAAA4I,EAKHjR,KAAKiI,QAFL0I,EAHGM,EAGHN,SACAxF,EAJG8F,EAIH9F,UAGJnI,EAAO2N,GACF5H,IAAI,YAAa/I,KAAKoI,cACtBW,IAAI,aAAc/I,KAAKqI,eAE5B8C,EAAU+F,YAAYP,EAASzM,6CAG1B0J,GAAG,IAGJjC,EACA3L,KAAKiI,QADL0D,QAGED,EAAS1I,EAAO4K,EAAE5J,QAGlBkC,EAAOwF,EAAOkB,GAAGjB,EAAQoB,KAC3BrB,EAAOkB,GAAGjB,EAAQkB,KAClBnB,EAAOkB,GAAGjB,EAAQsB,KAClBvB,EAAOkB,GAAGjB,EAAQ0B,IAEhBlH,EAAOuF,EAAOkB,GAAGjB,EAAQoB,KAC3BrB,EAAOkB,GAAGjB,EAAQqB,KAClBtB,EAAOkB,GAAGjB,EAAQ0B,KAClB3B,EAAOkB,GAAGjB,EAAQkB,IAEhBsB,EAAYzC,EAAOkB,GAAGjB,EAAQoB,KAAOrB,EAAOkB,GAAGjB,EAAQ0B,KAAO3B,EAAOkB,GAAGjB,EAAQqB,IAClFoB,EAAa1C,EAAOkB,GAAGjB,EAAQoB,KAAOrB,EAAOkB,GAAGjB,EAAQkB,KAAOnB,EAAOkB,GAAGjB,EAAQsB,IACjFgB,EAAcvC,EAAOkB,GAAGjB,EAAQqB,KAAOtB,EAAOkB,GAAGjB,EAAQmB,KAAOpB,EAAOkB,GAAGjB,EAAQuB,IAClFgB,EAAexC,EAAOkB,GAAGjB,EAAQuB,KAAOxB,EAAOkB,GAAGjB,EAAQyB,KAAO1B,EAAOkB,GAAGjB,EAAQsB,IAGjFoB,EAAS3C,EAAOkB,GAAGjB,EAAQqB,KAC7BtB,EAAOkB,GAAGjB,EAAQsB,KACf,EACD,EAEAkE,EAAYnR,KAAKwP,UAAU,CAC7BnB,SACAnI,OACAC,SAjCIqI,EAuCJxO,KAAKyO,aAAab,GAFf7B,EArCCyC,EAqCJ3I,EACGmG,EAtCCwC,EAsCJ1I,EAGEgG,EAAW1G,KAAKuB,MAClBqF,EAAUmF,EAAUlF,OAAOnG,EAC3BiG,EAAUoF,EAAUlF,OAAOpG,GAU/B,OAPAsL,EAAUhD,UAAYA,EACtBgD,EAAU/C,WAAaA,EACvB+C,EAAUlD,YAAcA,EACxBkD,EAAUjD,aAAeA,EACzBiD,EAAUzF,OAASA,EACnByF,EAAUrF,SAAWA,EAEdqF,0CAGKzQ,GAAM,IAGd8D,EACAxE,KAAKiI,QADLzD,UAIAqB,EAEAnF,EAFAmF,EACAC,EACApF,EADAoF,EAGEsL,EAAGC,EAAO7M,EAAU8M,QAG1B,OAFAF,EAAI,GAAKA,EAAI,GAAK,EAEXG,EACH,CACI1L,IACAC,KAEJ0L,EAAaJ,yCAIRxD,GAAG,IAMN6D,EAAelN,EACjBF,EAAarB,EAHbhD,KAAKiI,QADLkD,aAOJ,OAAOoG,EACH,CACI1L,EAAG+H,EAAE7B,QACLjG,EAAG8H,EAAE5B,SAETwF,EACIC,qCAKH,IAGDxJ,EAEAjI,KAFAiI,QAIEyJ,EAAM1O,EAFRhD,KADA0D,IAMAiO,EAIA1J,EAJA0J,OACArK,EAGAW,EAHAX,OACAsK,EAEA3J,EAFA2J,OACAjB,EACA1I,EADA0I,SAGJ,GAAKgB,EAAL,CAEA,IAAML,EAAMD,EAAOM,GAEbE,EAAKvK,EAAOhD,IAAI,SAClBwN,EAAKxK,EAAOhD,IAAI,UAEdyN,EAAWT,EAAO,GAClBU,EAAUV,EAAO,GAEvBA,EAAO,GAAK,EACZA,EAAO,GAAK,EAEZ,IAAMhN,EAAM2N,EAAYX,GAElBpK,EAAOvC,WACT0C,EACIqK,EAAI,GAAGtP,MAAM8E,MAAQwK,EAAIpN,IAAI,QAC7BuN,IAIFzK,EAAMzC,WACR0C,EACIqK,EAAI,GAAGtP,MAAMgF,KAAOsK,EAAIpN,IAAI,OAC5BwN,IAIRxN,EAAI4C,KAAOM,EACPN,EAAO6K,EAAW,KAClBF,EACAD,EAAO1K,MAGX5C,EAAI8C,IAAMI,EACNJ,EAAM4K,EAAU,KAChBF,EACAF,EAAOxK,KAGXsK,EAAIpN,IAAIA,GACRtB,EAAO2N,GAAUrM,IAAIA,GAErBtE,KAAKiI,QAAQ0J,OAAS,4CAItB,OAAO3R,KAAKiI,QAAQ0I,gDAGTnK,EAAIC,EAAI6G,GAAU,IAEzB5J,EAEA1D,KAFA0D,GACAuE,EACAjI,KADAiI,QAIA0I,EAUA1I,EAVA0I,SACAuB,EASAjK,EATAiK,OACAC,EAQAlK,EARAkK,GACAC,EAOAnK,EAPAmK,GACAR,EAMA3J,EANA2J,OACAtK,EAKAW,EALAX,OACA9C,EAIAyD,EAJAzD,UACA6N,EAGApK,EAHAoK,OACAnM,EAEA+B,EAFA/B,KACAC,EACA8B,EADA9B,KAGI/D,EAAUuO,EAAVvO,MAEJkQ,EAAWH,GAAMnS,KAAKiI,QAAQmD,cAAgBkC,EAAWlI,KAAKmN,IAAI/L,EAAIC,GAAMD,GAC5EgM,EAAYJ,GAAMpS,KAAKiI,QAAQmD,cAAgBkC,EAAWgF,EAASH,EAAGC,EAAKA,EAAK3L,GAEpF,KAAI6L,EAAWlN,KAAKqN,IA/SX,GA+S0BzS,KAAKiI,QAAQyK,UAAY,IACrDF,EAAYpN,KAAKqN,IAhTf,GAgT8BzS,KAAKiI,QAAQ0K,WAAa,IADjE,CAMAvQ,EAAM2D,MAAN,GAAAlD,OAAiByP,EAAjB,MACAlQ,EAAM4D,OAAN,GAAAnD,OAAkB2P,EAAlB,MAEA,IAAMlB,EAAMD,EAAO7M,EAAU8M,QAEvBsB,EAAYhN,EACd0L,EAAO,GACPA,EAAO,GACPgB,EACAE,EACAH,EACAnM,EACAC,GAGJmL,EAAO,IAAOsB,EAAU1L,KAAOgL,EAAOhL,KACtCoK,EAAO,IAAOsB,EAAUxL,IAAM8K,EAAO9K,IAErC,IAAM9C,EAAM2N,EAAYX,GAExBtO,EAAO2N,GAAUrM,IAAIA,GAErBA,EAAIyB,MAAQyB,EACRpF,EAAM2D,MACNuB,EAAOhD,IAAI,SACXsN,EAAO7L,OAGXzB,EAAI0B,OAASwB,EACTpF,EAAM4D,OACNsB,EAAOhD,IAAI,UACXsN,EAAO5L,QAGXhD,EAAOU,GAAIY,IAAIA,GACf2D,EAAQ0J,OAASL,wCAGR9K,EAAIC,GAAI,IAEb/C,EAEA1D,KAFA0D,GACAuE,EACAjI,KADAiI,QAIA0I,EAEA1I,EAFA0I,SACAnM,EACAyD,EADAzD,UAIA8M,EAEA9M,EAFA8M,OAeEuB,GAbFrO,EADAsO,aAcUzB,EAAOC,IAErBuB,EAAS,GAAKvB,EAAO,GAAK9K,EAC1BqM,EAAS,GAAKvB,EAAO,GAAK7K,EAE1B,IAAMnC,EAAM2N,EAAYY,GAExB7P,EAAO2N,GAAUrM,IAAIA,GACrBtB,EAAOU,GAAIY,IAAIA,GAEf2D,EAAQ0J,OAASkB,yCAGNnF,GAAS,IAGhBhK,EAEA1D,KAFA0D,GACAuE,EACAjI,KADAiI,QAIA0I,EAEA1I,EAFA0I,SACAnM,EACAyD,EADAzD,UAIA8M,EAEA9M,EAFA8M,OACAwB,EACAtO,EADAsO,aAGE/L,EAAMI,EAAa/B,KAAK2B,IAAI2G,IAC9B1G,EAAMG,EAAa/B,KAAK4B,IAAI0G,IAE1BqF,EAAY,CACdhM,EACAC,GACCA,EACDD,EACA,EACA,GAGEiM,EAAI3B,EAAOyB,GACjBE,EAAK,GAAKA,EAAK,GAAK,EAEpB,IAKMC,EAAYC,EALGA,EACjB1B,EAAawB,GACbE,EAAeH,EAAWC,IAGiB1B,GAEzChN,EAAM2N,EAAYgB,GAExBjQ,EAAO2N,GAAUrM,IAAIA,GACrBtB,EAAOU,GAAIY,IAAIA,GAEf2D,EAAQ0J,OAASsB,oCAGX/R,GAAQ,IAGVmN,EAGAnN,EAHAmN,OACAnI,EAEAhF,EAFAgF,KACAC,EACAjF,EADAiF,KAIAzC,EAEA1D,KAFA0D,GACAuE,EACAjI,KADAiI,QAIA0D,EAGA1D,EAHA0D,QACAgF,EAEA1I,EAFA0I,SACArJ,EACAW,EADAX,OAGE6L,EAAShP,EAAUwH,EAAQoB,GAAG,IAChCqG,EAASjP,EAAUwH,EAAQqB,GAAG,IAE5BqF,EAASjN,KAAKuB,MAChByM,EAAOhM,IAAM+L,EAAO/L,IACpBgM,EAAOlM,KAAOiM,EAAOjM,MACrBmH,EAEE8D,EAAKxN,WACP0C,EAAKsJ,EAASvO,MAAM2D,MAAOuB,EAAOhD,IAAI,WAEpC8N,EAAKzN,WACP0C,EAAKsJ,EAASvO,MAAM4D,OAAQsB,EAAOhD,IAAI,YAGrCoN,EAAM1O,EAAOU,GACb2P,EAAY3P,EAAGtB,MAEfwP,EAAS,CACXxK,IAAKM,EAAiB2L,EAAUjM,KAAOsK,EAAIpN,IAAI,QAC/C4C,KAAMQ,EAAiB2L,EAAUnM,MAAQwK,EAAIpN,IAAI,SACjDyB,MAAO2B,EAAiB2L,EAAUtN,OAAS2L,EAAIpN,IAAI,UACnD0B,OAAQ0B,EAAiB2L,EAAUrN,QAAU0L,EAAIpN,IAAI,YAGnDE,EAAY,CACd8M,OAAQ/M,EACJF,EAAarB,EAAO2N,KAExBmC,aAAcvO,EACVF,EAAaiD,KAKf4K,EAAStM,EACXpB,EAAU8M,OAAO,GACjB9M,EAAU8M,OAAO,GACjBa,EACAC,EACAC,EACAnM,EACAC,GAGEmN,EAAUnP,EAAUT,GAhEZ6P,EAqEGhC,EACb,CACI1L,EALSyN,EAAQpM,KAAOiL,EAAK,EAM7BrM,EALOwN,EAAQlM,IAAMgL,EAAK,GAO9BZ,EAAahN,EAAUsO,eAG3B,MAAO,CACHtO,YACA2N,KACAC,KACAF,SACAjG,OAAQ,CACJpG,EAnFM0N,EAqEN1N,EAeAC,EApFMyN,EAqEHzN,GAiBPuI,SACAgE,SACAnM,OACAC,OACAyL,mBAKZ,SAASK,EAAY/O,GAEjB,IAAMd,EAAK,UAAAS,OAAaK,EAAIsQ,OAAjB,KAEX,MAAO,CACHhP,UAAWpC,EACXqR,eAAgBrR,EAChBsR,aAActR,EACduR,YAAavR,EACbwR,WAAYxR,GAIpB,SAASmP,EAAuBsC,EAAOvC,GAAQ,IAGvCzL,EACAgO,EADAhO,EAAGC,EACH+N,EADG/N,EAHoCgO,EAAAC,EAMhBzC,EANgB,GAMpC0C,EANoCF,EAAA,GAMjCG,EANiCH,EAAA,GAM9BrX,EAN8BqX,EAAA,GAM3BpX,EAN2BoX,EAAA,GAQ3C,MAAO,CACHjO,EAAGmO,EAAInO,EAAIpJ,EAAIqJ,EATwBgO,EAAA,GAUvChO,EAAGmO,EAAIpO,EAAInJ,EAAIoJ,EAVwBgO,EAAA,IAe/C,SAAStC,EAAaJ,GAUlB,IAAM8C,EAAI,CACN,CAAC9C,EAAI,GAAIA,EAAI,GAAIA,EAAI,IACrB,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IACrB,CAAC,EAAG,EAAG,IAIX,GAAI8C,EAAE3S,SAAW2S,EAAE,GAAG3S,OAAtB,CAUA,IALA,IAAM4S,EAAMD,EAAE3S,OAER6S,EAAI,GACNC,EAAI,GAECjY,EAAI,EAAGA,EAAI+X,EAAK/X,GAAK,EAAG,CAE7BgY,EAAEA,EAAE7S,QAAU,GACd8S,EAAEA,EAAE9S,QAAU,GACd,IAAK,IAAI+S,EAAI,EAAGA,EAAIH,EAAKG,GAAK,EAItBF,EAAEhY,GAAGkY,GADLlY,GAAKkY,EACK,EAEA,EAIdD,EAAEjY,GAAGkY,GAAKJ,EAAE9X,GAAGkY,GAKvB,IAAK,IAAIlY,EAAI,EAAGA,EAAI+X,EAAK/X,GAAK,EAAG,CAE7B,IAAIwR,EAAIyG,EAAEjY,GAAGA,GAGb,GAAU,IAANwR,EAAS,CAET,IAAK,IAAI2G,EAAKnY,EAAI,EAAGmY,EAAKJ,EAAKI,GAAM,EAEjC,GAAiB,IAAbF,EAAEE,GAAInY,GAAU,CAEhB,IAAK,IAAIkY,EAAI,EAAGA,EAAIH,EAAKG,IACrB1G,EAAIyG,EAAEjY,GAAGkY,GACTD,EAAEjY,GAAGkY,GAAKD,EAAEE,GAAID,GAChBD,EAAEE,GAAID,GAAK1G,EACXA,EAAIwG,EAAEhY,GAAGkY,GACTF,EAAEhY,GAAGkY,GAAKF,EAAEG,GAAID,GAChBF,EAAEG,GAAID,GAAK1G,EAGf,MAMR,GAAU,KAFVA,EAAIyG,EAAEjY,GAAGA,IAGL,OAKR,IAAK,IAAIkY,EAAI,EAAGA,EAAIH,EAAKG,IACrBD,EAAEjY,GAAGkY,GAAKD,EAAEjY,GAAGkY,GAAK1G,EACpBwG,EAAEhY,GAAGkY,GAAKF,EAAEhY,GAAGkY,GAAK1G,EAMxB,IAAK,IAAI2G,EAAK,EAAGA,EAAKJ,EAAKI,IAEvB,GAAIA,GAAMnY,EAAV,CAKAwR,EAAIyG,EAAEE,GAAInY,GAMV,IAAK,IAAIkY,EAAI,EAAGA,EAAIH,EAAKG,IACrBD,EAAEE,GAAID,IAAM1G,EAAIyG,EAAEjY,GAAGkY,GACrBF,EAAEG,GAAID,IAAM1G,EAAIwG,EAAEhY,GAAGkY,IAOjC,MAAO,CACHF,EAAE,GAAG,GAAIA,EAAE,GAAG,GACdA,EAAE,GAAG,GAAIA,EAAE,GAAG,GACdA,EAAE,GAAG,GAAIA,EAAE,GAAG,KAItB,SAASlB,EAAesB,EAAOC,GAgB3B,IAdA,IAAMC,EAAK,CACP,CAACF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC3B,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC3B,CAAC,EAAG,EAAG,IAGLG,EAAK,CACP,CAACF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC3B,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC3B,CAAC,EAAG,EAAG,IAGLjP,EAAS,GAEN8O,EAAI,EAAGA,EAAIK,EAAGpT,OAAQ+S,IAAK,CAChC9O,EAAO8O,GAAK,GACZ,IAAK,IAAIM,EAAI,EAAGA,EAAIF,EAAG,GAAGnT,OAAQqT,IAAK,CAEnC,IADA,IAAIC,EAAM,EACDzY,EAAI,EAAGA,EAAIsY,EAAGnT,OAAQnF,IAC3ByY,GAAOH,EAAGtY,GAAGwY,GAAKD,EAAGL,GAAGlY,GAE5BoJ,EAAO8O,GAAGjU,KAAKwU,IAIvB,MAAO,CACHrP,EAAO,GAAG,GAAIA,EAAO,GAAG,GACxBA,EAAO,GAAG,GAAIA,EAAO,GAAG,GACxBA,EAAO,GAAG,GAAIA,EAAO,GAAG,IC9sBzB,IAAMsP,EAAmB,CAC5B,SAAU,UACV,QAAS,OACT,OAAQ,UACR,WAAY,OACZ,OAAQ,KAGL,SAASC,EAAiBpY,GAC7B,OAAO0E,SAAS2T,gBAAgB,6BAA8BrY,GAG3D,SAASsY,IACZ,OAAOF,EAAiB,OAAOE,kBAG5B,SAASC,GAAsBC,EAAWC,GAE7C,OADmBA,EAAEC,gBAAkBJ,KACrBK,UAAUC,SACxBJ,EAAUE,gBAAkBJ,KAI7B,SAASO,GAAehZ,GAC3B,gBAAAqG,OAAiBrG,EAAEwX,EAAnB,KAAAnR,OAAwBrG,EAAEyX,EAA1B,KAAApR,OAA+BrG,EAAEC,EAAjC,KAAAoG,OAAsCrG,EAAEE,EAAxC,KAAAmG,OAA6CrG,EAAEoR,EAA/C,KAAA/K,OAAoDrG,EAAEiC,EAAtD,KAGG,SAASgX,GAAQrE,EAAKsE,EAAK7P,EAAGC,GACjC,IAAM6P,EAAKD,EAAIE,iBAGf,OAFAD,EAAG9P,EAAIA,EACP8P,EAAG7P,EAAIA,EACA6P,EAAGE,gBAAgBzE,GAGvB,SAAS0E,GAAY7B,GAExB,IAAMD,EAAIiB,IASV,OAPAjB,EAAEA,EAAIC,EAAED,EACRA,EAAEC,EAAIA,EAAEA,EACRD,EAAEvX,EAAIwX,EAAExX,EACRuX,EAAEtX,EAAIuX,EAAEvX,EACRsX,EAAEpG,EAAIqG,EAAErG,EACRoG,EAAEvV,EAAIwV,EAAExV,EAEDuV,2uBCtCX,IAAM+B,GAAM,yCACNC,GAAQ,eAEd,SAASC,GAAUC,GAMf,IAJA,IAAIzR,EAAQsR,GAAII,UAAY,EAEtBC,EAAa,GAEX3R,EAAQsR,GAAIM,KAAKH,IAAQ,CAE7B,IAAMI,EAAM7R,EAAM,GACZ8R,EAAQD,EAAIE,cAGZ9V,EAAO+D,EAAM,GACdgS,QAAQ,WAAY,QACpBA,QAAQ,MAAO,KAEpBL,EAAW/V,KAAK,CACZqW,SAAUJ,IAAQC,EAClB5Y,IAAK4Y,EACLD,IAAKA,EACLK,OAAQjW,EAAKkW,OAAO5R,MAAMgR,IAAO3W,IAAI,SAAAM,GACjC,IAAKkX,MAAMlX,GACP,OAAOgI,OAAOhI,OAM9B,OAAOyW,woCCfX,IAEMU,GAAU,oBAEKC,cAEjB,SAAAA,EAAYrT,EAAIzB,EAASnC,GAAY,IAAAkQ,EAAA,mGAAAgH,CAAAhX,KAAA+W,IACjC/G,EAAAiH,GAAAjX,KAAAkX,GAAAH,GAAAxa,KAAAyD,KAAM0D,EAAI5D,KACLsQ,OAAOnO,GAFqB+N,+OAFCnI,mFAOhC9E,GAAK,IAECkF,EAAYjI,KAAZiI,QAGJ8C,EAEA9C,EAFA8C,YACAI,EACAlD,EADAkD,UAGEgM,EAAUpC,EAAiB,KACjC5J,EAAU0F,YAAYsG,GAVf,IAAAC,EAiBHrU,EAAIsU,UAJGlF,EAbJiF,EAaHrR,MACQqM,EAdLgF,EAcHpR,OACGM,EAfA8Q,EAeHvR,EACGU,EAhBA6Q,EAgBHtR,EAGEwR,EAAQpC,GAAsBnS,EAAKoI,GACnCoM,EAAMxC,EAAiB,QAEf,CACV,CAAC,QAAS5C,GACV,CAAC,SAAUC,GACX,CAAC,IAAK9L,GACN,CAAC,IAAKC,GACN,CAAC,OAAQ,0BACT,CAAC,SAAU,WACX,CAAC,mBAAoB,OACrB,CAAC,gBAAiB,sBAClB,CAAC,YAAaiP,GAAe8B,KAG3BpY,QAAQ,SAAAwF,GACV6S,EAAIC,aAAa9S,EAAK,GAAIA,EAAK,MAGnC,IAAM+S,EAAe1C,EAAiB,KAClC2C,EAAkB3C,EAAiB,KACnC4C,EAAQ5C,EAAiB,KAE7B4C,EAAM9G,YAAY0G,GAClBJ,EAAQtG,YAAY8G,GACpBR,EAAQtG,YAAY6G,GACpBP,EAAQtG,YAAY4G,GA7Cb,IAAAG,EAoDHL,EAAIF,UAJDQ,EAhDAD,EAgDH/R,EACGiS,EAjDAF,EAiDH9R,EACOiS,EAlDJH,EAkDH7R,MACQiS,EAnDLJ,EAmDH5R,OAGEiS,EAAS/C,GAAsBqC,EAAKA,EAAIrT,YAExCyH,EAAU,CACZoB,GAAI0I,GAAQwC,EAAQ9M,EAAW0M,EAAIC,GACnC9K,GAAIyI,GAAQwC,EAAQ9M,EAAW0M,EAAKE,EAAID,GACxC5K,GAAIuI,GAAQwC,EAAQ9M,EAAW0M,EAAKE,EAAID,EAAKE,GAC7C/K,GAAIwI,GAAQwC,EAAQ9M,EAAW0M,EAAIC,EAAKE,GACxC3K,GAAIoI,GAAQwC,EAAQ9M,EAAW0M,EAAKE,EAAK,EAAGD,GAC5C1K,GAAIqI,GAAQwC,EAAQ9M,EAAW0M,EAAKE,EAAK,EAAGD,EAAKE,GACjDnL,GAAI4I,GAAQwC,EAAQ9M,EAAW0M,EAAIC,EAAKE,EAAK,GAC7ClL,GAAI2I,GAAQwC,EAAQ9M,EAAW0M,EAAKE,EAAID,EAAKE,EAAK,GAElD1J,QAAS,IAGP4J,EAAQ9S,KAAKuB,MACfgF,EAAQoB,GAAGjH,EAAI6F,EAAQqB,GAAGlH,EAC1B6F,EAAQoB,GAAGlH,EAAI8F,EAAQqB,GAAGnH,GAG9B8F,EAAQ2C,QAAQzI,EAAI8F,EAAQmB,GAAGjH,EApFpB,GAoFqCT,KAAK2B,IAAImR,GACzDvM,EAAQ2C,QAAQxI,EAAI6F,EAAQmB,GAAGhH,EArFpB,GAqFqCV,KAAK4B,IAAIkR,GAEzD,IAAMC,EAAapD,EAAiB,QAEhChK,IAEAoN,EAAWC,GAAGC,QAAQhb,MAAQsO,EAAQmB,GAAGjH,EACzCsS,EAAWG,GAAGD,QAAQhb,MAAQsO,EAAQmB,GAAGhH,EACzCqS,EAAWI,GAAGF,QAAQhb,MAAQsO,EAAQ2C,QAAQzI,EAC9CsS,EAAWK,GAAGH,QAAQhb,MAAQsO,EAAQ2C,QAAQxI,EAE9CqS,EAAWX,aAAa,SAAU,WAClCW,EAAWX,aAAa,mBAAoB,OAC5CW,EAAWX,aAAa,gBAAiB,sBAEzCE,EAAgB7G,YAAYsH,IAGhCrb,OAAOkR,KAAKrC,GAASzM,QAAQ,SAAAvB,GACzB,IAAM+C,EAAOiL,EAAQhO,GACrBgO,EAAQhO,GAg/BpB,SAAuBtB,EAAGiB,GAEtB,IAAMsG,EAAUmR,EAAiB,UAE3B0D,EAAQ,CACVnS,GAAIjK,EACJkK,GAAIjJ,EACJJ,EAAG,IACHwb,KAAM,yBACNC,OAAQ,UACRC,gBAAiB,sBAOrB,OAJA9b,OAAOkR,KAAKyK,GAAOpZ,IAAI,SAAA1B,GACnBiG,EAAQ4T,aAAa7Z,EAAK8a,EAAM9a,MAG7BiG,EAjgCgBiV,CAAcnY,EAAKmF,EAAGnF,EAAKoF,GACtCiF,GACA0M,EAAa5G,YAAYlF,EAAQhO,MAIzCb,OAAOiU,OAAO9I,EAAS,CACnBkP,UACAI,MACA5L,UACAwM,aACA7Q,OAAQvE,EAAImB,aAGhBlB,EAAOmU,GAASlI,GAAG,YAAajP,KAAKoI,cAChC6G,GAAG,aAAcjP,KAAKqI,kDAGpB,IAAA4I,EAKHjR,KAAKiI,QAFLkP,EAHGlG,EAGHkG,QACAhM,EAJG8F,EAIH9F,UAGJnI,EAAOmU,GACFpO,IAAI,YAAa/I,KAAKoI,cACtBW,IAAI,aAAc/I,KAAKqI,eAE5B8C,EAAU+F,YAAYiG,oCAGjBvJ,GAAG,IAOJjC,EAHA3L,KADAiI,QAIA0D,QAGED,EAAS1I,EAAO4K,EAAE5J,QAGlBkC,EAAOwF,EAAOkB,GAAGjB,EAAQoB,KAC3BrB,EAAOkB,GAAGjB,EAAQkB,KAClBnB,EAAOkB,GAAGjB,EAAQsB,KAClBvB,EAAOkB,GAAGjB,EAAQ0B,IAEhBlH,EAAOuF,EAAOkB,GAAGjB,EAAQoB,KAC3BrB,EAAOkB,GAAGjB,EAAQqB,KAClBtB,EAAOkB,GAAGjB,EAAQ0B,KAClB3B,EAAOkB,GAAGjB,EAAQkB,IAEhBsB,EAAYzC,EAAOkB,GAAGjB,EAAQoB,KAAOrB,EAAOkB,GAAGjB,EAAQ0B,KAAO3B,EAAOkB,GAAGjB,EAAQqB,IAClFoB,EAAa1C,EAAOkB,GAAGjB,EAAQoB,KAAOrB,EAAOkB,GAAGjB,EAAQkB,KAAOnB,EAAOkB,GAAGjB,EAAQsB,IACjFgB,EAAcvC,EAAOkB,GAAGjB,EAAQqB,KAAOtB,EAAOkB,GAAGjB,EAAQmB,KAAOpB,EAAOkB,GAAGjB,EAAQuB,IAClFgB,EAAexC,EAAOkB,GAAGjB,EAAQuB,KAAOxB,EAAOkB,GAAGjB,EAAQyB,KAAO1B,EAAOkB,GAAGjB,EAAQsB,IAEjFkE,EAAYnR,KAAKwP,UAAU,CAC7BtJ,OACAC,SA9BIqI,EAoCJxO,KAAKyO,aAAab,GAFf7B,EAlCCyC,EAkCJ3I,EACGmG,EAnCCwC,EAmCJ1I,EAGEgG,EAAW1G,KAAKuB,MAClBqF,EAAUmF,EAAUlF,OAAOnG,EAC3BiG,EAAUoF,EAAUlF,OAAOpG,GAU/B,OAPAsL,EAAUhD,UAAYA,EACtBgD,EAAU/C,WAAaA,EACvB+C,EAAUlD,YAAcA,EACxBkD,EAAUjD,aAAeA,EACzBiD,EAAUzF,OAASA,EACnByF,EAAUrF,SAAWA,EAEdqF,uCAGEvD,GAAG,IAGRzC,EACAnL,KAAKiI,QADLkD,UAGJ,OAAOsK,GACHtK,EAAUkK,eAAeC,UACzBnK,EACAyC,EAAE7B,QACF6B,EAAE5B,iDAIMtL,GAAM,IAAAoY,EAKd9Y,KAAKiI,QAFLzD,EAHcsU,EAGdtU,UACA2G,EAJc2N,EAId3N,UAIAtF,EAEAnF,EAFAmF,EACAC,EACApF,EADAoF,EAIEwL,EADU9M,EAAR4M,IACWkE,UAEbK,EAAKxK,EAAUyK,iBAKrB,OAJAD,EAAG9P,EAAIA,EACP8P,EAAG7P,EAAIA,EACPwL,EAAO1D,EAAI0D,EAAO7S,EAAI,EAEfkX,EAAGE,gBAAgBvE,kCAGvBjC,GAAY,IAGP0J,EAEJ/Y,KAFA0D,GACAuE,EACAjI,KADAiI,QAIAkD,EAMAlD,EANAkD,UACAoM,EAKAtP,EALAsP,IACA5L,EAIA1D,EAJA0D,QACAwM,EAGAlQ,EAHAkQ,WACAxG,EAEA1J,EAFA0J,OACAnN,EACAyD,EADAzD,UAGJ,IAAI5E,EAAQ+R,GAAZ,CAhBe,IAmBXqH,EAMArH,EANAqH,OACAC,EAKAtH,EALAsH,OACAzS,EAIAmL,EAJAnL,GACAC,EAGAkL,EAHAlL,GACAyS,EAEAvH,EAFAuH,GACAC,EACAxH,EADAwH,GAIA7H,EACA9M,EADA8M,OAGJ,GAAmB,SAAfjC,EAAuB,CAEvB,GAAW,IAAP7I,GAAmB,IAAPC,EAAU,OAG1B,IAAM2S,EAAKnE,IAEXmE,EAAGxL,EAAIpH,EACP4S,EAAG3a,EAAIgI,EAEP,IAAM4S,EAAkBD,EAAG7D,SAASjE,GAC/BiE,SAAS6D,EAAG9D,WAOjB,GALAyD,EAAQvB,aACJ,YACAhC,GAAe6D,IAGfC,GAAQP,GAEIQ,GAAmBR,GAE3B7Z,QAAQ,SAAAsa,GAER,IAAM7D,EAAKxK,EAAUyK,iBACfxE,EAAM8D,GAAsB6D,EAAQ7U,WAAYiH,GAAWmK,UACjEK,EAAG9P,EAAIqT,EACPvD,EAAG7P,EAAIqT,EACP/H,EAAIxD,EAAIwD,EAAI3S,EAAI,EAChB,IAAMgb,EAAQ9D,EAAGE,gBAAgBzE,GAG3BgI,EAAKnE,IAEXmE,EAAGxL,EAAIpH,EACP4S,EAAG3a,EAAIgI,EAEP,IAAM4S,EAAkBD,EAAG7D,SACvBL,GAAsBsE,EAAOA,EAAMtV,aACrCqR,SAAS6D,EAAG9D,WAEdkE,EAAMhC,aACF,YACAhC,GAAe6D,IAGdC,GAAQE,IACTE,GAAeF,EAAO,CAClB3T,EAAG4T,EAAM5T,EACTC,EAAG2T,EAAM3T,WAMrB4T,GAAeX,EAAS,CACpBlT,EAAGW,EACHV,EAAGW,IAKf,GAAmB,WAAf4I,EAAyB,KAAAsK,EAOrBpC,EAAIF,UAeR,GAbAuC,GACIrC,EACA5L,EACAwM,EACA,CACItS,EAdiB8T,EAGrB9T,EAYIC,EAfiB6T,EAIrB7T,EAYIC,MAhBiB4T,EAKrB5T,MAYIC,OAjBiB2T,EAMrB3T,QAaAmF,GAGAmO,GAAQP,GAEIQ,GAAmBR,GAE3B7Z,QAAQ,SAAAsa,GAEHF,GAAQE,IAETK,GAAYL,EAAO,CACfR,SACAC,SACAa,WAAYN,EAAMO,QAClBC,KAAMxV,EAAUwV,KAChB7O,YACAlD,mBAOZ4R,GAAYd,EAAS,CACjBC,SACAC,SACAa,WAAYtV,EAAU4M,IACtB4I,KAAMxV,EAAUwV,KAChB7O,YACAlD,YAIR8Q,EAAQvB,aACJ,YACAhC,GAAelE,IAGvBtR,KAAKiI,QAAQ0J,OAAS,4CAItB,OAAO3R,KAAKiI,QAAQkP,+CAGT3Q,EAAIC,GAAI,IAAAwT,EAcfja,KAAKiI,QAXLkD,EAHe8O,EAGf9O,UACAoM,EAJe0C,EAIf1C,IACA5L,EALesO,EAKftO,QACAwM,EANe8B,EAMf9B,WACAjR,EAPe+S,EAOf/S,KACAE,EARe6S,EAQf7S,IACA+K,EATe8H,EASf9H,GACAC,EAVe6H,EAUf7H,GACA5N,EAXeyV,EAWfzV,UACA0B,EAZe+T,EAYf/T,KACAC,EAbe8T,EAaf9T,KAIAmL,EAKA9M,EALA8M,OACA4I,EAIA1V,EAJA0V,SACAC,EAGA3V,EAHA2V,SACQC,EAER5V,EAFAwU,OACQqB,EACR7V,EADAyU,OAGIvV,EAAO1D,KAAP0D,GAxBW4W,EA6Bf/C,EAAIF,UAFG/E,EA3BQgI,EA2BfvU,MACQyM,EA5BO8H,EA4BftU,OAMJ,GAHAsM,EAAWH,EAAK3L,EAChBgM,EAAYJ,EAAK3L,IAEbrB,KAAKmV,IAAIjI,GApaJ,GAoa4BlN,KAAKmV,IAAI/H,GAparC,GAoaT,CAEA,IAAMwG,EAAS1G,EAAWH,EACtB8G,EAASzG,EAAYJ,EAGzB8H,EAASlG,EAAIgF,EACbkB,EAASjG,EAAI,EACbiG,EAASzd,EAAI,EACbyd,EAASxd,EAAIuc,EACbiB,EAAStM,EAAI,EACbsM,EAASzb,EAAI,EAGb0b,EAASvM,EAAIwM,EACbD,EAAS1b,EAAI4b,EAGb,IAAMG,EAAcL,EACf5E,SAAS2E,GACT3E,SAAS4E,EAAS7E,WAEjBmF,EAAMnJ,EAAOiE,SAASiF,GAE5B9W,EAAG8T,aACC,YACAhC,GAAeiF,IAGnBza,KAAKiI,QAAQ0J,OAAS,CAClBqH,SACAC,UAGJW,GACIrC,EACA5L,EACAwM,EACA,CACItS,EAAGK,EAAOgB,EAAOV,EAAKU,EACtBpB,EAAGK,EAAOiB,EAAMX,EAAKW,EACrBrB,MAAOuM,EACPtM,OAAQwM,GAEZrH,yCAIK3E,EAAIC,GAAI,IAAAiU,EAKb1a,KAAKiI,QAHLkD,EAFauP,EAEbvP,UACA3G,EAHakW,EAGblW,UACA2S,EAJauD,EAIbvD,QAIA7F,EAKA9M,EALA8M,OACA6I,EAIA3V,EAJA2V,SACAD,EAGA1V,EAHA0V,SACAS,EAEAnW,EAFAmW,cACA7H,EACAtO,EADAsO,aAGJoH,EAAStM,EAAIpH,EACb0T,EAASzb,EAAIgI,EAEb,IAAMmU,EAAcV,EAAS3E,SAASoF,GAEtCxD,EAAQK,aACJ,YACAhC,GAAeoF,IAGnB9H,EAAalF,EAAIkF,EAAarU,EAAI,EAzBjB,IAAAoc,EA0BApF,GACb3C,EAAawC,UACbnK,EACA3E,EACAC,GAJIZ,EA1BSgV,EA0BThV,EAAGC,EA1BM+U,EA0BN/U,EAOXqU,EAASvM,EAAI/H,EACbsU,EAAS1b,EAAIqH,EAEb,IAAMgV,EAAcX,EAAS5E,SAASjE,GAEtCtR,KAAK0D,GAAG8T,aACJ,YACAhC,GAAesF,IAGnB9a,KAAKiI,QAAQ0J,OAAS,CAClBnL,GAAIX,EACJY,GAAIX,EACJoT,GAAI1S,EACJ2S,GAAI1S,0CAIGiH,GAAS,IAAAqN,EAMhB/a,KAAKiI,QAHLgE,EAHgB8O,EAGhB9O,OACAzH,EAJgBuW,EAIhBvW,UACA2S,EALgB4D,EAKhB5D,QAIA7F,EAMA9M,EANA8M,OACAqJ,EAKAnW,EALAmW,cACA7H,EAIAtO,EAJAsO,aACAqH,EAGA3V,EAHA2V,SACAD,EAEA1V,EAFA0V,SACAnH,EACAvO,EADAuO,UAGEhM,EAAMI,EAAa/B,KAAK2B,IAAI2G,IAC9B1G,EAAMG,EAAa/B,KAAK4B,IAAI0G,IAGhCyM,EAASvM,EAAI3B,EAAOpG,EACpBsU,EAAS1b,EAAIwN,EAAOnG,EAEpBiN,EAAUiB,EAAIjN,EACdgM,EAAUkB,EAAIjN,EACd+L,EAAUtW,GAAMuK,EAChB+L,EAAUrW,EAAIqK,EAEd,IAAMiU,EAAab,EAAS5E,SAASxC,GAChCwC,SAAS4E,EAAS7E,WAClBC,SAASoF,GAEdxD,EAAQK,aACJ,YACAhC,GAAewF,IAGnBd,EAAStM,EAAI3B,EAAOgP,KACpBf,EAASzb,EAAIwN,EAAOiP,KAEpBpI,EAAalF,EAAIkF,EAAarU,EAAI,EAClC,IAAM0c,EAAerI,EAAawC,UAC7BC,SAASxC,GACTwC,SAASzC,GAKRsI,EAHelB,EAAS3E,SAAS4F,GAClC5F,SAAS2E,EAAS5E,WAEOC,SAASjE,GAEvCtR,KAAK0D,GAAG8T,aACJ,YACAhC,GAAe4F,sCAIbla,GAAQ,IAGVgF,EAEAhF,EAFAgF,KACAC,EACAjF,EADAiF,KAII4S,EAEJ/Y,KAFA0D,GACAuE,EACAjI,KADAiI,QAIAkD,EAIAlD,EAJAkD,UACAoM,EAGAtP,EAHAsP,IACAJ,EAEAlP,EAFAkP,QACA7P,EACAW,EADAX,OAGE+T,EAAQrb,KAAK0D,GAAG2T,UAGf4D,EAIHI,EAJAxV,EACGqV,EAGHG,EAHAvV,EACOwV,EAEPD,EAFAtV,MACQwV,EACRF,EADArV,OAzBUwV,EAiCVjE,EAAIF,UAJGlF,EA7BGqJ,EA6BVzV,MACQqM,EA9BEoJ,EA8BVxV,OACGyV,EA/BOD,EA+BV3V,EACG6V,EAhCOF,EAgCV1V,EAGEsV,EAAWlG,GAAsB6D,EAASzR,GAC1CqU,EAAWpE,EAAIrT,WAEfM,EAAY,CACd8M,OAAQ8J,EACRhK,IAAK8D,GAAsB6D,EAAS5N,GACpCwP,cAAezF,GAAsBiC,EAASA,EAAQjT,YACtD+T,OAAQ/C,GAAsByG,EAAUxQ,GACxCyQ,UAAW1G,GAAsByG,EAAUA,EAASzX,YACpD4O,aAAcoC,GAAsB5N,EAAQ6D,GAC5CgP,SAAUlF,IACViF,SAAUjF,IACVlC,UAAWkC,IACX+D,OAAS9S,EAAOoV,EAAOL,EAAOA,EAC9BhC,OAAS9S,EAAOoV,EAAOL,EAAOA,EAC9BlB,KAAMqB,GAGJQ,EAAK1J,EAAK,EACZ2J,EAAK1J,EAAK,EAER2J,EAAYtG,GACdP,GAAsBqC,EAAKpM,GAC3BA,EACAsQ,EAASI,EACTH,EAAQI,GAGNE,EAAgBvG,GAClB2F,EACAjQ,EACA8P,EAAOK,EAAO,EACdJ,EAAOK,EAAO,GAOlB,OAJAhC,GAAmBR,GAAS7Z,QAAQ,SAAAsa,GAChCA,EAAMO,QAAU7E,GAAsBsE,EAAOrO,KAG1C,CACH3G,YACA2N,KACAC,KACAnG,OAAQ,CACJpG,EAAGkW,EAAUlW,EACbC,EAAGiW,EAAUjW,EACbmV,KAAMe,EAAcnW,EACpBqV,KAAMc,EAAclW,GAExBoB,KAAMuU,EACNrU,IAAKsU,EACLxV,OACAC,iBAKZ,SAASuT,GAAeX,EAASrY,GAAM,IAG/BmF,EAEAnF,EAFAmF,EACAC,EACApF,EADAoF,EAGEmW,EAAQ,GAEd,OAAQlD,EAAQmD,QAAQC,eAEpB,IAAK,MACL,IAAK,QACL,IAAK,OACL,IAAK,OAED,IAAMC,EAAOzU,OAAOoR,EAAQsD,aAAa,MAAQxW,EAC7CyW,EAAO3U,OAAOoR,EAAQsD,aAAa,MAAQvW,EAE/CmW,EAAM5b,KACF,CAAC,IAAK+b,GACN,CAAC,IAAKE,IAGV,MAEJ,IAAK,SACL,IAAK,UAED,IAAMF,EAAOzU,OAAOoR,EAAQsD,aAAa,OAASxW,EAC9CyW,EAAO3U,OAAOoR,EAAQsD,aAAa,OAASvW,EAEhDmW,EAAM5b,KACF,CAAC,KAAM+b,GACP,CAAC,KAAME,IAGX,MAEJ,IAAK,OAED,IAAMC,EAAQ5U,OAAOoR,EAAQsD,aAAa,OAASxW,EAC/C2W,EAAQ7U,OAAOoR,EAAQsD,aAAa,OAASvW,EAC7C2W,EAAQ9U,OAAOoR,EAAQsD,aAAa,OAASxW,EAC7C6W,EAAQ/U,OAAOoR,EAAQsD,aAAa,OAASvW,EAEjDmW,EAAM5b,KACF,CAAC,KAAMkc,GACP,CAAC,KAAMC,GACP,CAAC,KAAMC,GACP,CAAC,KAAMC,IAGX,MAEJ,IAAK,UACL,IAAK,WAED,IACMlX,EADSmX,GAAY5D,EAAQsD,aAAa,WAC1Bhd,IAAI,SAAAqF,GAKtB,OAHAA,EAAK,GAAKiD,OAAOjD,EAAK,IAAMmB,EAC5BnB,EAAK,GAAKiD,OAAOjD,EAAK,IAAMoB,EAErBpB,EAAK8O,KAAK,OAClBA,KAAK,KAERyI,EAAM5b,KACF,CAAC,SAAUmF,IAGf,MAEJ,IAAK,OAED,IAAM0Q,EAAO6C,EAAQsD,aAAa,KAElCJ,EAAM5b,KAAK,CAAC,IDvtBjB,SAAkBa,GAAQ,IAGzBgV,EAGAhV,EAHAgV,KACA1P,EAEAtF,EAFAsF,GACAC,EACAvF,EADAuF,GAGJ,IASI,IAPA,IAAM2P,EAAaH,GAAUC,GAEzB0G,EAAM,GACNC,EAAQ,IAERC,GAAe,EAEV1gB,EAAI,EAAG+F,EAAMiU,EAAW7U,OAAQnF,EAAI+F,EAAK/F,IAAK,CAEnD,IAAMsI,EAAO0R,EAAWha,GAGpBua,EAGAjS,EAHAiS,OACKL,EAEL5R,EAFA/G,IACA+Y,EACAhS,EADAgS,SAGEqG,EAAc,GAEpB,OAAQzG,GAEJ,IAAK,IAED,IAAK,IAAI1B,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,KAAAoI,EAAAC,GAEnCtG,EAAOxX,MAAMyV,EAAGA,EAAI,GAFe,GAE3C/O,EAF2CmX,EAAA,GAExClX,EAFwCkX,EAAA,GAI5CtG,IAAaoG,IACfjX,GAAKW,EACLV,GAAKW,GAGTsW,EAAY1c,KACRwF,EACAC,GAGJgX,GAAe,EAEnB,MAEJ,IAAK,IAED,IAAK,IAAIlI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,CAElD,IAAMsI,EAAMvG,EAAOxX,MAAMyV,EAAGA,EAAI,GAE3B8B,IACDwG,EAAI,GAAKA,EAAI,GAAK1W,EAClB0W,EAAI,GAAKA,EAAI,GAAKzW,GAGtBsW,EAAY1c,KAAZsC,MAAAoa,EAAWI,GAASD,IAExB,MAEJ,IAAK,IAED,IAAK,IAAItI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,CAElD,IAAMsI,EAAMvG,EAAOxX,MAAMyV,EAAGA,EAAI,GAE3B8B,IACDwG,EAAI,GAAKA,EAAI,GAAK1W,EAClB0W,EAAI,GAAKA,EAAI,GAAKzW,EAClByW,EAAI,GAAKA,EAAI,GAAK1W,EAClB0W,EAAI,GAAKA,EAAI,GAAKzW,EAClByW,EAAI,GAAKA,EAAI,GAAK1W,EAClB0W,EAAI,GAAKA,EAAI,GAAKzW,GAGtBsW,EAAY1c,KAAZsC,MAAAoa,EAAWI,GAASD,IAExB,MAEJ,IAAK,IAED,IAAK,IAAItI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,CAElD,IAAMsI,EAAMvG,EAAOxX,MAAMyV,EAAGA,EAAI,GAE3B8B,IACDwG,EAAI,IAAM1W,GAGduW,EAAY1c,KAAK6c,EAAI,IAGzB,MAEJ,IAAK,IAED,IAAK,IAAItI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,CAElD,IAAMsI,EAAMvG,EAAOxX,MAAMyV,EAAGA,EAAI,GAE3B8B,IACDwG,EAAI,IAAMzW,GAEdsW,EAAY1c,KAAK6c,EAAI,IAGzB,MAEJ,IAAK,IACL,IAAK,IAED,IAAK,IAAItI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,KAAAwI,EAAAH,GAEnCtG,EAAOxX,MAAMyV,EAAGA,EAAI,GAFe,GAE3C/O,EAF2CuX,EAAA,GAExCtX,EAFwCsX,EAAA,GAI7C1G,IACD7Q,GAAKW,EACLV,GAAKW,GAGTsW,EAAY1c,KACRwF,EACAC,GAGR,MAGJ,IAAK,IACL,IAAK,IAED,IAAK,IAAI8O,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,KAAAyI,EAAAJ,GAEzBtG,EAAOxX,MAAMyV,EAAGA,EAAI,GAFK,GAE3CwD,EAF2CiF,EAAA,GAEvC/E,EAFuC+E,EAAA,GAEnC9E,EAFmC8E,EAAA,GAE/B7E,EAF+B6E,EAAA,GAI7C3G,IACD0B,GAAM5R,EACN8R,GAAM7R,EACN8R,GAAM/R,EACNgS,GAAM/R,GAGVsW,EAAY1c,KACR+X,EACAE,EACAC,EACAC,GAGR,MAEJ,IAAK,IAEDqE,EADAlG,EAAO,GAAK,GAKpBiG,GAAOlY,EAAK4R,IAAMyG,EAAYvJ,KAAK,KAAOqJ,EAG9C,OAAOD,EAET,MAAOU,GACL9d,GAAK,uBAAyB8d,IC8iBTC,CACb,CACIrH,OACA1P,GAAIX,EACJY,GAAIX,MAWpBmW,EAAM/c,QAAQ,SAAAwF,GACVqU,EAAQvB,aAAa9S,EAAK,GAAIA,EAAK,MAI3C,SAASmV,GAAYd,EAASrY,GAAM,IAG5BsY,EAKAtY,EALAsY,OACAC,EAIAvY,EAJAuY,OACAe,EAGAtZ,EAHAsZ,KACAF,EAEApZ,EAFAoZ,WACA3O,EACAzK,EADAyK,UAIOqS,EAEPxD,EAFAjU,MACQ0X,EACRzD,EADAhU,OAGEiW,EAAQ,GAER7K,EAAM8D,GAAsB6D,EAAS5N,GACrCuS,EAAW5D,EAAWxE,UAAUC,SAASnE,GAE/C,OAAQ2H,EAAQmD,QAAQC,eAEpB,IAAK,OAED,IAAMtW,EAAIkT,EAAQlT,EAAEwS,QAAQhb,MACxByI,EAAIiT,EAAQjT,EAAEuS,QAAQhb,MAHjBsgB,EAQLlI,GACAiI,EACAvS,EACAtF,EACAC,GANGsW,EANEuB,EAML9X,EACGyW,EAPEqB,EAOL7X,EAQJmW,EAAM5b,KACF,CAAC,IAAK+b,GAAQpD,EAAS,EAAIwE,EAAO,IAClC,CAAC,IAAKlB,GAAQrD,EAAS,EAAIwE,EAAO,KAGtC,MAEJ,IAAK,SAED,IAAMvgB,EAAI6b,EAAQ7b,EAAEmb,QAAQhb,MACxBiJ,EAAKyS,EAAQzS,GAAG+R,QAAQhb,MACxBkJ,EAAKwS,EAAQxS,GAAG8R,QAAQhb,MACxBugB,EAAO1gB,GAAKkI,KAAKmV,IAAIvB,GAAU5T,KAAKmV,IAAItB,IAAW,EAL5C4E,EAUPpI,GACAiI,EACAvS,EACA7E,EACAC,GANG6V,EARIyB,EAQPhY,EACGyW,EATIuB,EASP/X,EAQJmW,EAAM5b,KACF,CAAC,IAAKud,GACN,CAAC,KAAMxB,GACP,CAAC,KAAME,IAGX,MAEJ,IAAK,QACL,IAAK,OAED,IAAMvW,EAAQgT,EAAQhT,MAAMsS,QAAQhb,MAChC2I,EAAS+S,EAAQ/S,OAAOqS,QAAQhb,MAChCwI,EAAIkT,EAAQlT,EAAEwS,QAAQhb,MACtByI,EAAIiT,EAAQjT,EAAEuS,QAAQhb,MALjBygB,EAULrI,GACAiI,EACAvS,EACAtF,EACAC,GANGsW,EARE0B,EAQLjY,EACGyW,EATEwB,EASLhY,EAQJ4X,EAAS9P,EAAI8P,EAASjf,EAAI,EAjBjB,IAAAsf,EAsBLtI,GACAiI,EACAvS,EACApF,EACAC,GANGgY,EApBED,EAoBLlY,EACGoY,EArBEF,EAqBLjY,EAQEwM,EAAWlN,KAAKmV,IAAIyD,GACtBxL,EAAYpN,KAAKmV,IAAI0D,GAEzBhC,EAAM5b,KACF,CAAC,IAAK+b,GAAQpD,EAAS,EAAI1G,EAAW,IACtC,CAAC,IAAKgK,GAAQrD,EAAS,EAAIzG,EAAY,IACvC,CAAC,QAASF,GACV,CAAC,SAAUE,IAGf,MAEJ,IAAK,UAED,IAAM0L,EAAKnF,EAAQmF,GAAG7F,QAAQhb,MAC1B4J,EAAK8R,EAAQ9R,GAAGoR,QAAQhb,MACxBiJ,EAAKyS,EAAQzS,GAAG+R,QAAQhb,MACxBkJ,EAAKwS,EAAQxS,GAAG8R,QAAQhb,MALhB8gB,EAUR1I,GACAiI,EACAvS,EACA7E,EACAC,GANG6X,EARKD,EAQRtY,EACGwY,EATKF,EASRrY,EAQJ4X,EAAS9P,EAAI8P,EAASjf,EAAI,EAjBd,IAAA6f,EAsBR7I,GACAiI,EACAvS,EACA+S,EACAjX,GANGsX,EApBKD,EAoBRzY,EACG2Y,EArBKF,EAqBRxY,EAQJmW,EAAM5b,KACF,CAAC,KAAM+E,KAAKmV,IAAIgE,IAChB,CAAC,KAAMnZ,KAAKmV,IAAIiE,IAChB,CAAC,KAAMJ,GACP,CAAC,KAAMC,IAGX,MAEJ,IAAK,OAED,IAAM9B,EAAQxD,EAAQX,GAAGC,QAAQhb,MAC7Bmf,EAAQzD,EAAQT,GAAGD,QAAQhb,MAC3Bof,EAAQ1D,EAAQR,GAAGF,QAAQhb,MAC3Bqf,EAAQ3D,EAAQP,GAAGH,QAAQhb,MALtBohB,EAULhJ,GACAiI,EACAvS,EACAoR,EACAC,GANGkC,EARED,EAQL5Y,EACG8Y,EATEF,EASL3Y,EATK8Y,EAoBLnJ,GACAiI,EACAvS,EACAsR,EACAC,GANGmC,GAlBED,EAkBL/Y,EACGiZ,GAnBEF,EAmBL9Y,EAQJmW,EAAM5b,KACF,CAAC,KAAMqe,GACP,CAAC,KAAMC,GACP,CAAC,KAAME,IACP,CAAC,KAAMC,KAGX,MAEJ,IAAK,UACL,IAAK,WAED,IACMtZ,GADSmX,GAAY5D,EAAQsD,aAAa,WAC1Bhd,IAAI,SAAAqF,GAAQ,IAAAqa,EAK1BtJ,GACAiI,EACAvS,EACAxD,OAAOjD,EAAK,IACZiD,OAAOjD,EAAK,KANZmB,EAH0BkZ,EAG1BlZ,EACAC,EAJ0BiZ,EAI1BjZ,EAWJ,OAHApB,EAAK,GAAKmB,EACVnB,EAAK,GAAKoB,EAEHpB,EAAK8O,KAAK,OAElBA,KAAK,KAERyI,EAAM5b,KAAK,CAAC,SAAUmF,KAEtB,MAEJ,IAAK,OAED,IAAM0Q,GAAO6C,EAAQsD,aAAa,KAElCJ,EAAM5b,KAAK,CAAC,IDtxBjB,SAAoBa,GAAQ,IAG3BgV,EAGAhV,EAHAgV,KACAwH,EAEAxc,EAFAwc,SACAvS,EACAjK,EADAiK,UAGJ,IAWI,IATA,IAAMiL,EAAaH,GAAUC,GAEzB0G,EAAM,GACNC,EAAQ,IAENpC,EAAM,GAERqC,GAAe,EAEV1gB,EAAI,EAAG+F,EAAMiU,EAAW7U,OAAQnF,EAAI+F,EAAK/F,IAAK,CAEnD,IAAMsI,EAAO0R,EAAWha,GAGpBua,EAGAjS,EAHAiS,OACKL,EAEL5R,EAFA/G,IACA+Y,EACAhS,EADAgS,SAGJ,OAAQJ,GAEJ,IAAK,IAKD,IAFA,IAAMyG,EAAc,GAEXnI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,KAAAoK,EAAA/B,GAG9CtG,EAAOxX,MAAMyV,EAAGA,EAAI,GAH0B,GAE3CsJ,EAF2Cc,EAAA,GAEvC/X,EAFuC+X,EAAA,GAEnCC,EAFmCD,EAAA,GAEvBE,EAFuBF,EAAA,GAEPG,EAFOH,EAAA,GAEKnZ,EAFLmZ,EAAA,GAEQlZ,EAFRkZ,EAAA,GAK5CI,EAAOtJ,GAAY4H,GAErBhH,IACA0I,EAAKxR,EAAIwR,EAAK3gB,EAAI,GAR4B,IAAAoc,EAc9CpF,GACA2J,EACAjU,EACAtF,EACAC,GANGsW,EAZ2CvB,EAY9ChV,EACGyW,EAb2CzB,EAa9C/U,EAQJiX,EAAY1c,KACR+b,EACAE,GAGJ8C,EAAKxR,EAAIwR,EAAK3gB,EAAI,EA1BgC,IAAAkf,EA+B9ClI,GACA2J,EACAjU,EACA+S,EACAjX,GANGoY,EA7B2C1B,EA6B9C9X,EACGyZ,EA9B2C3B,EA8B9C7X,EAQJiX,EAAYwC,QACRF,EACAC,EACAL,EACAC,EACAC,GAIR1E,EAAIpa,KAAK0c,GACT,MAGJ,IAAK,IAKD,IAFA,IAAMA,EAAc,GAEXnI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,KAAA4K,EAAAvC,GAEnBtG,EAAOxX,MAAMyV,EAAGA,EAAI,GAFD,GAE3CwD,EAF2CoH,EAAA,GAEvClH,EAFuCkH,EAAA,GAEnCjH,EAFmCiH,EAAA,GAE/BhH,EAF+BgH,EAAA,GAI5CJ,GAFiBvZ,EAF2B2Z,EAAA,GAExB1Z,EAFwB0Z,EAAA,GAIrC1J,GAAY4H,IAErBhH,IACA0I,EAAKxR,EAAIwR,EAAK3gB,EAAI,GAP4B,IAAAof,EAa9CpI,GACA2J,EACAjU,EACAiN,EACAE,GANGiE,EAX2CsB,EAW9ChY,EACG2W,EAZ2CqB,EAY9C/X,EAZ8CgY,EAuB9CrI,GACA2J,EACAjU,EACAoN,EACAC,GANGiE,EArB2CqB,EAqB9CjY,EACG6W,EAtB2CoB,EAsB9ChY,EAtB8CiY,EAiC9CtI,GACA2J,EACAjU,EACAtF,EACAC,GANGsW,EA/B2C2B,EA+B9ClY,EACGyW,EAhC2CyB,EAgC9CjY,EAQJiX,EAAY1c,KACRkc,EACAC,EACAC,EACAC,EACAN,EACAE,GAIR7B,EAAIpa,KAAK0c,GACT,MAIJ,IAAK,IAKD,IAFA,IAAMA,EAAc,GAEXnI,EAAI,EAAGzS,EAAMwU,EAAOpV,OAAQqT,EAAIzS,EAAKyS,GAAK,EAAG,CAE3C/O,EAF2CoX,GAEtCtG,EAAOxX,MAAMyV,EAAGA,EAAI,GAFkB,UAI5CwK,EAAOtJ,GAAY4H,GAErBhH,IACA0I,EAAKxR,EAAIwR,EAAK3gB,EAAI,GAIf2d,EACH3G,GACA2J,EACAjU,EACAtF,EACA,GALAA,EAQJkX,EAAY1c,KACR+b,GAIR3B,EAAIpa,KAAK0c,GACT,MAIJ,IAAK,IAKD,IAFA,IAAMA,EAAc,GAEXnI,GAAI,EAAGzS,GAAMwU,EAAOpV,OAAQqT,GAAIzS,GAAKyS,IAAK,EAAG,CAE3C9O,EAF2CmX,GAEtCtG,EAAOxX,MAAMyV,GAAGA,GAAI,GAFkB,UAI5CwK,GAAOtJ,GAAY4H,GAErBhH,IACA0I,GAAKxR,EAAIwR,GAAK3gB,EAAI,GAIf6d,EACH7G,GACA2J,GACAjU,EACA,EACArF,GALAA,EAQJiX,EAAY1c,KACRic,GAIR7B,EAAIpa,KAAK0c,GACT,MAGJ,IAAK,IACL,IAAK,IAKD,IAFA,IAAMA,GAAc,GAEXnI,GAAI,EAAGzS,GAAMwU,EAAOpV,OAAQqT,GAAIzS,GAAKyS,IAAK,EAAG,KAAA6K,GAAAxC,GAEnCtG,EAAOxX,MAAMyV,GAAGA,GAAI,GAFe,GAI5CwK,IAFCvZ,EAF2C4Z,GAAA,GAExC3Z,EAFwC2Z,GAAA,GAIrC3J,GAAY4H,IAErBhH,IACA0I,GAAKxR,EAAIwR,GAAK3gB,EAAI,GAP4B,IAAAggB,GAa9ChJ,GACA2J,GACAjU,EACAtF,EACAC,GANGsW,EAX2CqC,GAW9C5Y,EACGyW,EAZ2CmC,GAY9C3Y,EAQJiX,GAAY1c,KACR+b,EACAE,GAIR7B,EAAIpa,KAAK0c,IACT,MAGJ,IAAK,IAKD,IAFA,IAAMA,GAAc,GAEXnI,GAAI,EAAGzS,GAAMwU,EAAOpV,OAAQqT,GAAIzS,GAAKyS,IAAK,EAAG,KAAA8K,GAAAzC,GAEnCtG,EAAOxX,MAAMyV,GAAGA,GAAI,GAFe,GAI5CwK,IAFCvZ,EAF2C6Z,GAAA,GAExC5Z,EAFwC4Z,GAAA,GAIrC5J,GAAY4H,IAErBhH,IAAaoG,IACbsC,GAAKxR,EAAIwR,GAAK3gB,EAAI,GAP4B,IAAAmgB,GAa9CnJ,GACA2J,GACAjU,EACAtF,EACAC,GANGsW,EAX2CwC,GAW9C/Y,EACGyW,EAZ2CsC,GAY9C9Y,EAQJiX,GAAY1c,KACR+b,EACAE,GAGJQ,GAAe,EAGnBrC,EAAIpa,KAAK0c,IACT,MAGJ,IAAK,IAKD,IAFA,IAAMA,GAAc,GAEXnI,GAAI,EAAGzS,GAAMwU,EAAOpV,OAAQqT,GAAIzS,GAAKyS,IAAK,EAAG,KAAA+K,GAAA1C,GAE3BtG,EAAOxX,MAAMyV,GAAGA,GAAI,GAFO,GAI5CwK,IAFChH,EAF2CuH,GAAA,GAEvCrH,EAFuCqH,GAAA,GAEnC9Z,EAFmC8Z,GAAA,GAEhC7Z,EAFgC6Z,GAAA,GAIrC7J,GAAY4H,IAErBhH,IACA0I,GAAKxR,EAAIwR,GAAK3gB,EAAI,GAP4B,IAAAsgB,GAa9CtJ,GACA2J,GACAjU,EACAiN,EACAE,GAjB8CsH,IAW3CrD,EAX2CwC,GAW9ClZ,EACG2W,EAZ2CuC,GAY9CjZ,EAWA2P,GACA2J,GACAjU,EACAtF,EACAC,IANGsW,EArB2CwD,GAqB9C/Z,EACGyW,EAtB2CsD,GAsB9C9Z,EAQJiX,GAAY1c,KACRkc,EACAC,EACAJ,EACAE,GAIR7B,EAAIpa,KAAK0c,IACT,MAGJ,IAAK,IAKD,IAFA,IAAMA,GAAc,GAEXnI,GAAI,EAAGzS,GAAMwU,EAAOpV,OAAQqT,GAAIzS,GAAKyS,IAAK,EAAG,KAAAiL,GAAA5C,GAE3BtG,EAAOxX,MAAMyV,GAAGA,GAAI,GAFO,GAI5CwK,IAFC7G,EAF2CsH,GAAA,GAEvCrH,EAFuCqH,GAAA,GAEnCha,EAFmCga,GAAA,GAEhC/Z,EAFgC+Z,GAAA,GAIrC/J,GAAY4H,IAErBhH,IACA0I,GAAKxR,EAAIwR,GAAK3gB,EAAI,GAP4B,IAAAqhB,GAa9CrK,GACA2J,GACAjU,EACAoN,EACAC,GAjB8CuH,IAW3CtD,EAX2CqD,GAW9Cja,EACG6W,EAZ2CoD,GAY9Cha,EAWA2P,GACAiI,EACAvS,EACAtF,EACAC,IANGsW,EArB2C2D,GAqB9Cla,EACGyW,EAtB2CyD,GAsB9Cja,EAQJiX,GAAY1c,KACRoc,EACAC,EACAN,EACAE,GAIR7B,EAAIpa,KAAK0c,IACT,MAGJ,IAAK,IACDtC,EAAIpa,KAAK,CAAC,KACVwc,EAAQ,GAKhBD,GAAOlY,EAAK4R,IAAMmE,EAAIre,GAAGoX,KAAK,KAAOqJ,EAGzC,OAAOD,EAET,MAAOU,GACL9d,GAAK,uBAAyB8d,IC4YT0C,CACb,CACI9J,QACAwH,WACAvS,gBAUhB8Q,EAAM/c,QAAQ,SAAA+gB,GACVlH,EAAQvB,aAAayI,EAAK,GAAIA,EAAK,MAI3C,SAASrG,GACLrC,EACA5L,EACAwM,EACAzX,EACAyK,GACF,IAGMtF,EAIAnF,EAJAmF,EACAC,EAGApF,EAHAoF,EACAC,EAEArF,EAFAqF,MACAC,EACAtF,EADAsF,OAGE6V,EAAK9V,EAAQ,EACf+V,EAAK9V,EAAS,EAEZiS,EAAS/C,GACXqC,EACAA,EAAIrT,WAAWA,YAGb+X,EAAQ,CACVlP,GAAI0I,GAAQwC,EAAQ9M,EAAWtF,EAAGC,GAClCkH,GAAIyI,GAAQwC,EAAQ9M,EAAWtF,EAAIE,EAAOD,GAC1CoH,GAAIuI,GAAQwC,EAAQ9M,EAAWtF,EAAIE,EAAOD,EAAIE,GAC9CiH,GAAIwI,GAAQwC,EAAQ9M,EAAWtF,EAAGC,EAAIE,GACtCqH,GAAIoI,GAAQwC,EAAQ9M,EAAWtF,EAAIgW,EAAI/V,GACvCsH,GAAIqI,GAAQwC,EAAQ9M,EAAWtF,EAAIgW,EAAI/V,EAAIE,GAC3C6G,GAAI4I,GAAQwC,EAAQ9M,EAAWtF,EAAGC,EAAIgW,GACtChP,GAAI2I,GAAQwC,EAAQ9M,EAAWtF,EAAIE,EAAOD,EAAIgW,GAE9CxN,QAAS,IAGP4J,EAAQ9S,KAAKuB,MACfsV,EAAMlP,GAAGjH,EAAImW,EAAMjP,GAAGlH,EACtBmW,EAAMlP,GAAGlH,EAAIoW,EAAMjP,GAAGnH,GAG1BoW,EAAM3N,QAAQzI,EAAIoW,EAAMnP,GAAGjH,EAhhCZ,GAghC6BT,KAAK2B,IAAImR,GACrD+D,EAAM3N,QAAQxI,EAAImW,EAAMnP,GAAGhH,EAjhCZ,GAihC6BV,KAAK4B,IAAIkR,GAErDC,EAAWC,GAAGC,QAAQhb,MAAQ4e,EAAMnP,GAAGjH,EACvCsS,EAAWG,GAAGD,QAAQhb,MAAQ4e,EAAMnP,GAAGhH,EACvCqS,EAAWI,GAAGF,QAAQhb,MAAQ4e,EAAM3N,QAAQzI,EAC5CsS,EAAWK,GAAGH,QAAQhb,MAAQ4e,EAAM3N,QAAQxI,EAK5C,IAAMoa,EAAW,CACbra,EAJJA,GAASE,EAAQ,EAAIA,EAAQ,EAKzBD,EAJJA,GAASE,EAAS,EAAIA,EAAS,EAK3BD,MAAOX,KAAKmV,IAAIxU,GAChBC,OAAQZ,KAAKmV,IAAIvU,IAGrBlJ,OAAOkR,KAAKkS,GAAUhhB,QAAQ,SAAA+gB,GAC1B1I,EAAIC,aAAayI,EAAMC,EAASD,MAGpCnjB,OAAOkR,KAAKrC,GAASzM,QAAQ,SAAAvB,GACzB,IAAMwiB,EAAMxU,EAAQhO,GACpBwiB,EAAI3I,aAAa,KAAMyE,EAAMte,GAAKkI,GAClCsa,EAAI3I,aAAa,KAAMyE,EAAMte,GAAKmI,KAI1C,SAASwT,GAAQP,GACb,MAAyC,MAAlCA,EAAQmD,QAAQC,cAG3B,SAAS5C,GAAmBR,GAExB,IAAMqH,EAAgB,GAuBtB,OArBI9G,GAAQP,GAERA,EAAQsH,WAAWnhB,QAAQ,SAAAwF,GAEvB,GAAsB,IAAlBA,EAAKjD,SAAgB,CAErB,IAAMya,EAAUxX,EAAKwX,QAAQC,eAEc,IAAvCrH,EAAiBvU,QAAQ2b,KACT,MAAZA,GACAkE,EAAc/f,KAAdsC,MAAAyd,EAAaE,GAAS/G,GAAmB7U,KAE7C0b,EAAc/f,KAAKqE,OAM/B0b,EAAc/f,KAAK0Y,GAGhBqH,EAGX,SAASzD,GAAY4D,GACjB,OAAOA,EAAI9b,MAAMqS,IAASvX,OACtB,SAACiG,EAAQnI,EAAOiD,EAAOkgB,GAInB,OAHIlgB,EAAQ,GAAM,GACdkF,EAAOnF,KAAKmgB,EAAMrhB,MAAMmB,EAAOA,EAAQ,IAEpCkF,GAEX,ICvmCO,SAASiI,GAAMxL,GAC1B,GAAIjC,KAAKuB,OAAQ,CACb,IAAM4G,EAAK,IAAIrI,EACf,OAAOR,EAAU/C,KAAKyD,KAAM,SAACwF,EAAQd,GAYjC,OAXMA,aAAgB+b,WHsC3B,SAAsB1d,GAEzB,IAAMmZ,EAAUnZ,EAAImZ,QAAQC,cAE5B,OAA2C,IAAvCrH,EAAiBvU,QAAQ2b,KACzB1c,GACI,0IAGG,GG1CKkhB,CAAahc,IACbc,EAAOnF,KACH,IAAI0W,GAAarS,EAAMzC,EAASkG,IANxC3C,EAAOnF,KACH,IAAI0P,EAAUrL,EAAMzC,EAASkG,IAS9B3C,GACR,uZCRUmb,cAEjB,SAAAA,EAAYjd,EAAIzB,gGAAS2e,CAAA5gB,KAAA2gB,GAErB3gB,KAAK0D,GAAKA,EACV1D,KAAKiC,QAAUA,GAAW,GAC1BjC,KAAKiI,QAAU,KAEfjI,KAAKoI,aAAepI,KAAKoI,aAAaxK,KAAKoC,MAC3CA,KAAKqI,cAAgBrI,KAAKqI,cAAczK,KAAKoC,MAC7CA,KAAKsI,aAAetI,KAAKsI,aAAa1K,KAAKoC,MAC3CA,KAAKuI,aAAevI,KAAKuI,aAAa3K,KAAKoC,MAC3CA,KAAKwI,WAAaxI,KAAKwI,WAAW5K,KAAKoC,MACvCA,KAAKyI,YAAczI,KAAKyI,YAAY7K,KAAKoC,MACzCA,KAAK0I,SAAW1I,KAAK0I,SAAS9K,KAAKoC,MAEnCA,KAAKoQ,mGAIDxQ,EAAQI,KAAKiI,SACbjI,KAAK4I,QAELpJ,GAAK,qDAKT0J,SAAS3M,KAAKyD,sCAKd,IAGMyD,EAAOT,EAHDhD,KAEI0D,IAJZmd,EAEQ7gB,KAUJiC,QAJJG,EARAye,EAQAze,MACA8I,EATA2V,EASA3V,OACA4V,EAVAD,EAUAC,SACAC,EAXAF,EAWAE,MAGEzc,EAAM,CACR0c,SAAU,WACVC,UAAW,cAGXvhB,EAAM0C,IAA2B,WAAjB8e,GAAO9e,IACvBtF,OAAOiU,OAAOzM,EAAKlC,GAGvB,IAAM+e,EAAWzhB,EAAMqhB,GACL/d,EAAO+d,GAAO,GACd1f,SAEZsJ,EAAU9K,EAAOqL,GACjB,SAASvH,GAAK,IAGRyd,EACAphB,KAAKiI,QADLmZ,ORnBb,SAAwBpN,EAAGC,GAAG,IAAAoN,EAK7Bld,EAAU6P,GAFLsN,EAHwBD,EAG7Bja,IACMma,EAJuBF,EAI7Bna,KAJ6Bsa,EASzBrd,EAAU8P,GAFLwN,EAPoBD,EAOzBpa,IACMsa,EARmBF,EAQzBta,KAEJya,EAAK3e,EAAOgR,GACZ4N,EAAK5e,EAAOiR,GAEhB,QACMqN,EAAOG,GACJH,EAAO3c,WAAWgd,EAAGrd,IAAI,WAAemd,EAAO9c,WAAWid,EAAGtd,IAAI,YACpEid,EAAQG,GACLH,EAAQ5c,WAAWgd,EAAGrd,IAAI,UAAcod,EAAQ/c,WAAWid,EAAGtd,IAAI,WQKhDud,CACXT,EACAD,IAIAjW,EAAO3O,KAAKyD,KAAM2D,EAAK3D,KAAK0D,GAAI0d,IAGtC,aAzCMphB,KA2CRiI,QAAU,CACViD,OAAQP,EACR1I,QAASjC,KAAKiC,QACdqC,MACAgD,OAAQtE,EAAO8d,GAAU,IAAMzf,SAASygB,KACxCf,MAAOI,GAGX1d,EAAKwL,GAAG,YAAajP,KAAKoI,cACrB6G,GAAG,aAAcjP,KAAKqI,8CAGxBuF,GAECA,EAAEC,0BACFD,EAAEC,2BAHA,IAOF5F,EAEAjI,KAFAiI,QACAvE,EACA1D,KADA0D,GAIA4D,EAEAW,EAFAX,OACAhD,EACA2D,EADA3D,IAGEyd,EAAS5d,EAAUmD,GAGrByE,EAEA6B,EAFA7B,QACAC,EACA4B,EADA5B,QAGJ1H,EAAI4C,KAAJ,GAAArE,OAAekJ,EAAUgW,EAAO7a,KAAhC,MACA5C,EAAI8C,IAAJ,GAAAvE,OAAcmJ,EAAU+V,EAAO3a,IAA/B,MAEA,IAAMga,EAAQ1d,EAAGse,WAAU,GAC3Bhf,EAAOoe,GAAO9c,IAAIA,GAElB2D,EAAQ8D,QAAUA,EAClB9D,EAAQ+D,QAAUA,EAClB/D,EAAQ3B,GAAKyF,EACb9D,EAAQ1B,GAAKyF,EACb/D,EAAQmZ,MAAQA,EAEhBpe,EAAOsE,GAAQ,GAAGuJ,YAAYuQ,GAC9BphB,KAAK2O,sCAGHf,GAEEA,EAAEgB,gBACFhB,EAAEgB,iBAHD,IAMG3G,EAAYjI,KAAZiI,QAERA,EAAQ8D,QAAU6B,EAAE7B,QACpB9D,EAAQ+D,QAAU4B,EAAE5B,QACpB/D,EAAQwD,QAAS,EACjBxD,EAAQga,QAAS,+BAGhBrU,GAEGA,EAAEC,0BACFD,EAAEC,2BAHF,IAOA5F,EACAjI,KADAiI,QAIAmZ,EAGAnZ,EAHAmZ,MACAc,EAEAja,EAFAia,QACAhX,EACAjD,EADAiD,OAGJjD,EAAQwD,QAAS,EACjB9M,EAAgBujB,GAEZtiB,EAAQwhB,KAEZlW,EAAO3O,KAAKyD,KAAM4N,GAClBwT,EAAMld,WAAWgN,YAAYkQ,UAEtBnZ,EAAQmZ,uCAIfphB,KAAK0I,8CAGE,IAECT,EAAYjI,KAAZiI,QAERA,EAAQia,QAAU9jB,EAAiB4B,KAAK0I,UAJjC,IAOH+C,EAMAxD,EANAwD,OACAM,EAKA9D,EALA8D,QACAC,EAIA/D,EAJA+D,QACA1F,EAGA2B,EAHA3B,GACAC,EAEA0B,EAFA1B,GACA6a,EACAnZ,EADAmZ,MAGJ,GAAK3V,EAAL,CACAxD,EAAQwD,QAAS,EAEjB,IAAM0W,EAAS,aAAAtf,OAAgBkJ,EAAUzF,EAA1B,QAAAzD,OAAmCmJ,EAAUzF,EAA7C,OAEfvD,EAAOoe,GAAO9c,IAAI,CACdE,UAAW2d,EACX1O,eAAgB0O,EAChBzO,aAAcyO,EACdxO,YAAawO,EACbvO,WAAYuO,wCAMZviB,EAAQI,KAAKiI,WACjBjF,EAAOhD,KAAK0D,IACPqF,IAAI,YAAa/I,KAAKoI,cACtBW,IAAI,aAAc/I,KAAKqI,sBACrBrI,KAAKiI,8CAGH2F,GACT5N,KAAKgP,OAAOpB,GACZ5K,EAAO3B,UACF4N,GAAG,YAAajP,KAAKsI,cACrB2G,GAAG,UAAWjP,KAAKwI,iDAGfoF,GACT5N,KAAKoiB,MAAMxU,sCAGJA,GACP5N,KAAK8I,KAAK8E,GACV5K,EAAO3B,UACF0H,IAAI,YAAa/I,KAAKsI,cACtBS,IAAI,UAAW/I,KAAKwI,kDAGfoF,GACV5N,KAAKgP,OAAOpB,EAAEsB,QAAQ,IACtBlM,EAAO3B,UACF4N,GAAG,YAAajP,KAAKuI,cACrB0G,GAAG,WAAYjP,KAAKyI,kDAGhBmF,GACT5N,KAAKoiB,MAAMxU,EAAEsB,QAAQ,wCAGbtB,GAEiB,IAArBA,EAAEsB,QAAQ3N,QACVvB,KAAK8I,KAAK8E,EAAEwB,eAAe,IAE/BpM,EAAO3B,UACF0H,IAAI,YAAa/I,KAAKuI,cACtBQ,IAAI,WAAY/I,KAAKyI;;;;;MC3P5B/G,cAEF,SAAAA,EAAYR,GAAQ,mGAAAmhB,CAAAriB,KAAA0B,GAAA4gB,GAAAtiB,KAAAuiB,GAAA7gB,GAAAnF,KAAAyD,KACVkB,iPAHMD,kFAMXC,GACD,OAAOuM,GAAMlR,KAAKyD,KAAMkB,iCAEtBA,GACF,OCfO,SAAgBe,GAC3B,GAAIjC,KAAKuB,OACL,OAAOnC,EAAO7C,KAAKyD,KAAM,SAAA0E,GACrB,OAAO,IAAIic,GAAMjc,EAAMzC,MDYb1F,KAAKyD,KAAMkB,YAIlBshB,EAAA,iBAASthB,GACpB,OAAO,IAAIQ,GAAMR","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\r\n    mozRequestAnimationFrame ||\r\n    webkitRequestAnimationFrame ||\r\n    msRequestAnimationFrame ||\r\n    function (f) {\r\n        return setTimeout(f, 1000 / 60);\r\n    };\r\n\r\nexport const cancelAnimFrame = cancelAnimationFrame ||\r\n    mozCancelAnimationFrame ||\r\n    function (requestID) {\r\n        clearTimeout(requestID);\r\n    };\r\n\r\nexport const forEach = Array.prototype.forEach,\r\n    arrSlice = Array.prototype.slice,\r\n    arrMap = Array.prototype.map,\r\n    arrReduce = Array.prototype.reduce,\r\n    warn = console.warn;\r\n\r\nexport function isDef(val) {\r\n    return val !== undefined && val !== null;\r\n}\r\n\r\nexport function isUndef(val) {\r\n    return val === undefined || val === null;\r\n}\r\n\r\nexport function isFunc(val) {\r\n    return typeof val === 'function';\r\n}","import { isDef, isUndef } from \"../util/util\";\r\n\r\nexport default class Observable {\r\n\r\n    constructor() {\r\n        this.observers = {};\r\n    }\r\n\r\n    subscribe(eventName, sub) {\r\n\r\n        const obs = this.observers;\r\n\r\n        if (isUndef(obs[eventName])) {\r\n            Object.defineProperty(obs, eventName, {\r\n                value: []\r\n            });\r\n        }\r\n\r\n        obs[eventName].push(sub);\r\n    }\r\n\r\n    unsubscribe(eventName, f) {\r\n\r\n        const obs = this.observers;\r\n\r\n        if (isDef(obs[eventName])) {\r\n            const index = obs[eventName].indexOf(f);\r\n            obs[eventName].splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify(eventName, source, data) {\r\n\r\n        if (isUndef(this.observers[eventName])) return;\r\n\r\n        this.observers[eventName].forEach(observer => {\r\n            if (source === observer) return;\r\n            switch (eventName) {\r\n                case 'onmove':\r\n                    observer.notifyMove(data);\r\n                    break;\r\n                case 'onrotate':\r\n                    observer.notifyRotate(data);\r\n                    break;\r\n                case 'onresize':\r\n                    observer.notifyResize(data);\r\n                    break;\r\n                case 'onapply':\r\n                    observer.notifyApply(data);\r\n                    break;\r\n                case 'ongetstate':\r\n                    observer.notifyGetState(data);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}","import {\r\n    arrSlice,\r\n    warn\r\n} from './util/util'\r\n\r\nexport class Helper_ {\r\n\r\n    constructor(params) {\r\n\r\n        if (!params) return this;\r\n\r\n        if (typeof params === 'string') {\r\n            let selector = document.querySelectorAll(params);\r\n            this.length = selector.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = selector[count];\r\n            }\r\n        } else if (params.nodeType === 1 || params === document) {\r\n            this[0] = params;\r\n            this.length = 1;\r\n        } else if (params instanceof Subjx || typeof params === 'object') {\r\n            this.length = params.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = params[count];\r\n            }\r\n        } else if (Array.isArray(params)) {\r\n            this.length = 0;\r\n            for (let count = 0; count < this.length; count++) {\r\n                if (params.nodeType === 1) {\r\n                    this[count] = params[count];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    css(property) {\r\n        return _css.call(this, property);\r\n    }\r\n    find(node) {\r\n        return _find.call(this, node);\r\n    }\r\n    each(fn) {\r\n        return _each.call(this, fn);\r\n    }\r\n    on() {\r\n        return _on.apply(this, arguments);\r\n    }\r\n    off() {\r\n        return _off.apply(this, arguments);\r\n    }\r\n    is(selector) {\r\n        return _is.call(this, selector);\r\n    }\r\n}\r\n\r\nfunction _css(prop) {\r\n\r\n    const methods = {\r\n        setStyle(options) {\r\n            return _setStyle(this, options);\r\n        },\r\n\r\n        getStyle() {\r\n            return _getStyle(this);\r\n        }\r\n    };\r\n\r\n    if (typeof prop === 'string') {\r\n        return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\r\n    } else if (typeof prop === 'object' || !prop) {\r\n        return methods.setStyle.apply(this, arguments);\r\n    } else {\r\n        warn(`Method ${prop} does not exist`);\r\n    }\r\n    return false;\r\n\r\n\r\n    function _getStyle(obj) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            if (obj[len].currentStyle) {\r\n                return obj[len].currentStyle[prop];\r\n            } else if (document.defaultView && document.defaultView.getComputedStyle) {\r\n                return document.defaultView.getComputedStyle(obj[len], '')[prop];\r\n            } else {\r\n                return obj[len].style[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    function _setStyle(obj, options) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            for (let property in options) {\r\n                obj[len].style[property] = options[property];\r\n            }\r\n        }\r\n        return obj.style;\r\n    }\r\n}\r\n\r\nfunction _each(fn) {\r\n\r\n    const arr = arrSlice.call(this, 0);\r\n\r\n    for (let index = arr.length - 1; index >= 0; --index) {\r\n        let func = function () {\r\n            return arr[index];\r\n        };\r\n        fn.call(func());\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _find(sel) {\r\n\r\n    let len = this.length,\r\n        selector;\r\n\r\n    while (len--) {\r\n        selector = this[len].querySelectorAll(sel);\r\n        return Helper(selector);\r\n    }\r\n}\r\n\r\nfunction _on() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n\r\n            if (document.addEventListener) {\r\n                this[len].addEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.attachEvent) {\r\n                this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = arguments[1];\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\r\n        }\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _off() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n            if (document.removeEventListener) {\r\n                this[len].removeEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.detachEvent) {\r\n                this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = null;\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\r\n        }\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction _is(selector) {\r\n\r\n    const _sel = Helper(selector);\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n        if (this[len] === _sel[len]) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction listenerDelegate(el, evt, sel, handler, act) {\r\n\r\n    const doit = function (event) {\r\n        let t = event.target;\r\n        while (t && t !== this) {\r\n            if (t.matches(sel)) {\r\n                handler.call(t, event);\r\n            }\r\n            t = t.parentNode;\r\n        }\r\n    };\r\n\r\n    if (act === true) {\r\n        if (document.addEventListener) {\r\n            el.addEventListener(evt, doit, false);\r\n        } else if (document.attachEvent) {\r\n            el.attachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = doit;\r\n        }\r\n    } else {\r\n        if (document.removeEventListener) {\r\n            el.removeEventListener(evt, doit, false);\r\n        } else if (document.detachEvent) {\r\n            el.detachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Helper(params) {\r\n    return new Helper_(params);\r\n}","import { Helper } from '../helper'\r\n\r\nexport function getOffset(node) {\r\n    return node.getBoundingClientRect();\r\n}\r\n\r\nexport function getTransform(el) {\r\n    const transform = el.css('-webkit-transform') ||\r\n        el.css('-moz-transform') ||\r\n        el.css('-ms-transform') ||\r\n        el.css('-o-transform') ||\r\n        el.css('transform') ||\r\n        'none';\r\n    return transform;\r\n}\r\n\r\nexport function parseMatrix(value) {\r\n\r\n    const transform = value.match(/-?\\d+\\.?\\d+|-?\\d+/g);\r\n\r\n    if (transform) {\r\n        return transform.map(item => {\r\n            return parseFloat(item);\r\n        });\r\n    } else {\r\n        return [1, 0, 0, 1, 0, 0];\r\n    }\r\n}\r\n\r\nexport function addClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function (cl) {\r\n                return node.classList.add(cl);\r\n            });\r\n        } else {\r\n            return node.classList.add(cls);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function removeClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function (cl) {\r\n                return node.classList.remove(cl);\r\n            });\r\n        } else {\r\n            return node.classList.remove(cls);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function objectsCollide(a, b) {\r\n\r\n    const {\r\n        top: aTop,\r\n        left: aLeft\r\n    } = getOffset(a),\r\n        {\r\n            top: bTop,\r\n            left: bLeft\r\n        } = getOffset(b),\r\n        _a = Helper(a),\r\n        _b = Helper(b);\r\n\r\n    return !(\r\n        ((aTop < bTop) ||\r\n            (aTop + parseFloat(_a.css('height'))) > (bTop + parseFloat(_b.css('height')))) ||\r\n        ((aLeft < bLeft) ||\r\n            (aLeft + parseFloat(_a.css('width'))) > (bLeft + parseFloat(_b.css('width'))))\r\n    )\r\n}","export const unitRE = /px|em|%|ex|ch|rem|vh|vw|vmin|vmax|mm|cm|in|pt|pc|deg/;\r\nexport const RAD = Math.PI / 180;\r\nexport const DEG = 180 / Math.PI;\r\n\r\nexport function snapToGrid(value, snap) {\r\n\r\n    if (snap === 0) {\r\n        return value;\r\n    } else {\r\n        const result = snapCandidate(value, snap);\r\n\r\n        if (result - value < snap) {\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function snapCandidate(value, gridSize) {\r\n    if (gridSize === 0) return value;\r\n    return Math.round(value / gridSize) * gridSize;\r\n}\r\n\r\nexport function rotatedTopLeft(\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    rotationAngle,\r\n    revX,\r\n    revY\r\n) {\r\n\r\n    const hw = parseFloat(width) / 2,\r\n        hh = parseFloat(height) / 2;\r\n\r\n    const cx = x + hw,\r\n        cy = y + hh;\r\n\r\n    const dx = x - cx,\r\n        dy = y - cy;\r\n\r\n    const originalTopLeftAngle = Math.atan2(dy, dx);\r\n\r\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\r\n\r\n    const radius = Math.sqrt(Math.pow(hw, 2) + Math.pow(hh, 2));\r\n\r\n    let cos = Math.cos(rotatedTopLeftAngle),\r\n        sin = Math.sin(rotatedTopLeftAngle);\r\n\r\n    cos = revX === true ? -cos : cos;\r\n    sin = revY === true ? -sin : sin;\r\n\r\n    const rx = cx + radius * cos,\r\n        ry = cy + radius * sin;\r\n\r\n    return {\r\n        left: floatToFixed(rx),\r\n        top: floatToFixed(ry)\r\n    }\r\n}\r\n\r\nexport function toPX(value, parent) {\r\n    if (/px/.test(value)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(value)) {\r\n        return `${(parseFloat(value) * parseFloat(parent) / 100)}px`;\r\n    }\r\n}\r\n\r\nexport function fromPX(value, parent, toUnit) {\r\n    if (/px/.test(toUnit)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(toUnit)) {\r\n        return `${parseFloat(value) * 100 / parseFloat(parent)}%`;\r\n    }\r\n}\r\n\r\nexport function getUnitDimension(value) {\r\n    return value.match(unitRE)[0];\r\n}\r\n\r\nexport function floatToFixed(val) {\r\n    return Number(val.toFixed(6));\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    isDef,\r\n    isUndef,\r\n    isFunc,\r\n    warn\r\n} from '../util/util'\r\n\r\nimport {\r\n    addClass,\r\n    removeClass\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    snapToGrid,\r\n    RAD\r\n} from './common'\r\n\r\nexport default class Subject {\r\n\r\n    constructor(el, Observable) {\r\n\r\n        if (this.constructor === Subject) {\r\n            throw new TypeError('Cannot construct Subject instances directly');\r\n        }\r\n\r\n        this.el = el;\r\n        this.storage = null;\r\n        this.proxyMethods = null;\r\n        this.Ob = Observable;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n    }\r\n\r\n    enable(options) {\r\n\r\n        if (isUndef(this.storage)) {\r\n            this._load(options);\r\n            this._init(this.el);\r\n        } else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n\r\n        const {\r\n            storage,\r\n            proxyMethods,\r\n            el,\r\n            Ob\r\n        } = this;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        // unexpected case\r\n        if (storage.onExecution) {\r\n            this._end();\r\n            Helper(document)\r\n                .off('mousemove', this._onMouseMove)\r\n                .off('mouseup', this._onMouseUp)\r\n                .off('touchmove', this._onTouchMove)\r\n                .off('touchend', this._onTouchEnd);\r\n        }\r\n\r\n        removeClass(el, 'dg-drag');\r\n        this._destroy();\r\n\r\n        Ob.unsubscribe('ongetstate', this);\r\n        Ob.unsubscribe('onapply', this);\r\n        Ob.unsubscribe('onmove', this);\r\n        Ob.unsubscribe('onresize', this);\r\n        Ob.unsubscribe('onrotate', this);\r\n\r\n        proxyMethods.onDestroy.call(this, el);\r\n        delete this.storage;\r\n    }\r\n\r\n    _init() { }\r\n\r\n    _destroy() { }\r\n\r\n    _cursorPoint() { }\r\n\r\n    _drag() {\r\n        this._processMove(...arguments);\r\n        this.proxyMethods.onMove.call(this, ...arguments);\r\n    }\r\n\r\n    _rotate() {\r\n        this._processRotate(...arguments);\r\n        this.proxyMethods.onRotate.call(this, ...arguments);\r\n    }\r\n\r\n    _resize() {\r\n        this._processResize(...arguments);\r\n        this.proxyMethods.onResize.call(this, ...arguments);\r\n    }\r\n\r\n    _load(options) {\r\n\r\n        const { el, Ob } = this;\r\n\r\n        addClass(el, 'dg-drag');\r\n\r\n        const _snap = {\r\n            x: 10,\r\n            y: 10,\r\n            angle: 10 * RAD\r\n        };\r\n\r\n        const _each = {\r\n            move: false,\r\n            resize: false,\r\n            rotate: false\r\n        };\r\n\r\n        let _showHandles = true,\r\n            _restrict = null,\r\n            _onInit = () => { },\r\n            _onMove = () => { },\r\n            _onRotate = () => { },\r\n            _onResize = () => { },\r\n            _onDrop = () => { },\r\n            _onDestroy = () => { };\r\n\r\n        let _container = el.parentNode;\r\n\r\n        let _proportions;\r\n\r\n        if (isDef(options)) {\r\n\r\n            const {\r\n                snap,\r\n                each,\r\n                showHandles,\r\n                restrict,\r\n                onInit,\r\n                onDrop,\r\n                onMove,\r\n                onResize,\r\n                onRotate,\r\n                onDestroy,\r\n                container,\r\n                proportions\r\n            } = options;\r\n\r\n            if (isDef(snap)) {\r\n\r\n                const { x, y, angle } = snap;\r\n\r\n                _snap.x = isUndef(x) ? 10 : x;\r\n                _snap.y = isUndef(y) ? 10 : y;\r\n                _snap.angle = isUndef(angle)\r\n                    ? _snap.angle\r\n                    : angle * RAD;\r\n            }\r\n\r\n            if (isDef(each)) {\r\n\r\n                const { move, resize, rotate } = each;\r\n\r\n                _each.move = move || false;\r\n                _each.resize = resize || false;\r\n                _each.rotate = rotate || false;\r\n            }\r\n\r\n            if (isDef(restrict)) {\r\n                _restrict = restrict === 'parent'\r\n                    ? el.parentNode\r\n                    : Helper(restrict)[0] || document\r\n            }\r\n\r\n            _showHandles = isUndef(showHandles) ||\r\n                showHandles === true;\r\n\r\n            _container = Helper(container)[0] || _container;\r\n\r\n            _proportions = proportions || false;\r\n\r\n\r\n            _onInit = createEvent(onInit);\r\n            _onDrop = createEvent(onDrop);\r\n            _onMove = createEvent(onMove);\r\n            _onResize = createEvent(onResize);\r\n            _onRotate = createEvent(onRotate);\r\n            _onDestroy = createEvent(onDestroy);\r\n\r\n            _onInit.call(this, el);\r\n        }\r\n\r\n        this.storage = {\r\n            showHandles: _showHandles,\r\n            restrict: _restrict,\r\n            container: _container,\r\n            snap: _snap,\r\n            each: _each,\r\n            proportions: _proportions\r\n        };\r\n\r\n        this.proxyMethods = {\r\n            onInit: _onInit,\r\n            onDrop: _onDrop,\r\n            onMove: _onMove,\r\n            onResize: _onResize,\r\n            onRotate: _onRotate,\r\n            onDestroy: _onDestroy\r\n        };\r\n\r\n        if (_each.move || _each.resize || _each.rotate) {\r\n            Ob.subscribe('ongetstate', this);\r\n            Ob.subscribe('onapply', this);\r\n        }\r\n\r\n        if (_each.move) {\r\n            Ob.subscribe('onmove', this);\r\n        }\r\n        if (_each.resize) {\r\n            Ob.subscribe('onresize', this);\r\n        }\r\n        if (_each.rotate) {\r\n            Ob.subscribe('onrotate', this);\r\n        }\r\n    }\r\n\r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n\r\n        const ctx = this;\r\n        const { storage } = ctx;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        storage.frame = requestAnimFrame(ctx._animate);\r\n\r\n        if (!storage.doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        let {\r\n            handle,\r\n            handles,\r\n            cx,\r\n            cy,\r\n            nx,\r\n            ny,\r\n            pressang,\r\n            clientX,\r\n            clientY,\r\n            center,\r\n            snap,\r\n            doDrag,\r\n            doResize,\r\n            doRotate,\r\n            revX,\r\n            revY\r\n        } = storage;\r\n\r\n        const {\r\n            move: moveEach,\r\n            resize: resizeEach,\r\n            rotate: rotateEach\r\n        } = storage.each;\r\n\r\n        if (doResize) {\r\n\r\n            const { x, y } = this._pointToElement(\r\n                {\r\n                    x: clientX,\r\n                    y: clientY\r\n                }\r\n            );\r\n\r\n            let dx = snapToGrid(x - cx, snap.x),\r\n                dy = snapToGrid(y - cy, snap.y);\r\n\r\n            const dox = handle.is(handles.ml) ||\r\n                handle.is(handles.mr) ||\r\n                handle.is(handles.tl) ||\r\n                handle.is(handles.tr) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.br);\r\n\r\n            const doy = handle.is(handles.br) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.bc) ||\r\n                handle.is(handles.tr) ||\r\n                handle.is(handles.tl) ||\r\n                handle.is(handles.tc);\r\n\r\n            const isCenter = handle.is(handles.ml) ||\r\n                handle.is(handles.mr) ||\r\n                handle.is(handles.tc) ||\r\n                handle.is(handles.bc);\r\n\r\n            dx = dox ? (revX ? - dx : dx) : 0,\r\n                dy = doy ? (revY ? - dy : dy) : 0;\r\n\r\n            ctx._resize(\r\n                dx,\r\n                dy,\r\n                isCenter\r\n            );\r\n\r\n            if (resizeEach) {\r\n\r\n                ctx.Ob.notify('onresize',\r\n                    ctx,\r\n                    {\r\n                        dx,\r\n                        dy,\r\n                        isCenter\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doDrag) {\r\n\r\n            const dx = snapToGrid(clientX - nx, snap.x),\r\n                dy = snapToGrid(clientY - ny, snap.y);\r\n\r\n            ctx._drag(\r\n                dx,\r\n                dy\r\n            );\r\n\r\n            if (moveEach) {\r\n                ctx.Ob.notify('onmove',\r\n                    ctx,\r\n                    {\r\n                        dx,\r\n                        dy\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doRotate) {\r\n\r\n            const radians = Math.atan2(\r\n                clientY - center.y,\r\n                clientX - center.x\r\n            ) - pressang;\r\n\r\n            ctx._rotate(\r\n                snapToGrid(radians, snap.angle)\r\n            );\r\n\r\n            if (rotateEach) {\r\n                ctx.Ob.notify('onrotate',\r\n                    ctx,\r\n                    {\r\n                        radians\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    _start(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const { storage } = this;\r\n        const computed = this._compute(e);\r\n\r\n        Object.keys(computed).forEach(prop => {\r\n            storage[prop] = computed[prop];\r\n        });\r\n\r\n        const {\r\n            onRightEdge,\r\n            onBottomEdge,\r\n            onTopEdge,\r\n            onLeftEdge,\r\n            handle,\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = computed;\r\n\r\n        const doResize = onRightEdge ||\r\n            onBottomEdge ||\r\n            onTopEdge ||\r\n            onLeftEdge;\r\n\r\n        const doRotate = handle.is(storage.handles.rotator);\r\n\r\n        const {\r\n            clientX,\r\n            clientY,\r\n            ctrlKey\r\n        } = e;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = this._cursorPoint(\r\n            {\r\n                clientX,\r\n                clientY\r\n            }\r\n        );\r\n\r\n        const {\r\n            x: nx,\r\n            y: ny\r\n        } = this._pointToElement({ x, y });\r\n\r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.nx = x;\r\n        storage.ny = y;\r\n        storage.cx = nx;\r\n        storage.cy = ny;\r\n        storage.ctrlKey = ctrlKey;\r\n        storage.doResize = doResize;\r\n        storage.doDrag = !doRotate && !doResize;\r\n        storage.doRotate = doRotate;\r\n        storage.onExecution = true;\r\n\r\n        this.Ob.notify(\r\n            'ongetstate',\r\n            this,\r\n            {\r\n                factor,\r\n                revX,\r\n                revY\r\n            }\r\n        );\r\n\r\n        this._draw();\r\n    }\r\n\r\n    _moving(e) {\r\n\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        const { storage } = this;\r\n\r\n        const { x, y } = this._cursorPoint(e);\r\n\r\n        storage.clientX = x;\r\n        storage.clientY = y;\r\n        storage.doDraw = true;\r\n    }\r\n\r\n    _end(e) {\r\n\r\n        if (isDef(e) && e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const {\r\n            storage,\r\n            proxyMethods\r\n        } = this;\r\n\r\n        const action = storage.doResize\r\n            ? 'resize'\r\n            : (storage.doDrag ? 'drag' : 'rotate');\r\n\r\n        storage.doResize = false;\r\n        storage.doDrag = false;\r\n        storage.doRotate = false;\r\n        storage.doDraw = false;\r\n        storage.onExecution = false;\r\n\r\n        this._apply(action);\r\n\r\n        this.Ob.notify(\r\n            'onapply',\r\n            this,\r\n            action\r\n        );\r\n\r\n        cancelAnimFrame(storage.frame);\r\n        proxyMethods.onDrop.call(this, e, this.el);\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        Helper(document)\r\n            .on('mousemove', this._onMouseMove)\r\n            .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        Helper(document)\r\n            .on('touchmove', this._onTouchMove)\r\n            .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._moving(\r\n            e,\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._moving(\r\n            e.touches[0],\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        Helper(document)\r\n            .off('mousemove', this._onMouseMove)\r\n            .off('mouseup', this._onMouseUp);\r\n        this._end(\r\n            e,\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n        Helper(document)\r\n            .off('touchmove', this._onTouchMove)\r\n            .off('touchend', this._onTouchEnd);\r\n        if (e.touches.length === 0) {\r\n            this._end(\r\n                e.changedTouches[0],\r\n                this.el)\r\n                ;\r\n        }\r\n    }\r\n\r\n    notifyMove(data) {\r\n\r\n        const {\r\n            dx,\r\n            dy\r\n        } = data;\r\n\r\n        this._drag(\r\n            dx,\r\n            dy\r\n        );\r\n    }\r\n\r\n    notifyRotate(data) {\r\n\r\n        const {\r\n            snap\r\n        } = this.storage;\r\n\r\n        this._rotate(\r\n            snapToGrid(data.radians, snap.angle)\r\n        );\r\n    }\r\n\r\n    notifyResize(data) {\r\n\r\n        const {\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        } = data;\r\n\r\n        this._resize(\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        );\r\n    }\r\n\r\n    notifyApply(actionName) {\r\n        this._apply(actionName);\r\n    }\r\n\r\n    notifyGetState(data) {\r\n\r\n        const store = this.storage;\r\n\r\n        const recalc = this._getState(\r\n            data\r\n        );\r\n\r\n        Object.keys(recalc).forEach(key => {\r\n            store[key] = recalc[key];\r\n        });\r\n    }\r\n}\r\n\r\nfunction createEvent(fn) {\r\n    return isFunc(fn)\r\n        ? function () {\r\n            fn.call(this, ...arguments);\r\n        }\r\n        : () => { };\r\n}","import { Helper } from '../helper'\r\nimport Subject from './subject'\r\n\r\nimport {\r\n    addClass,\r\n    getTransform,\r\n    parseMatrix,\r\n    getOffset\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    rotatedTopLeft,\r\n    toPX,\r\n    fromPX,\r\n    getUnitDimension,\r\n    floatToFixed\r\n} from './common'\r\n\r\nconst MIN_SIZE = 20;\r\nconst BRACKETS_START = `<div class=\"dg dg-normal\"></div>\r\n        <div class=\"dg-hdl dg-rotator\"></div>`;\r\nconst BRACKETS_CORNERS = `\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-l dg-hdl-tl\"></div>\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-r dg-hdl-tr\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-r dg-hdl-br\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-l dg-hdl-bl\"></div>`;\r\nconst BRACKETS_SIDES_H = `\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-l dg-hdl-ml\"></div>\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-r dg-hdl-mr\"></div>`;\r\nconst BRACKETS_SIDES_V = `\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-c dg-hdl-tc\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-c dg-hdl-bc\"></div>`;\r\nconst BRACKETS_SIDES = `\r\n       ${BRACKETS_SIDES_H}\r\n       ${BRACKETS_SIDES_V}`;\r\nconst BRACKETS_PROPORTIONS = `\r\n        ${BRACKETS_START}\r\n        ${BRACKETS_CORNERS}\r\n        ${BRACKETS_SIDES_H}`;\r\nconst BRACKETS = `\r\n        ${BRACKETS_START}\r\n        ${BRACKETS_CORNERS}\r\n        ${BRACKETS_SIDES}`;\r\n\r\nexport default class Draggable extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(sel) {\r\n\r\n        const { storage } = this;\r\n\r\n        const container = document.createElement('div');\r\n\r\n        addClass(container, 'dg-wrapper');\r\n        sel.parentNode.insertBefore(container, sel);\r\n\r\n        const _sel = Helper(sel);\r\n\r\n        const {\r\n            left,\r\n            top,\r\n            width,\r\n            height\r\n        } = sel.style;\r\n\r\n        const w = width || _sel.css('width'),\r\n            h = height || _sel.css('height'),\r\n            t = top || _sel.css('top'),\r\n            l = left || _sel.css('left');\r\n\r\n        const _parent = Helper(container.parentNode);\r\n\r\n        const css = {\r\n            top: t,\r\n            left: l,\r\n            width: w,\r\n            height: h,\r\n            transform: getTransform(_sel)\r\n        };\r\n\r\n        const controls = document.createElement('div');\r\n        controls.innerHTML = this.storage.proportions ? BRACKETS_PROPORTIONS : BRACKETS;\r\n\r\n        addClass(controls, 'dg-controls');\r\n\r\n        container.appendChild(controls);\r\n\r\n        const _controls = Helper(controls);\r\n        _controls.css(css);\r\n\r\n        const _container = Helper(container);\r\n\r\n        Object.assign(storage, {\r\n            controls,\r\n            handles: {\r\n                tl: _container.find('.dg-hdl-tl'),\r\n                tr: _container.find('.dg-hdl-tr'),\r\n                br: _container.find('.dg-hdl-br'),\r\n                bl: _container.find('.dg-hdl-bl'),\r\n                tc: _container.find('.dg-hdl-tc'),\r\n                bc: _container.find('.dg-hdl-bc'),\r\n                ml: _container.find('.dg-hdl-ml'),\r\n                mr: _container.find('.dg-hdl-mr'),\r\n                rotator: _container.find('.dg-rotator')\r\n            },\r\n            parent: _parent\r\n        });\r\n\r\n        _controls.on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _destroy() {\r\n\r\n        const {\r\n            controls,\r\n            container\r\n        } = this.storage;\r\n\r\n        Helper(controls)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n\r\n        container.removeChild(controls.parentNode);\r\n    }\r\n\r\n    _compute(e) {\r\n\r\n        const {\r\n            handles,\r\n        } = this.storage;\r\n\r\n        const handle = Helper(e.target);\r\n\r\n        //reverse axis\r\n        const revX = handle.is(handles.tl) ||\r\n            handle.is(handles.ml) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.tc);\r\n\r\n        const revY = handle.is(handles.tl) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.tc) ||\r\n            handle.is(handles.ml);\r\n\r\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n        //reverse angle\r\n        const factor = handle.is(handles.tr) ||\r\n            handle.is(handles.bl)\r\n            ? -1\r\n            : 1;\r\n\r\n        const _computed = this._getState({\r\n            factor,\r\n            revX,\r\n            revY\r\n        });\r\n\r\n        const {\r\n            x: clientX,\r\n            y: clientY\r\n        } = this._cursorPoint(e);\r\n\r\n        const pressang = Math.atan2(\r\n            clientY - _computed.center.y,\r\n            clientX - _computed.center.x\r\n        );\r\n\r\n        _computed.onTopEdge = onTopEdge;\r\n        _computed.onLeftEdge = onLeftEdge;\r\n        _computed.onRightEdge = onRightEdge;\r\n        _computed.onBottomEdge = onBottomEdge;\r\n        _computed.handle = handle;\r\n        _computed.pressang = pressang;\r\n\r\n        return _computed;\r\n    }\r\n\r\n    _pointToElement(data) {\r\n\r\n        const {\r\n            transform,\r\n        } = this.storage;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = data;\r\n\r\n        const ctm = [...transform.matrix];\r\n        ctm[4] = ctm[5] = 0;\r\n\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x,\r\n                y\r\n            },\r\n            matrixInvert(ctm)\r\n        );\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n\r\n        const {\r\n            container\r\n        } = this.storage;\r\n\r\n        const globalMatrix = parseMatrix(\r\n            getTransform(Helper(container))\r\n        );\r\n\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            },\r\n            matrixInvert(\r\n                globalMatrix\r\n            )\r\n        );\r\n    }\r\n\r\n    _apply() {\r\n\r\n        const {\r\n            storage,\r\n            el\r\n        } = this;\r\n\r\n        const _el = Helper(el);\r\n\r\n        const {\r\n            cached,\r\n            parent,\r\n            dimens,\r\n            controls\r\n        } = storage;\r\n\r\n        if (!cached) return;\r\n\r\n        const matrix = [...cached];\r\n\r\n        const pW = parent.css('width'),\r\n            pH = parent.css('height');\r\n\r\n        const diffLeft = matrix[4];\r\n        const diffTop = matrix[5];\r\n\r\n        matrix[4] = 0;\r\n        matrix[5] = 0;\r\n\r\n        const css = matrixToCSS(matrix);\r\n\r\n        const left = parseFloat(\r\n            toPX(\r\n                _el[0].style.left || _el.css('left'),\r\n                pW\r\n            )\r\n        );\r\n\r\n        const top = parseFloat(\r\n            toPX(\r\n                _el[0].style.top || _el.css('top'),\r\n                pH\r\n            )\r\n        );\r\n\r\n        css.left = fromPX(\r\n            left + diffLeft + 'px',\r\n            pW,\r\n            dimens.left\r\n        );\r\n\r\n        css.top = fromPX(\r\n            top + diffTop + 'px',\r\n            pH,\r\n            dimens.top\r\n        );\r\n\r\n        _el.css(css);\r\n        Helper(controls).css(css);\r\n\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    getControls() {\r\n        return this.storage.controls;\r\n    }\r\n\r\n    _processResize(dx, dy, isCenter) {\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            coords,\r\n            cw,\r\n            ch,\r\n            dimens,\r\n            parent,\r\n            transform,\r\n            refang,\r\n            revX,\r\n            revY\r\n        } = storage;\r\n\r\n        const { style } = controls;\r\n\r\n        let newWidth = cw + (this.storage.proportions && !isCenter ? Math.min(dx, dy) : dx),\r\n            newHeight = ch + (this.storage.proportions && !isCenter ? newWidth/cw*ch - ch : dy);\r\n\r\n        if (newWidth < Math.max(MIN_SIZE, (this.storage.minWidth || 0))\r\n            || newHeight < Math.max(MIN_SIZE, (this.storage.minHeight || 0))\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        style.width = `${newWidth}px`;\r\n        style.height = `${newHeight}px`;\r\n\r\n        const matrix = [...transform.matrix];\r\n\r\n        const newCoords = rotatedTopLeft(\r\n            matrix[4],\r\n            matrix[5],\r\n            newWidth,\r\n            newHeight,\r\n            refang,\r\n            revX,\r\n            revY\r\n        );\r\n\r\n        matrix[4] -= (newCoords.left - coords.left);\r\n        matrix[5] -= (newCoords.top - coords.top);\r\n\r\n        const css = matrixToCSS(matrix);\r\n\r\n        Helper(controls).css(css);\r\n\r\n        css.width = fromPX(\r\n            style.width,\r\n            parent.css('width'),\r\n            dimens.width\r\n        );\r\n\r\n        css.height = fromPX(\r\n            style.height,\r\n            parent.css('height'),\r\n            dimens.height\r\n        );\r\n\r\n        Helper(el).css(css);\r\n        storage.cached = matrix;\r\n    }\r\n\r\n    _processMove(dx, dy) {\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            transform\r\n        } = storage;\r\n\r\n        const {\r\n            matrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        // const pctm = [...parentMatrix];\r\n        // pctm[4] = pctm[5] = 0;\r\n\r\n        // const { x, y } = multiplyMatrixAndPoint(\r\n        //     {\r\n        //         x: dx,\r\n        //         y: dy\r\n        //     },\r\n        //     matrixInvert(pctm)\r\n        // );\r\n\r\n        const n_matrix = [...matrix];\r\n\r\n        n_matrix[4] = matrix[4] + dx;\r\n        n_matrix[5] = matrix[5] + dy;\r\n\r\n        const css = matrixToCSS(n_matrix);\r\n\r\n        Helper(controls).css(css);\r\n        Helper(el).css(css);\r\n\r\n        storage.cached = n_matrix;\r\n    }\r\n\r\n    _processRotate(radians) {\r\n\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            transform\r\n        } = storage;\r\n\r\n        const {\r\n            matrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        const cos = floatToFixed(Math.cos(radians)),\r\n            sin = floatToFixed(Math.sin(radians));\r\n\r\n        const rotMatrix = [\r\n            cos,\r\n            sin,\r\n            -sin,\r\n            cos,\r\n            0,\r\n            0\r\n        ];\r\n\r\n        const pctm = [...parentMatrix];\r\n        pctm[4] = pctm[5] = 0;\r\n\r\n        const resRotMatrix = multiplyMatrix(\r\n            matrixInvert(pctm),\r\n            multiplyMatrix(rotMatrix, pctm)\r\n        );\r\n\r\n        const resMatrix = multiplyMatrix(resRotMatrix, matrix);\r\n\r\n        const css = matrixToCSS(resMatrix);\r\n\r\n        Helper(controls).css(css);\r\n        Helper(el).css(css);\r\n\r\n        storage.cached = resMatrix;\r\n    }\r\n\r\n    _getState(params) {\r\n\r\n        const {\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = params;\r\n\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            handles,\r\n            controls,\r\n            parent\r\n        } = storage;\r\n\r\n        const tl_off = getOffset(handles.tl[0]),\r\n            tr_off = getOffset(handles.tr[0]);\r\n\r\n        const refang = Math.atan2(\r\n            tr_off.top - tl_off.top,\r\n            tr_off.left - tl_off.left\r\n        ) * factor;\r\n\r\n        const cw = parseFloat(\r\n            toPX(controls.style.width, parent.css('width'))\r\n        );\r\n        const ch = parseFloat(\r\n            toPX(controls.style.height, parent.css('height'))\r\n        );\r\n\r\n        const _el = Helper(el);\r\n        const styleList = el.style;\r\n\r\n        const dimens = {\r\n            top: getUnitDimension(styleList.top || _el.css('top')),\r\n            left: getUnitDimension(styleList.left || _el.css('left')),\r\n            width: getUnitDimension(styleList.width || _el.css('width')),\r\n            height: getUnitDimension(styleList.height || _el.css('height'))\r\n        };\r\n\r\n        const transform = {\r\n            matrix: parseMatrix(\r\n                getTransform(Helper(controls))\r\n            ),\r\n            parentMatrix: parseMatrix(\r\n                getTransform(parent)\r\n            )\r\n        };\r\n\r\n        //getting current coordinates considering rotation angle                                                                                                  \r\n        const coords = rotatedTopLeft(\r\n            transform.matrix[4],\r\n            transform.matrix[5],\r\n            cw,\r\n            ch,\r\n            refang,\r\n            revX,\r\n            revY\r\n        );\r\n\r\n        const offset_ = getOffset(el);\r\n\r\n        const center_x = offset_.left + cw / 2,\r\n            center_y = offset_.top + ch / 2;\r\n\r\n        const { x, y } = multiplyMatrixAndPoint(\r\n            {\r\n                x: center_x,\r\n                y: center_y\r\n            },\r\n            matrixInvert(transform.parentMatrix)\r\n        );\r\n\r\n        return {\r\n            transform,\r\n            cw,\r\n            ch,\r\n            coords,\r\n            center: {\r\n                x,\r\n                y\r\n            },\r\n            factor,\r\n            refang,\r\n            revX,\r\n            revY,\r\n            dimens\r\n        }\r\n    }\r\n}\r\n\r\nfunction matrixToCSS(arr) {\r\n\r\n    const style = `matrix(${arr.join()})`;\r\n\r\n    return {\r\n        transform: style,\r\n        webkitTranform: style,\r\n        mozTransform: style,\r\n        msTransform: style,\r\n        otransform: style\r\n    }\r\n}\r\n\r\nfunction multiplyMatrixAndPoint(point, matrix) {\r\n\r\n    const {\r\n        x, y\r\n    } = point;\r\n\r\n    const [a, b, c, d, e, f] = matrix;\r\n\r\n    return {\r\n        x: a * x + c * y + e,\r\n        y: b * x + d * y + f\r\n    };\r\n}\r\n\r\n//http://blog.acipo.com/matrix-inversion-in-javascript/\r\nfunction matrixInvert(ctm) {\r\n    // I use Guassian Elimination to calculate the inverse:\r\n    // (1) 'augment' the matrix (left) by the identity (on the right)\r\n    // (2) Turn the matrix on the left into the identity by elemetry row ops\r\n    // (3) The matrix on the right is the inverse (was the identity matrix)\r\n    // There are 3 elemtary row ops: (I combine b and c in my code)\r\n    // (a) Swap 2 rows\r\n    // (b) Multiply a row by a scalar\r\n    // (c) Add 2 rows\r\n\r\n    const M = [\r\n        [ctm[0], ctm[2], ctm[4]],\r\n        [ctm[1], ctm[3], ctm[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    //if the matrix isn't square: exit (error)\r\n    if (M.length !== M[0].length) {\r\n        return;\r\n    }\r\n\r\n    //create the identity matrix (I), and a copy (C) of the original\r\n    const dim = M.length;\r\n\r\n    const I = [],\r\n        C = [];\r\n\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // Create the row\r\n        I[I.length] = [];\r\n        C[C.length] = [];\r\n        for (let j = 0; j < dim; j += 1) {\r\n\r\n            //if we're on the diagonal, put a 1 (for identity)\r\n            if (i == j) {\r\n                I[i][j] = 1;\r\n            } else {\r\n                I[i][j] = 0;\r\n            }\r\n\r\n            // Also, make the copy of the original\r\n            C[i][j] = M[i][j];\r\n        }\r\n    }\r\n\r\n    // Perform elementary row operations\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // get the element e on the diagonal\r\n        let e = C[i][i];\r\n\r\n        // if we have a 0 on the diagonal (we'll need to swap with a lower row)\r\n        if (e === 0) {\r\n            //look through every row below the i'th row\r\n            for (let ii = i + 1; ii < dim; ii += 1) {\r\n                //if the ii'th row has a non-0 in the i'th col\r\n                if (C[ii][i] !== 0) {\r\n                    //it would make the diagonal have a non-0 so swap it\r\n                    for (let j = 0; j < dim; j++) {\r\n                        e = C[i][j]; //temp store i'th row\r\n                        C[i][j] = C[ii][j]; //replace i'th row by ii'th\r\n                        C[ii][j] = e; //repace ii'th by temp\r\n                        e = I[i][j]; //temp store i'th row\r\n                        I[i][j] = I[ii][j]; //replace i'th row by ii'th\r\n                        I[ii][j] = e; //repace ii'th by temp\r\n                    }\r\n                    //don't bother checking other rows since we've swapped\r\n                    break;\r\n                }\r\n            }\r\n            //get the new diagonal\r\n            e = C[i][i];\r\n            //if it's still 0, not invertable (error)\r\n            if (e === 0) {\r\n                return\r\n            }\r\n        }\r\n\r\n        // Scale this row down by e (so we have a 1 on the diagonal)\r\n        for (let j = 0; j < dim; j++) {\r\n            C[i][j] = C[i][j] / e; //apply to original matrix\r\n            I[i][j] = I[i][j] / e; //apply to identity\r\n        }\r\n\r\n        // Subtract this row (scaled appropriately for each row) from ALL of\r\n        // the other rows so that there will be 0's in this column in the\r\n        // rows above and below this one\r\n        for (let ii = 0; ii < dim; ii++) {\r\n            // Only apply to other rows (we want a 1 on the diagonal)\r\n            if (ii == i) {\r\n                continue;\r\n            }\r\n\r\n            // We want to change this element to 0\r\n            e = C[ii][i];\r\n\r\n            // Subtract (the row above(or below) scaled by e) from (the\r\n            // current row) but start at the i'th column and assume all the\r\n            // stuff left of diagonal is 0 (which it should be if we made this\r\n            // algorithm correctly)\r\n            for (let j = 0; j < dim; j++) {\r\n                C[ii][j] -= e * C[i][j]; //apply to original matrix\r\n                I[ii][j] -= e * I[i][j]; //apply to identity\r\n            }\r\n        }\r\n    }\r\n\r\n    //we've done all operations, C should be the identity\r\n    //matrix I should be the inverse:\r\n    return [\r\n        I[0][0], I[1][0],\r\n        I[0][1], I[1][1],\r\n        I[0][2], I[1][2]\r\n    ];\r\n}\r\n\r\nfunction multiplyMatrix(mtrx1, mtrx2) {\r\n\r\n    const m1 = [\r\n        [mtrx1[0], mtrx1[2], mtrx1[4]],\r\n        [mtrx1[1], mtrx1[3], mtrx1[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const m2 = [\r\n        [mtrx2[0], mtrx2[2], mtrx2[4]],\r\n        [mtrx2[1], mtrx2[3], mtrx2[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const result = [];\r\n\r\n    for (let j = 0; j < m2.length; j++) {\r\n        result[j] = [];\r\n        for (let k = 0; k < m1[0].length; k++) {\r\n            let sum = 0;\r\n            for (let i = 0; i < m1.length; i++) {\r\n                sum += m1[i][k] * m2[j][i];\r\n            }\r\n            result[j].push(sum);\r\n        }\r\n    }\r\n\r\n    return [\r\n        result[0][0], result[1][0],\r\n        result[0][1], result[1][1],\r\n        result[0][2], result[1][2]\r\n    ];\r\n}","import { warn } from './../../util/util'\r\n\r\nexport const ALLOWED_ELEMENTS = [\r\n    'circle', 'ellipse',\r\n    'image', 'line',\r\n    'path', 'polygon',\r\n    'polyline', 'rect',\r\n    'text', 'g'\r\n];\r\n\r\nexport function createSVGElement(name) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\n\r\nexport function createSVGMatrix() {\r\n    return createSVGElement('svg').createSVGMatrix();\r\n}\r\n\r\nexport function getTransformToElement(toElement, g) {\r\n    const gTransform = g.getScreenCTM() || createSVGMatrix();\r\n    return gTransform.inverse().multiply(\r\n        toElement.getScreenCTM() || createSVGMatrix()\r\n    );\r\n}\r\n\r\nexport function matrixToString(m) {\r\n    return `matrix(${m.a},${m.b},${m.c},${m.d},${m.e},${m.f})`;\r\n}\r\n\r\nexport function pointTo(ctm, svg, x, y) {\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = x;\r\n    pt.y = y;\r\n    return pt.matrixTransform(ctm);\r\n}\r\n\r\nexport function cloneMatrix(b) {\r\n\r\n    const a = createSVGMatrix();\r\n\r\n    a.a = b.a;\r\n    a.b = b.b;\r\n    a.c = b.c;\r\n    a.d = b.d;\r\n    a.e = b.e;\r\n    a.f = b.f;\r\n\r\n    return a;\r\n}\r\n\r\nexport function checkElement(sel) {\r\n\r\n    const tagName = sel.tagName.toLowerCase();\r\n\r\n    if (ALLOWED_ELEMENTS.indexOf(tagName) === -1) {\r\n        warn(\r\n            'Selected element is not allowed to transform. Allowed elements:\\n' +\r\n            'circle, ellipse, image, line, path, polygon, polyline, rect, text, g'\r\n        );\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}","import {\r\n    warn\r\n} from './../../util/util'\r\n\r\nimport {\r\n    pointTo,\r\n    cloneMatrix\r\n} from './util'\r\n\r\nconst dRE = /\\s*([achlmqstvz])([^achlmqstvz]*)\\s*/gi;\r\nconst sepRE = /\\s*,\\s*|\\s+/g;\r\n\r\nfunction parsePath(path) {\r\n\r\n    let match = dRE.lastIndex = 0;\r\n\r\n    const serialized = [];\r\n\r\n    while ((match = dRE.exec(path))) {\r\n\r\n        const cmd = match[1];\r\n        const upCmd = cmd.toUpperCase();\r\n\r\n        // normalize the data\r\n        const data = match[2]\r\n            .replace(/([^e])-/g, '$1 -')\r\n            .replace(/ +/g, ' ');\r\n\r\n        serialized.push({\r\n            relative: cmd !== upCmd,\r\n            key: upCmd,\r\n            cmd: cmd,\r\n            values: data.trim().split(sepRE).map(val => {\r\n                if (!isNaN(val)) {\r\n                    return Number(val);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    return serialized;\r\n}\r\n\r\nexport function movePath(params) {\r\n\r\n    const {\r\n        path,\r\n        dx,\r\n        dy\r\n    } = params;\r\n\r\n    try {\r\n\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n        let space = ' ';\r\n\r\n        let firstCommand = true;\r\n\r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n\r\n            const item = serialized[i];\r\n\r\n            const {\r\n                values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n\r\n            const coordinates = [];\r\n\r\n            switch (cmd) {\r\n\r\n                case 'M': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        if (!(relative && !firstCommand)) {\r\n                            x += dx;\r\n                            y += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        firstCommand = false;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'A': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 7) {\r\n\r\n                        const set = values.slice(k, k + 7);\r\n\r\n                        if (!relative) {\r\n                            set[5] = set[5] + dx;\r\n                            set[6] = set[6] + dy;\r\n                        }\r\n\r\n                        coordinates.push(...set);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'C': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 6) {\r\n\r\n                        const set = values.slice(k, k + 6);\r\n\r\n                        if (!relative) {\r\n                            set[0] = set[0] + dx;\r\n                            set[1] = set[1] + dy;\r\n                            set[2] = set[2] + dx;\r\n                            set[3] = set[3] + dy;\r\n                            set[4] = set[4] + dx;\r\n                            set[5] = set[5] + dy;\r\n                        }\r\n\r\n                        coordinates.push(...set);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'H': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const set = values.slice(k, k + 1);\r\n\r\n                        if (!relative) {\r\n                            set[0] += dx;\r\n                        }\r\n\r\n                        coordinates.push(set[0]);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'V': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const set = values.slice(k, k + 1);\r\n\r\n                        if (!relative) {\r\n                            set[0] += dy;\r\n                        }\r\n                        coordinates.push(set[0]);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'L':\r\n                case 'T': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        if (!relative) {\r\n                            x += dx;\r\n                            y += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x,\r\n                            y\r\n                        );\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                case 'Q':\r\n                case 'S': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n\r\n                        const [x1, y1, x2, y2] = values.slice(k, k + 4);\r\n\r\n                        if (!relative) {\r\n                            x1 += dx;\r\n                            y1 += dy;\r\n                            x2 += dx;\r\n                            y2 += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x1,\r\n                            y1,\r\n                            x2,\r\n                            y2\r\n                        );\r\n                    }\r\n                    break;\r\n                }\r\n                case 'Z':\r\n                    values[0] = '';\r\n                    space = '';\r\n                    break;\r\n            }\r\n\r\n            str += item.cmd + coordinates.join(',') + space;\r\n        }\r\n\r\n        return str;\r\n\r\n    } catch (err) {\r\n        warn('Path parsing error: ' + err);\r\n    }\r\n}\r\n\r\nexport function resizePath(params) {\r\n\r\n    const {\r\n        path,\r\n        localCTM,\r\n        container\r\n    } = params;\r\n\r\n    try {\r\n\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n        let space = ' ';\r\n\r\n        const res = [];\r\n\r\n        let firstCommand = true;\r\n\r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n\r\n            const item = serialized[i];\r\n\r\n            const {\r\n                values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n\r\n            switch (cmd) {\r\n\r\n                case 'A': {\r\n\r\n                    //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 7) {\r\n\r\n                        const [rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y] =\r\n                            values.slice(k, k + 7);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX,\r\n                            resY\r\n                        );\r\n\r\n                        mtrx.e = mtrx.f = 0;\r\n\r\n                        const {\r\n                            x: newRx,\r\n                            y: newRy\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            rx,\r\n                            ry\r\n                        );\r\n\r\n                        coordinates.unshift(\r\n                            newRx,\r\n                            newRy,\r\n                            x_axis_rot,\r\n                            large_arc_flag,\r\n                            sweep_flag\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'C': {\r\n\r\n                    //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 6) {\r\n\r\n                        const [x1, y1, x2, y2, x, y] = values.slice(k, k + 6);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX1,\r\n                            y: resY1\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x1,\r\n                            y1\r\n                        );\r\n\r\n                        const {\r\n                            x: resX2,\r\n                            y: resY2\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x2,\r\n                            y2\r\n                        );\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX1,\r\n                            resY1,\r\n                            resX2,\r\n                            resY2,\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n                // this command make impossible free transform within group\r\n                // todo: use only proportional resizing or need to be converted to L\r\n                case 'H': {\r\n\r\n                    // H x (or h dx)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const [x] = values.slice(k, k + 1);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            0\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n                // this command make impossible free transform within group\r\n                // todo: use only proportional resizing or need to be converted to L\r\n                case 'V': {\r\n\r\n                    // V y (or v dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const [y] = values.slice(k, k + 1);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            0,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'T': // T x y (or t dx dy)\r\n                case 'L': {\r\n\r\n                    // L x y (or l dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'M': {\r\n\r\n                    // M x y (or dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative && !firstCommand) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX,\r\n                            resY\r\n                        );\r\n\r\n                        firstCommand = false;\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'Q': {\r\n\r\n                    //Q x1 y1, x y (or q dx1 dy1, dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n\r\n                        const [x1, y1, x, y] = values.slice(k, k + 4);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX1,\r\n                            y: resY1\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x1,\r\n                            y1\r\n                        );\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX1,\r\n                            resY1,\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'S': {\r\n\r\n                    //S x2 y2, x y (or s dx2 dy2, dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n\r\n                        const [x2, y2, x, y] = values.slice(k, k + 4);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX2,\r\n                            y: resY2\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x2,\r\n                            y2\r\n                        );\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            localCTM,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX2,\r\n                            resY2,\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'Z': {\r\n                    res.push(['']);\r\n                    space = '';\r\n                    break;\r\n                }\r\n            }\r\n\r\n            str += item.cmd + res[i].join(',') + space;\r\n        }\r\n\r\n        return str;\r\n\r\n    } catch (err) {\r\n        warn('Path parsing error: ' + err);\r\n    }\r\n}","import { Helper } from '../../helper'\r\nimport Subject from '../subject'\r\n\r\nimport {\r\n    isUndef\r\n} from '../../util/util'\r\n\r\nimport {\r\n    floatToFixed\r\n} from '../common'\r\n\r\nimport {\r\n    movePath,\r\n    resizePath\r\n} from './path'\r\n\r\nimport {\r\n    ALLOWED_ELEMENTS,\r\n    createSVGElement,\r\n    createSVGMatrix,\r\n    getTransformToElement,\r\n    matrixToString,\r\n    pointTo\r\n} from './util'\r\n\r\nconst MIN_SIZE = 2;\r\nconst ROT_OFFSET = 50;\r\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g;\r\n\r\nexport default class DraggableSVG extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(sel) {\r\n\r\n        const { storage } = this;\r\n\r\n        const {\r\n            showHandles,\r\n            container\r\n        } = storage;\r\n\r\n        const wrapper = createSVGElement('g');\r\n        container.appendChild(wrapper);\r\n\r\n        const {\r\n            width: cw,\r\n            height: ch,\r\n            x: cx,\r\n            y: cy\r\n        } = sel.getBBox();\r\n\r\n        const elCTM = getTransformToElement(sel, container);\r\n        const box = createSVGElement('rect');\r\n\r\n        const attrs = [\r\n            ['width', cw],\r\n            ['height', ch],\r\n            ['x', cx],\r\n            ['y', cy],\r\n            ['fill', 'rgba(0, 168, 255, 0.2)'],\r\n            ['stroke', '#00a8ff'],\r\n            ['stroke-dasharray', '3 3'],\r\n            ['vector-effect', 'non-scaling-stroke'],\r\n            ['transform', matrixToString(elCTM)]\r\n        ];\r\n\r\n        attrs.forEach(item => {\r\n            box.setAttribute(item[0], item[1]);\r\n        });\r\n\r\n        const handlesGroup = createSVGElement('g'),\r\n            normalLineGroup = createSVGElement('g'),\r\n            group = createSVGElement('g');\r\n\r\n        group.appendChild(box);\r\n        wrapper.appendChild(group);\r\n        wrapper.appendChild(normalLineGroup);\r\n        wrapper.appendChild(handlesGroup);\r\n\r\n        const {\r\n            x: bX,\r\n            y: bY,\r\n            width: bW,\r\n            height: bH\r\n        } = box.getBBox();\r\n\r\n        const boxCTM = getTransformToElement(box, box.parentNode);\r\n\r\n        const handles = {\r\n            tl: pointTo(boxCTM, container, bX, bY),\r\n            tr: pointTo(boxCTM, container, bX + bW, bY),\r\n            br: pointTo(boxCTM, container, bX + bW, bY + bH),\r\n            bl: pointTo(boxCTM, container, bX, bY + bH),\r\n            tc: pointTo(boxCTM, container, bX + bW / 2, bY),\r\n            bc: pointTo(boxCTM, container, bX + bW / 2, bY + bH),\r\n            ml: pointTo(boxCTM, container, bX, bY + bH / 2),\r\n            mr: pointTo(boxCTM, container, bX + bW, bY + bH / 2),\r\n            //center: pointTo(boxCTM, container, bX + bW / 2, bY + bH / 2),\r\n            rotator: {}\r\n        };\r\n\r\n        const theta = Math.atan2(\r\n            handles.tl.y - handles.tr.y,\r\n            handles.tl.x - handles.tr.x\r\n        );\r\n\r\n        handles.rotator.x = handles.mr.x - ROT_OFFSET * Math.cos(theta);\r\n        handles.rotator.y = handles.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n        const normalLine = createSVGElement('line');\r\n\r\n        if (showHandles) {\r\n\r\n            normalLine.x1.baseVal.value = handles.mr.x;\r\n            normalLine.y1.baseVal.value = handles.mr.y;\r\n            normalLine.x2.baseVal.value = handles.rotator.x;\r\n            normalLine.y2.baseVal.value = handles.rotator.y;\r\n\r\n            normalLine.setAttribute('stroke', '#00a8ff');\r\n            normalLine.setAttribute('stroke-dasharray', '3 3');\r\n            normalLine.setAttribute('vector-effect', 'non-scaling-stroke');\r\n\r\n            normalLineGroup.appendChild(normalLine);\r\n        }\r\n\r\n        Object.keys(handles).forEach(key => {\r\n            const data = handles[key];\r\n            handles[key] = createHandler(data.x, data.y);\r\n            if (showHandles) {\r\n                handlesGroup.appendChild(handles[key])\r\n            }\r\n        });\r\n\r\n        Object.assign(storage, {\r\n            wrapper,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            parent: sel.parentNode\r\n        });\r\n\r\n        Helper(wrapper).on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _destroy() {\r\n\r\n        const {\r\n            wrapper,\r\n            container\r\n        } = this.storage;\r\n\r\n        Helper(wrapper)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n\r\n        container.removeChild(wrapper);\r\n    }\r\n\r\n    _compute(e) {\r\n\r\n        const {\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            handles\r\n        } = storage;\r\n\r\n        const handle = Helper(e.target);\r\n\r\n        //reverse axis\r\n        const revX = handle.is(handles.tl) ||\r\n            handle.is(handles.ml) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.tc);\r\n\r\n        const revY = handle.is(handles.tl) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.tc) ||\r\n            handle.is(handles.ml);\r\n\r\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n        const _computed = this._getState({\r\n            revX,\r\n            revY\r\n        });\r\n\r\n        const {\r\n            x: clientX,\r\n            y: clientY\r\n        } = this._cursorPoint(e);\r\n\r\n        const pressang = Math.atan2(\r\n            clientY - _computed.center.y,\r\n            clientX - _computed.center.x\r\n        );\r\n\r\n        _computed.onTopEdge = onTopEdge;\r\n        _computed.onLeftEdge = onLeftEdge;\r\n        _computed.onRightEdge = onRightEdge;\r\n        _computed.onBottomEdge = onBottomEdge;\r\n        _computed.handle = handle;\r\n        _computed.pressang = pressang;\r\n\r\n        return _computed;\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n\r\n        const {\r\n            container\r\n        } = this.storage;\r\n\r\n        return pointTo(\r\n            container.getScreenCTM().inverse(),\r\n            container,\r\n            e.clientX,\r\n            e.clientY\r\n        );\r\n    }\r\n\r\n    _pointToElement(data) {\r\n\r\n        const {\r\n            transform,\r\n            container\r\n        } = this.storage;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = data;\r\n\r\n        const { ctm } = transform;\r\n        const matrix = ctm.inverse();\r\n\r\n        const pt = container.createSVGPoint();\r\n        pt.x = x;\r\n        pt.y = y;\r\n        matrix.e = matrix.f = 0;\r\n\r\n        return pt.matrixTransform(matrix);\r\n    }\r\n\r\n    _apply(actionName) {\r\n\r\n        const {\r\n            el: element,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            container,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            cached,\r\n            transform\r\n        } = storage;\r\n\r\n        if (isUndef(cached)) return;\r\n\r\n        const {\r\n            scaleX,\r\n            scaleY,\r\n            dx,\r\n            dy,\r\n            ox,\r\n            oy\r\n        } = cached;\r\n\r\n        const {\r\n            matrix\r\n        } = transform;\r\n\r\n        if (actionName === 'drag') {\r\n\r\n            if (dx === 0 && dy === 0) return;\r\n\r\n            // create translate matrix for an element\r\n            const eM = createSVGMatrix();\r\n\r\n            eM.e = dx;\r\n            eM.f = dy;\r\n\r\n            const translateMatrix = eM.multiply(matrix)\r\n                .multiply(eM.inverse());\r\n\r\n            element.setAttribute(\r\n                'transform',\r\n                matrixToString(translateMatrix)\r\n            );\r\n\r\n            if (isGroup(element)) {\r\n\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n\r\n                    const pt = container.createSVGPoint();\r\n                    const ctm = getTransformToElement(element.parentNode, container).inverse();\r\n                    pt.x = ox;\r\n                    pt.y = oy;\r\n                    ctm.e = ctm.f = 0;\r\n                    const newPT = pt.matrixTransform(ctm);\r\n\r\n                    // create translate matrix for an element\r\n                    const eM = createSVGMatrix();\r\n\r\n                    eM.e = dx;\r\n                    eM.f = dy;\r\n\r\n                    const translateMatrix = eM.multiply(\r\n                        getTransformToElement(child, child.parentNode)\r\n                    ).multiply(eM.inverse());\r\n\r\n                    child.setAttribute(\r\n                        'transform',\r\n                        matrixToString(translateMatrix)\r\n                    );\r\n\r\n                    if (!isGroup(child)) {\r\n                        applyTranslate(child, {\r\n                            x: newPT.x,\r\n                            y: newPT.y\r\n                        });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                applyTranslate(element, {\r\n                    x: dx,\r\n                    y: dy\r\n                });\r\n            }\r\n        }\r\n\r\n        if (actionName === 'resize') {\r\n\r\n            const {\r\n                x,\r\n                y,\r\n                width: newWidth,\r\n                height: newHeight\r\n            } = box.getBBox();\r\n\r\n            applyTransformToHandles(\r\n                box,\r\n                handles,\r\n                normalLine,\r\n                {\r\n                    x,\r\n                    y,\r\n                    width: newWidth,\r\n                    height: newHeight\r\n                },\r\n                container\r\n            );\r\n\r\n            if (isGroup(element)) {\r\n\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n\r\n                    if (!isGroup(child)) {\r\n\r\n                        applyResize(child, {\r\n                            scaleX,\r\n                            scaleY,\r\n                            defaultCTM: child.__ctm__,\r\n                            bBox: transform.bBox,\r\n                            container,\r\n                            storage\r\n                        });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n\r\n                applyResize(element, {\r\n                    scaleX,\r\n                    scaleY,\r\n                    defaultCTM: transform.ctm,\r\n                    bBox: transform.bBox,\r\n                    container,\r\n                    storage\r\n                });\r\n            }\r\n\r\n            element.setAttribute(\r\n                'transform',\r\n                matrixToString(matrix)\r\n            );\r\n        }\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    getControls() {\r\n        return this.storage.wrapper;\r\n    }\r\n\r\n    _processResize(dx, dy) {\r\n\r\n        const {\r\n            container,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            left,\r\n            top,\r\n            cw,\r\n            ch,\r\n            transform,\r\n            revX,\r\n            revY\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            scMatrix,\r\n            trMatrix,\r\n            scaleX: ptX,\r\n            scaleY: ptY\r\n        } = transform;\r\n\r\n        const { el } = this;\r\n\r\n        let {\r\n            width: newWidth,\r\n            height: newHeight\r\n        } = box.getBBox();\r\n\r\n        newWidth = cw + dx;\r\n        newHeight = ch + dy;\r\n\r\n        if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\r\n\r\n        const scaleX = newWidth / cw,\r\n            scaleY = newHeight / ch;\r\n\r\n        // setup scale matrix\r\n        scMatrix.a = scaleX;\r\n        scMatrix.b = 0;\r\n        scMatrix.c = 0;\r\n        scMatrix.d = scaleY;\r\n        scMatrix.e = 0;\r\n        scMatrix.f = 0;\r\n\r\n        // translate compensation matrix\r\n        trMatrix.e = ptX;\r\n        trMatrix.f = ptY;\r\n\r\n        //now must to do: translate(x y) scale(sx sy) translate(-x -y)\r\n        const scaleMatrix = trMatrix\r\n            .multiply(scMatrix)\r\n            .multiply(trMatrix.inverse());\r\n\r\n        const res = matrix.multiply(scaleMatrix);\r\n\r\n        el.setAttribute(\r\n            'transform',\r\n            matrixToString(res)\r\n        );\r\n\r\n        this.storage.cached = {\r\n            scaleX,\r\n            scaleY\r\n        };\r\n\r\n        applyTransformToHandles(\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            {\r\n                x: revX ? left - dx : left,\r\n                y: revY ? top - dy : top,\r\n                width: newWidth,\r\n                height: newHeight,\r\n            },\r\n            container\r\n        );\r\n    }\r\n\r\n    _processMove(dx, dy) {\r\n        const {\r\n            container,\r\n            transform,\r\n            wrapper\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            trMatrix,\r\n            scMatrix,\r\n            wrapperMatrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        scMatrix.e = dx;\r\n        scMatrix.f = dy;\r\n\r\n        const moveWrapper = scMatrix.multiply(wrapperMatrix);\r\n\r\n        wrapper.setAttribute(\r\n            'transform',\r\n            matrixToString(moveWrapper)\r\n        );\r\n\r\n        parentMatrix.e = parentMatrix.f = 0;\r\n        const { x, y } = pointTo(\r\n            parentMatrix.inverse(),\r\n            container,\r\n            dx,\r\n            dy\r\n        );\r\n\r\n        trMatrix.e = x;\r\n        trMatrix.f = y;\r\n\r\n        const moveElement = trMatrix.multiply(matrix);\r\n\r\n        this.el.setAttribute(\r\n            'transform',\r\n            matrixToString(moveElement)\r\n        );\r\n\r\n        this.storage.cached = {\r\n            dx: x,\r\n            dy: y,\r\n            ox: dx,\r\n            oy: dy\r\n        }\r\n    }\r\n\r\n    _processRotate(radians) {\r\n\r\n        const {\r\n            center,\r\n            transform,\r\n            wrapper\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            wrapperMatrix,\r\n            parentMatrix,\r\n            trMatrix,\r\n            scMatrix,\r\n            rotMatrix\r\n        } = transform;\r\n\r\n        const cos = floatToFixed(Math.cos(radians)),\r\n            sin = floatToFixed(Math.sin(radians));\r\n\r\n        // rotate(a cx cy) is equivalent to translate(cx cy) rotate(a) translate(-cx -cy)\r\n        trMatrix.e = center.x;\r\n        trMatrix.f = center.y;\r\n\r\n        rotMatrix.a = cos;\r\n        rotMatrix.b = sin;\r\n        rotMatrix.c = - sin;\r\n        rotMatrix.d = cos;\r\n\r\n        const wrapMatrix = trMatrix.multiply(rotMatrix)\r\n            .multiply(trMatrix.inverse())\r\n            .multiply(wrapperMatrix);\r\n\r\n        wrapper.setAttribute(\r\n            'transform',\r\n            matrixToString(wrapMatrix)\r\n        );\r\n\r\n        scMatrix.e = center.el_x;\r\n        scMatrix.f = center.el_y;\r\n\r\n        parentMatrix.e = parentMatrix.f = 0;\r\n        const resRotMatrix = parentMatrix.inverse()\r\n            .multiply(rotMatrix)\r\n            .multiply(parentMatrix);\r\n\r\n        const rotateMatrix = scMatrix.multiply(resRotMatrix)\r\n            .multiply(scMatrix.inverse());\r\n\r\n        const elMatrix = rotateMatrix.multiply(matrix);\r\n\r\n        this.el.setAttribute(\r\n            'transform',\r\n            matrixToString(elMatrix)\r\n        );\r\n    }\r\n\r\n    _getState(params) {\r\n\r\n        const {\r\n            revX,\r\n            revY\r\n        } = params;\r\n\r\n        const {\r\n            el: element,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            container,\r\n            box,\r\n            wrapper,\r\n            parent\r\n        } = storage;\r\n\r\n        const eBBox = this.el.getBBox();\r\n\r\n        const {\r\n            x: el_x,\r\n            y: el_y,\r\n            width: el_w,\r\n            height: el_h\r\n        } = eBBox;\r\n\r\n        const {\r\n            width: cw,\r\n            height: ch,\r\n            x: c_left,\r\n            y: c_top\r\n        } = box.getBBox();\r\n\r\n        const elMatrix = getTransformToElement(element, parent);\r\n        const boxGroup = box.parentNode;\r\n\r\n        const transform = {\r\n            matrix: elMatrix,\r\n            ctm: getTransformToElement(element, container),\r\n            wrapperMatrix: getTransformToElement(wrapper, wrapper.parentNode),\r\n            boxCTM: getTransformToElement(boxGroup, container),\r\n            boxMatrix: getTransformToElement(boxGroup, boxGroup.parentNode),\r\n            parentMatrix: getTransformToElement(parent, container),\r\n            trMatrix: createSVGMatrix(),\r\n            scMatrix: createSVGMatrix(),\r\n            rotMatrix: createSVGMatrix(),\r\n            scaleX: (revX ? el_w + el_x : el_x),\r\n            scaleY: (revY ? el_h + el_y : el_y),\r\n            bBox: eBBox\r\n        };\r\n\r\n        const hW = cw / 2,\r\n            hH = ch / 2;\r\n\r\n        const boxCenter = pointTo(\r\n            getTransformToElement(box, container),\r\n            container,\r\n            c_left + hW,\r\n            c_top + hH\r\n        );\r\n\r\n        const elementCenter = pointTo(\r\n            elMatrix,\r\n            container,\r\n            el_x + el_w / 2,\r\n            el_y + el_h / 2\r\n        );\r\n\r\n        checkChildElements(element).forEach(child => {\r\n            child.__ctm__ = getTransformToElement(child, container);\r\n        });\r\n\r\n        return {\r\n            transform,\r\n            cw,\r\n            ch,\r\n            center: {\r\n                x: boxCenter.x,\r\n                y: boxCenter.y,\r\n                el_x: elementCenter.x,\r\n                el_y: elementCenter.y\r\n            },\r\n            left: c_left,\r\n            top: c_top,\r\n            revX,\r\n            revY\r\n        };\r\n    }\r\n}\r\n\r\nfunction applyTranslate(element, data) {\r\n\r\n    const {\r\n        x,\r\n        y\r\n    } = data;\r\n\r\n    const attrs = [];\r\n\r\n    switch (element.tagName.toLowerCase()) {\r\n\r\n        case 'use':\r\n        case 'image':\r\n        case 'text':\r\n        case 'rect': {\r\n\r\n            const resX = Number(element.getAttribute('x')) + x,\r\n                resY = Number(element.getAttribute('y')) + y;\r\n\r\n            attrs.push(\r\n                ['x', resX],\r\n                ['y', resY]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'circle':\r\n        case 'ellipse': {\r\n\r\n            const resX = Number(element.getAttribute('cx')) + x,\r\n                resY = Number(element.getAttribute('cy')) + y;\r\n\r\n            attrs.push(\r\n                ['cx', resX],\r\n                ['cy', resY]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'line': {\r\n\r\n            const resX1 = Number(element.getAttribute('x1')) + x,\r\n                resY1 = Number(element.getAttribute('y1')) + y,\r\n                resX2 = Number(element.getAttribute('x2')) + x,\r\n                resY2 = Number(element.getAttribute('y2')) + y;\r\n\r\n            attrs.push(\r\n                ['x1', resX1],\r\n                ['y1', resY1],\r\n                ['x2', resX2],\r\n                ['y2', resY2]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n            const points = parsePoints(element.getAttribute('points'));\r\n            const result = points.map(item => {\r\n\r\n                item[0] = Number(item[0]) + x;\r\n                item[1] = Number(item[1]) + y;\r\n\r\n                return item.join(' ');\r\n            }).join(' ');\r\n\r\n            attrs.push(\r\n                ['points', result]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'path': {\r\n\r\n            const path = element.getAttribute('d');\r\n\r\n            attrs.push(['d', movePath(\r\n                {\r\n                    path,\r\n                    dx: x,\r\n                    dy: y\r\n                }\r\n            )]);\r\n        }\r\n\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(item => {\r\n        element.setAttribute(item[0], item[1]);\r\n    });\r\n}\r\n\r\nfunction applyResize(element, data) {\r\n\r\n    const {\r\n        scaleX,\r\n        scaleY,\r\n        bBox,\r\n        defaultCTM,\r\n        container\r\n    } = data;\r\n\r\n    const {\r\n        width: boxW,\r\n        height: boxH\r\n    } = bBox;\r\n\r\n    const attrs = [];\r\n\r\n    const ctm = getTransformToElement(element, container);\r\n    const localCTM = defaultCTM.inverse().multiply(ctm);\r\n\r\n    switch (element.tagName.toLowerCase()) {\r\n\r\n        case 'text': {\r\n\r\n            const x = element.x.baseVal.value,\r\n                y = element.y.baseVal.value;\r\n\r\n            const {\r\n                x: resX,\r\n                y: resY\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                x,\r\n                y\r\n            );\r\n\r\n            attrs.push(\r\n                ['x', resX + (scaleX < 0 ? boxW : 0)],\r\n                ['y', resY + (scaleY < 0 ? boxH : 0)]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'circle': {\r\n\r\n            const r = element.r.baseVal.value,\r\n                cx = element.cx.baseVal.value,\r\n                cy = element.cy.baseVal.value,\r\n                newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\r\n\r\n            const {\r\n                x: resX,\r\n                y: resY\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                cx,\r\n                cy\r\n            );\r\n\r\n            attrs.push(\r\n                ['r', newR],\r\n                ['cx', resX],\r\n                ['cy', resY]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'image':\r\n        case 'rect': {\r\n\r\n            const width = element.width.baseVal.value,\r\n                height = element.height.baseVal.value,\r\n                x = element.x.baseVal.value,\r\n                y = element.y.baseVal.value;\r\n\r\n            const {\r\n                x: resX,\r\n                y: resY\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                x,\r\n                y\r\n            );\r\n\r\n            localCTM.e = localCTM.f = 0;\r\n\r\n            const {\r\n                x: newW,\r\n                y: newH\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                width,\r\n                height\r\n            );\r\n\r\n            const newWidth = Math.abs(newW),\r\n                newHeight = Math.abs(newH);\r\n\r\n            attrs.push(\r\n                ['x', resX - (scaleX < 0 ? newWidth : 0)],\r\n                ['y', resY - (scaleY < 0 ? newHeight : 0)],\r\n                ['width', newWidth],\r\n                ['height', newHeight]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'ellipse': {\r\n\r\n            const rx = element.rx.baseVal.value,\r\n                ry = element.ry.baseVal.value,\r\n                cx = element.cx.baseVal.value,\r\n                cy = element.cy.baseVal.value;\r\n\r\n            const {\r\n                x: cx1,\r\n                y: cy1\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                cx,\r\n                cy\r\n            );\r\n\r\n            localCTM.e = localCTM.f = 0;\r\n\r\n            const {\r\n                x: nRx,\r\n                y: nRy\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                rx,\r\n                ry\r\n            );\r\n\r\n            attrs.push(\r\n                ['rx', Math.abs(nRx)],\r\n                ['ry', Math.abs(nRy)],\r\n                ['cx', cx1],\r\n                ['cy', cy1]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'line': {\r\n\r\n            const resX1 = element.x1.baseVal.value,\r\n                resY1 = element.y1.baseVal.value,\r\n                resX2 = element.x2.baseVal.value,\r\n                resY2 = element.y2.baseVal.value;\r\n\r\n            const {\r\n                x: resX1_,\r\n                y: resY1_\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                resX1,\r\n                resY1\r\n            );\r\n\r\n            const {\r\n                x: resX2_,\r\n                y: resY2_\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                resX2,\r\n                resY2\r\n            );\r\n\r\n            attrs.push(\r\n                ['x1', resX1_],\r\n                ['y1', resY1_],\r\n                ['x2', resX2_],\r\n                ['y2', resY2_]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n            const points = parsePoints(element.getAttribute('points'));\r\n            const result = points.map(item => {\r\n\r\n                const {\r\n                    x,\r\n                    y\r\n                } = pointTo(\r\n                    localCTM,\r\n                    container,\r\n                    Number(item[0]),\r\n                    Number(item[1])\r\n                );\r\n\r\n                item[0] = x;\r\n                item[1] = y;\r\n\r\n                return item.join(' ');\r\n\r\n            }).join(' ');\r\n\r\n            attrs.push(['points', result]);\r\n        }\r\n            break;\r\n\r\n        case 'path': {\r\n\r\n            const path = element.getAttribute('d');\r\n\r\n            attrs.push(['d', resizePath(\r\n                {\r\n                    path,\r\n                    localCTM,\r\n                    container\r\n                }\r\n            )]);\r\n        }\r\n            break;\r\n\r\n        default: { }\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(attr => {\r\n        element.setAttribute(attr[0], attr[1]);\r\n    });\r\n}\r\n\r\nfunction applyTransformToHandles(\r\n    box,\r\n    handles,\r\n    normalLine,\r\n    data,\r\n    container\r\n) {\r\n\r\n    let {\r\n        x,\r\n        y,\r\n        width,\r\n        height\r\n    } = data;\r\n\r\n    const hW = width / 2,\r\n        hH = height / 2;\r\n\r\n    const boxCTM = getTransformToElement(\r\n        box,\r\n        box.parentNode.parentNode\r\n    );\r\n\r\n    const attrs = {\r\n        tl: pointTo(boxCTM, container, x, y),\r\n        tr: pointTo(boxCTM, container, x + width, y),\r\n        br: pointTo(boxCTM, container, x + width, y + height),\r\n        bl: pointTo(boxCTM, container, x, y + height),\r\n        tc: pointTo(boxCTM, container, x + hW, y),\r\n        bc: pointTo(boxCTM, container, x + hW, y + height),\r\n        ml: pointTo(boxCTM, container, x, y + hH),\r\n        mr: pointTo(boxCTM, container, x + width, y + hH),\r\n        //center: pointTo(boxCTM, container, x + hW, y + hH),\r\n        rotator: {}\r\n    };\r\n\r\n    const theta = Math.atan2(\r\n        attrs.tl.y - attrs.tr.y,\r\n        attrs.tl.x - attrs.tr.x\r\n    );\r\n\r\n    attrs.rotator.x = attrs.mr.x - ROT_OFFSET * Math.cos(theta);\r\n    attrs.rotator.y = attrs.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n    normalLine.x1.baseVal.value = attrs.mr.x;\r\n    normalLine.y1.baseVal.value = attrs.mr.y;\r\n    normalLine.x2.baseVal.value = attrs.rotator.x;\r\n    normalLine.y2.baseVal.value = attrs.rotator.y;\r\n\r\n    x = x + (width < 0 ? width : 0);\r\n    y = y + (height < 0 ? height : 0);\r\n\r\n    const boxAttrs = {\r\n        x,\r\n        y,\r\n        width: Math.abs(width),\r\n        height: Math.abs(height)\r\n    };\r\n\r\n    Object.keys(boxAttrs).forEach(attr => {\r\n        box.setAttribute(attr, boxAttrs[attr]);\r\n    });\r\n\r\n    Object.keys(handles).forEach(key => {\r\n        const hdl = handles[key];\r\n        hdl.setAttribute('cx', attrs[key].x);\r\n        hdl.setAttribute('cy', attrs[key].y);\r\n    });\r\n}\r\n\r\nfunction isGroup(element) {\r\n    return element.tagName.toLowerCase() === 'g';\r\n}\r\n\r\nfunction checkChildElements(element) {\r\n\r\n    const arrOfElements = [];\r\n\r\n    if (isGroup(element)) {\r\n\r\n        element.childNodes.forEach(item => {\r\n\r\n            if (item.nodeType === 1) {\r\n\r\n                const tagName = item.tagName.toLowerCase();\r\n\r\n                if (ALLOWED_ELEMENTS.indexOf(tagName) !== -1) {\r\n                    if (tagName === 'g') {\r\n                        arrOfElements.push(...checkChildElements(item));\r\n                    }\r\n                    arrOfElements.push(item);\r\n                }\r\n            }\r\n        });\r\n\r\n    } else {\r\n        arrOfElements.push(element);\r\n    }\r\n\r\n    return arrOfElements;\r\n}\r\n\r\nfunction parsePoints(pts) {\r\n    return pts.match(floatRE).reduce(\r\n        (result, value, index, array) => {\r\n            if (index % 2 === 0) {\r\n                result.push(array.slice(index, index + 2));\r\n            }\r\n            return result;\r\n        },\r\n        []\r\n    );\r\n}\r\n\r\nfunction createHandler(l, t) {\r\n\r\n    const handler = createSVGElement('circle');\r\n\r\n    const items = {\r\n        cx: l,\r\n        cy: t,\r\n        r: '5',\r\n        fill: 'rgba(0, 168, 255, 0.2)',\r\n        stroke: '#00a8ff',\r\n        'vector-effect': 'non-scaling-stroke'\r\n    };\r\n\r\n    Object.keys(items).map(key => {\r\n        handler.setAttribute(key, items[key]);\r\n    });\r\n\r\n    return handler;\r\n}","import Observable from '../observer/Observer'\r\nimport Draggable from './html'\r\nimport DraggableSVG from './svg/index'\r\n\r\nimport { checkElement } from './svg/util'\r\nimport { arrReduce } from '../util/util'\r\n\r\n// factory method for creating draggable elements\r\nexport default function _drag(options) {\r\n    if (this.length) {\r\n        const Ob = new Observable();\r\n        return arrReduce.call(this, (result, item) => {\r\n            if (!(item instanceof SVGElement)) {\r\n                result.push(\r\n                    new Draggable(item, options, Ob)\r\n                );\r\n            } else {\r\n                if (checkElement(item)) {\r\n                    result.push(\r\n                        new DraggableSVG(item, options, Ob)\r\n                    );\r\n                }\r\n            }\r\n            return result;\r\n        }, []);\r\n    }\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    warn,\r\n    isDef,\r\n    isUndef,\r\n    isFunc\r\n} from '../util/util'\r\n\r\nimport {\r\n   getOffset,\r\n   objectsCollide\r\n} from '../util/css-util'\r\n\r\nexport default class Clone {\r\n\r\n    constructor(el, options) {\r\n\r\n        this.el = el;\r\n        this.options = options || {};\r\n        this.storage = null;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n\r\n        this.enable();\r\n    }\r\n\r\n    enable() {\r\n        if (isUndef(this.storage)) {\r\n            this._init();\r\n        }  else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n        _destroy.call(this);\r\n    }\r\n\r\n    _init() {\r\n\r\n        const ctx = this;\r\n\r\n        const sel = ctx.el;\r\n        const _sel = Helper(sel);\r\n\r\n        const {\r\n            style,\r\n            onDrop,\r\n            appendTo,\r\n            stack\r\n        } = ctx.options;\r\n\r\n        const css = {\r\n            position: 'absolute',\r\n            'z-index': '2147483647'\r\n        };\r\n\r\n        if (isDef(style) && typeof style === 'object') {\r\n            Object.assign(css, style);\r\n        }\r\n\r\n        const dropZone = isDef(stack) \r\n                        ? Helper(stack)[0] \r\n                        : document;\r\n\r\n        const _onDrop = isFunc(onDrop)\r\n            ? function(evt) {\r\n\r\n                const {\r\n                    clone\r\n                } = this.storage;\r\n\r\n                const result = objectsCollide(\r\n                    clone,\r\n                    dropZone\r\n                );\r\n\r\n                if (result) {\r\n                    onDrop.call(this, evt, this.el, clone);\r\n                }\r\n            }\r\n            : () => {};\r\n\r\n        ctx.storage = {\r\n            onDrop: _onDrop,\r\n            options: this.options,\r\n            css,\r\n            parent: Helper(appendTo)[0] || document.body,\r\n            stack: dropZone\r\n        };\r\n\r\n        _sel.on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _start(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n        \r\n        const { \r\n            storage,\r\n            el\r\n        } = this;\r\n    \r\n        const {\r\n            parent,\r\n            css\r\n        } = storage; \r\n    \r\n        const offset = getOffset(parent);\r\n    \r\n        const { \r\n            clientX, \r\n            clientY \r\n        } = e; \r\n    \r\n        css.left = `${(clientX - offset.left)}px`;\r\n        css.top = `${(clientY - offset.top)}px`;\r\n    \r\n        const clone = el.cloneNode(true);\r\n        Helper(clone).css(css);\r\n    \r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.cx = clientX;\r\n        storage.cy = clientY;\r\n        storage.clone = clone;\r\n    \r\n        Helper(parent)[0].appendChild(clone);\r\n        this._draw();\r\n    }\r\n\r\n    _move(e) {\r\n\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n    \r\n        const { storage } = this;\r\n    \r\n        storage.clientX = e.clientX;\r\n        storage.clientY = e.clientY;\r\n        storage.doDraw = true;\r\n        storage.doMove = true;\r\n    }\r\n    \r\n    _end(e) {\r\n    \r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n    \r\n        const { \r\n            storage\r\n        } = this;\r\n    \r\n        const {\r\n            clone,\r\n            frameId,\r\n            onDrop\r\n        } = storage;\r\n    \r\n        storage.doDraw = false;\r\n        cancelAnimFrame(frameId);\r\n    \r\n        if (isUndef(clone)) return;\r\n    \r\n        onDrop.call(this, e);\r\n        clone.parentNode.removeChild(clone);\r\n    \r\n        delete storage.clone;\r\n    }\r\n    \r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n\r\n        const { storage } = this;\r\n    \r\n        storage.frameId = requestAnimFrame(this._animate);\r\n\r\n        const {\r\n            doDraw,\r\n            clientX,\r\n            clientY,\r\n            cx,\r\n            cy,\r\n            clone\r\n        } = storage;\r\n\r\n        if (!doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        const translate = `translate(${clientX - cx}px, ${clientY - cy}px)`;\r\n\r\n        Helper(clone).css({\r\n            transform: translate,\r\n            webkitTranform: translate,\r\n            mozTransform: translate,\r\n            msTransform: translate,\r\n            otransform: translate \r\n        });\r\n    }\r\n    \r\n    _destroy() {\r\n    \r\n        if (isUndef(this.storage)) return;\r\n        Helper(this.el)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n        delete this.storage;\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        Helper(document)\r\n            .on('mousemove', this._onMouseMove)\r\n            .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._move(e);\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        this._end(e);\r\n        Helper(document)\r\n            .off('mousemove', this._onMouseMove)\r\n            .off('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        Helper(document)\r\n            .on('touchmove', this._onTouchMove)\r\n            .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._move(e.touches[0]);\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n\r\n        if (e.touches.length === 0) {\r\n            this._end(e.changedTouches[0]);\r\n        }\r\n        Helper(document)\r\n            .off('touchmove', this._onTouchMove)\r\n            .off('touchend', this._onTouchEnd);\r\n    }\r\n}","/* @license\r\n * Move/Rotate/Resize tool\r\n * Released under the MIT license, 2018-2019\r\n * nichollascarter@gmail.com\r\n*/\r\n\r\nimport '../style/subjx.css'\r\nimport _drag from './core/transform/index'\r\nimport _clone from './core/clone/index'\r\nimport { Helper_ } from './core/helper'\r\n\r\nclass Subjx extends Helper_ {\r\n\r\n    constructor(params) {\r\n        super(params);\r\n    }\r\n\r\n    drag(params) {\r\n        return _drag.call(this, params);\r\n    }\r\n    clone(params) {\r\n        return _clone.call(this, params);\r\n    }\r\n}\r\n\r\nexport default function(params) {\r\n    return new Subjx(params);\r\n}","import {\r\n    arrMap\r\n} from '../util/util'\r\n\r\nimport Clone from './clone'\r\n\r\nexport default function _clone(options) {\r\n    if (this.length) {\r\n        return arrMap.call(this, item => {\r\n            return new Clone(item, options);\r\n        });\r\n    }\r\n}"],"sourceRoot":""}