{"version":3,"sources":["webpack://Subjx/webpack/bootstrap","webpack://Subjx/./src/js/core/util/util.js","webpack://Subjx/./src/js/core/observer/Observer.js","webpack://Subjx/./src/js/core/helper.js","webpack://Subjx/./src/js/core/util/css-util.js","webpack://Subjx/./src/js/core/transform/common.js","webpack://Subjx/./src/js/core/transform/subject.js","webpack://Subjx/./src/js/core/transform/html.js","webpack://Subjx/./src/js/core/transform/svg/util.js","webpack://Subjx/./src/js/core/transform/svg/path.js","webpack://Subjx/./src/js/core/transform/svg/index.js","webpack://Subjx/./src/js/core/transform/index.js","webpack://Subjx/./src/js/core/clone/clone.js","webpack://Subjx/./src/js/index.js","webpack://Subjx/./src/js/core/clone/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","arrSlice","Array","forEach","slice","arrMap","map","arrReduce","reduce","warn","console","isDef","val","isUndef","isFunc","Observable","_classCallCheck","this","observers","eventName","sub","obs","push","index","indexOf","splice","source","data","observer","notifyMove","notifyRotate","notifyResize","notifyApply","notifyGetState","Helper_","params","helper_classCallCheck","selector","document","querySelectorAll","length","count","nodeType","Subjx","_typeof","isArray","helper_createClass","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","_getStyle","apply","arguments","concat","node","sel","Helper","fn","arr","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","getOffset","getBoundingClientRect","getTransform","css","parseMatrix","transform","match","item","parseFloat","addClass","cls","classList","add","split","cl","unitRE","RAD","Math","PI","snapToGrid","snap","result","gridSize","round","snapCandidate","rotatedTopLeft","x","y","width","height","rotationAngle","revX","revY","hw","hh","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","left","floatToFixed","top","toPX","parent","test","fromPX","toUnit","getUnitDimension","Number","toFixed","Subject","subject_classCallCheck","constructor","TypeError","storage","proxyMethods","Ob","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_animate","_load","_init","onExecution","_end","off","remove","removeClass","_destroy","unsubscribe","onDestroy","angle","_this$storage","controls","matrix","parentMatrix","log","_rotate","_this$proxyMethods$on","_processMove","onMove","_this$proxyMethods$on2","_processRotate","onRotate","_this$proxyMethods$on3","_processResize","onResize","_proportions","_snap","_each","move","resize","rotate","_showHandles","_restrict","_onInit","_onMove","_onRotate","_onResize","_onDrop","_onDestroy","_container","each","showHandles","restrict","onInit","onDrop","container","proportions","createEvent","subscribe","ctx","frame","doDraw","handle","handles","nx","ny","pressang","clientX","clientY","center","doDrag","doResize","doRotate","_storage$each","moveEach","resizeEach","rotateEach","_this$_pointToElement","_pointToElement","dox","is","ml","mr","tl","tr","bl","br","doy","bc","tc","isCenter","_resize","notify","_drag","radians","e","stopImmediatePropagation","computed","_compute","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","factor","rotator","ctrlKey","_this$_cursorPoint","_cursorPoint","_this$_pointToElement2","_draw","preventDefault","_this$_cursorPoint2","action","_apply","_start","on","touches","_moving","changedTouches","actionName","store","recalc","_getState","BRACKETS_START","BRACKETS_CORNERS","BRACKETS_SIDES_H","BRACKETS_SIDES","BRACKETS_PROPORTIONS","BRACKETS","Draggable","_this","html_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","enable","createElement","insertBefore","_sel$style","w","h","_parent","innerHTML","appendChild","_controls","assign","find","removeChild","_computed","ctm","_toConsumableArray","multiplyMatrixAndPoint","matrixInvert","globalMatrix","_el","cached","dimens","pW","pH","diffLeft","diffTop","matrixToCSS","coords","cw","ch","refang","newWidth","min","newHeight","max","minWidth","minHeight","newCoords","n_matrix","rotMatrix","pctm","resMatrix","multiplyMatrix","tl_off","tr_off","styleList","offset_","_multiplyMatrixAndPoi","join","webkitTranform","mozTransform","msTransform","otransform","point","_matrix","_slicedToArray","a","b","M","dim","I","C","j","ii","mtrx1","mtrx2","m1","m2","k","sum","ALLOWED_ELEMENTS","createSVGElement","createElementNS","createSVGMatrix","getTransformToElement","toElement","g","getScreenCTM","inverse","multiply","matrixToString","pointTo","svg","pt","createSVGPoint","matrixTransform","cloneMatrix","dRE","sepRE","parsePath","path","lastIndex","serialized","exec","cmd","upCmd","toUpperCase","replace","relative","values","trim","isNaN","floatRE","DraggableSVG","svg_classCallCheck","svg_possibleConstructorReturn","svg_getPrototypeOf","wrapper","_sel$getBBox","getBBox","elCTM","box","setAttribute","handlesGroup","normalLineGroup","group","_box$getBBox","bX","bY","bW","bH","boxCTM","theta","normalLine","x1","baseVal","y1","x2","y2","items","fill","stroke","vector-effect","createHandler","_this$storage2","element","scaleX","scaleY","ox","oy","eM","translateMatrix","isGroup","checkChildElements","child","newPT","applyTranslate","_box$getBBox2","applyTransformToHandles","applyResize","defaultCTM","__ctm__","bBox","_this$storage3","scMatrix","trMatrix","ptX","ptY","_box$getBBox3","abs","scaleMatrix","res","_this$storage4","wrapperMatrix","moveWrapper","_pointTo","moveElement","_this$storage5","wrapMatrix","el_x","el_y","resRotMatrix","elMatrix","eBBox","el_w","el_h","_box$getBBox4","c_left","c_top","boxGroup","boxMatrix","hW","hH","boxCenter","elementCenter","attrs","tagName","toLowerCase","resX","getAttribute","resY","resX1","resY1","resX2","resY2","parsePoints","str","space","firstCommand","coordinates","_values$slice2","path_slicedToArray","set","path_toConsumableArray","_values$slice4","_values$slice6","err","movePath","boxW","boxH","localCTM","_pointTo2","newR","_pointTo3","_pointTo4","_pointTo5","newW","newH","rx","_pointTo6","cx1","cy1","_pointTo7","nRx","nRy","_pointTo8","resX1_","resY1_","_pointTo9","resX2_","resY2_","_pointTo10","_values$slice8","x_axis_rot","large_arc_flag","sweep_flag","mtrx","newRx","newRy","unshift","_values$slice10","_values$slice16","_values$slice18","_values$slice20","_pointTo11","_values$slice22","_pointTo12","_pointTo13","resizePath","attr","boxAttrs","hdl","arrOfElements","childNodes","svg_toConsumableArray","pts","array","SVGElement","checkElement","Clone","clone_classCallCheck","_ctx$options","appendTo","stack","position","z-index","clone_typeof","dropZone","clone","_getOffset","aTop","aLeft","_getOffset2","bTop","bLeft","_a","_b","objectsCollide","body","offset","cloneNode","doMove","frameId","translate","_move","js_classCallCheck","js_possibleConstructorReturn","js_getPrototypeOf","__webpack_exports__"],"mappings":"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","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\r\n    mozRequestAnimationFrame ||\r\n    webkitRequestAnimationFrame ||\r\n    msRequestAnimationFrame ||\r\n    function (f) {\r\n        return setTimeout(f, 1000 / 60);\r\n    };\r\n\r\nexport const cancelAnimFrame = cancelAnimationFrame ||\r\n    mozCancelAnimationFrame ||\r\n    function (requestID) {\r\n        clearTimeout(requestID);\r\n    };\r\n\r\nexport const forEach = Array.prototype.forEach,\r\n    arrSlice = Array.prototype.slice,\r\n    arrMap = Array.prototype.map,\r\n    arrReduce = Array.prototype.reduce,\r\n    warn = console.warn;\r\n\r\nexport function isDef(val) {\r\n    return val !== undefined && val !== null;\r\n}\r\n\r\nexport function isUndef(val) {\r\n    return val === undefined || val === null;\r\n}\r\n\r\nexport function isFunc(val) {\r\n    return typeof val === 'function';\r\n}","import { isDef, isUndef } from \"../util/util\";\r\n\r\nexport default class Observable {\r\n\r\n    constructor() {\r\n        this.observers = {};\r\n    }\r\n\r\n    subscribe(eventName, sub) {\r\n\r\n        const obs = this.observers;\r\n\r\n        if (isUndef(obs[eventName])) {\r\n            Object.defineProperty(obs, eventName, {\r\n                value: []\r\n            });\r\n        }\r\n\r\n        obs[eventName].push(sub);\r\n    }\r\n\r\n    unsubscribe(eventName, f) {\r\n\r\n        const obs = this.observers;\r\n\r\n        if (isDef(obs[eventName])) {\r\n            const index = obs[eventName].indexOf(f);\r\n            obs[eventName].splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notify(eventName, source, data) {\r\n\r\n        if (isUndef(this.observers[eventName])) return;\r\n\r\n        this.observers[eventName].forEach(observer => {\r\n            if (source === observer) return;\r\n            switch (eventName) {\r\n                case 'onmove':\r\n                    observer.notifyMove(data);\r\n                    break;\r\n                case 'onrotate':\r\n                    observer.notifyRotate(data);\r\n                    break;\r\n                case 'onresize':\r\n                    observer.notifyResize(data);\r\n                    break;\r\n                case 'onapply':\r\n                    observer.notifyApply(data);\r\n                    break;\r\n                case 'ongetstate':\r\n                    observer.notifyGetState(data);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}","import {\r\n    arrSlice,\r\n    warn\r\n} from './util/util'\r\n\r\nexport class Helper_ {\r\n\r\n    constructor(params) {\r\n\r\n        if (!params) return this;\r\n\r\n        if (typeof params === 'string') {\r\n            let selector = document.querySelectorAll(params);\r\n            this.length = selector.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = selector[count];\r\n            }\r\n        } else if (params.nodeType === 1 || params === document) {\r\n            this[0] = params;\r\n            this.length = 1;\r\n        } else if (params instanceof Subjx || typeof params === 'object') {\r\n            this.length = params.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = params[count];\r\n            }\r\n        } else if (Array.isArray(params)) {\r\n            this.length = 0;\r\n            for (let count = 0; count < this.length; count++) {\r\n                if (params.nodeType === 1) {\r\n                    this[count] = params[count];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    css(property) {\r\n        return _css.call(this, property);\r\n    }\r\n    find(node) {\r\n        return _find.call(this, node);\r\n    }\r\n    each(fn) {\r\n        return _each.call(this, fn);\r\n    }\r\n    on() {\r\n        return _on.apply(this, arguments);\r\n    }\r\n    off() {\r\n        return _off.apply(this, arguments);\r\n    }\r\n    is(selector) {\r\n        return _is.call(this, selector);\r\n    }\r\n}\r\n\r\nfunction _css(prop) {\r\n\r\n    const methods = {\r\n        setStyle(options) {\r\n            return _setStyle(this, options);\r\n        },\r\n\r\n        getStyle() {\r\n            return _getStyle(this);\r\n        }\r\n    };\r\n\r\n    if (typeof prop === 'string') {\r\n        return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\r\n    } else if (typeof prop === 'object' || !prop) {\r\n        return methods.setStyle.apply(this, arguments);\r\n    } else {\r\n        warn(`Method ${prop} does not exist`);\r\n    }\r\n    return false;\r\n\r\n\r\n    function _getStyle(obj) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            if (obj[len].currentStyle) {\r\n                return obj[len].currentStyle[prop];\r\n            } else if (document.defaultView && document.defaultView.getComputedStyle) {\r\n                return document.defaultView.getComputedStyle(obj[len], '')[prop];\r\n            } else {\r\n                return obj[len].style[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    function _setStyle(obj, options) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            for (let property in options) {\r\n                obj[len].style[property] = options[property];\r\n            }\r\n        }\r\n        return obj.style;\r\n    }\r\n}\r\n\r\nfunction _each(fn) {\r\n\r\n    const arr = arrSlice.call(this, 0);\r\n\r\n    for (let index = arr.length - 1; index >= 0; --index) {\r\n        let func = function () {\r\n            return arr[index];\r\n        };\r\n        fn.call(func());\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _find(sel) {\r\n\r\n    let len = this.length,\r\n        selector;\r\n\r\n    while (len--) {\r\n        selector = this[len].querySelectorAll(sel);\r\n        return Helper(selector);\r\n    }\r\n}\r\n\r\nfunction _on() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n\r\n            if (document.addEventListener) {\r\n                this[len].addEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.attachEvent) {\r\n                this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = arguments[1];\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\r\n        }\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _off() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n            if (document.removeEventListener) {\r\n                this[len].removeEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.detachEvent) {\r\n                this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = null;\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\r\n        }\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction _is(selector) {\r\n\r\n    const _sel = Helper(selector);\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n        if (this[len] === _sel[len]) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction listenerDelegate(el, evt, sel, handler, act) {\r\n\r\n    const doit = function (event) {\r\n        let t = event.target;\r\n        while (t && t !== this) {\r\n            if (t.matches(sel)) {\r\n                handler.call(t, event);\r\n            }\r\n            t = t.parentNode;\r\n        }\r\n    };\r\n\r\n    if (act === true) {\r\n        if (document.addEventListener) {\r\n            el.addEventListener(evt, doit, false);\r\n        } else if (document.attachEvent) {\r\n            el.attachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = doit;\r\n        }\r\n    } else {\r\n        if (document.removeEventListener) {\r\n            el.removeEventListener(evt, doit, false);\r\n        } else if (document.detachEvent) {\r\n            el.detachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Helper(params) {\r\n    return new Helper_(params);\r\n}","import { Helper } from '../helper'\r\n\r\nexport function getOffset(node) {\r\n    return node.getBoundingClientRect();\r\n}\r\n\r\nexport function getTransform(el) {\r\n    const transform = el.css('-webkit-transform') ||\r\n        el.css('-moz-transform') ||\r\n        el.css('-ms-transform') ||\r\n        el.css('-o-transform') ||\r\n        el.css('transform') ||\r\n        'none';\r\n    return transform;\r\n}\r\n\r\nexport function parseMatrix(value) {\r\n\r\n    const transform = value.match(/-?\\d+\\.?\\d+|-?\\d+/g);\r\n\r\n    if (transform) {\r\n        return transform.map(item => {\r\n            return parseFloat(item);\r\n        });\r\n    } else {\r\n        return [1, 0, 0, 1, 0, 0];\r\n    }\r\n}\r\n\r\nexport function addClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function (cl) {\r\n                return node.classList.add(cl);\r\n            });\r\n        } else {\r\n            return node.classList.add(cls);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function removeClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function (cl) {\r\n                return node.classList.remove(cl);\r\n            });\r\n        } else {\r\n            return node.classList.remove(cls);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function objectsCollide(a, b) {\r\n\r\n    const {\r\n        top: aTop,\r\n        left: aLeft\r\n    } = getOffset(a),\r\n        {\r\n            top: bTop,\r\n            left: bLeft\r\n        } = getOffset(b),\r\n        _a = Helper(a),\r\n        _b = Helper(b);\r\n\r\n    return !(\r\n        ((aTop < bTop) ||\r\n            (aTop + parseFloat(_a.css('height'))) > (bTop + parseFloat(_b.css('height')))) ||\r\n        ((aLeft < bLeft) ||\r\n            (aLeft + parseFloat(_a.css('width'))) > (bLeft + parseFloat(_b.css('width'))))\r\n    )\r\n}","export const unitRE = /px|em|%|ex|ch|rem|vh|vw|vmin|vmax|mm|cm|in|pt|pc|deg/;\r\nexport const RAD = Math.PI / 180;\r\nexport const DEG = 180 / Math.PI;\r\n\r\nexport function snapToGrid(value, snap) {\r\n\r\n    if (snap === 0) {\r\n        return value;\r\n    } else {\r\n        const result = snapCandidate(value, snap);\r\n\r\n        if (result - value < snap) {\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function snapCandidate(value, gridSize) {\r\n    if (gridSize === 0) return value;\r\n    return Math.round(value / gridSize) * gridSize;\r\n}\r\n\r\nexport function rotatedTopLeft(\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    rotationAngle,\r\n    revX,\r\n    revY\r\n) {\r\n\r\n    const hw = parseFloat(width) / 2,\r\n        hh = parseFloat(height) / 2;\r\n\r\n    const cx = x + hw,\r\n        cy = y + hh;\r\n\r\n    const dx = x - cx,\r\n        dy = y - cy;\r\n\r\n    const originalTopLeftAngle = Math.atan2(dy, dx);\r\n\r\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\r\n\r\n    const radius = Math.sqrt(Math.pow(hw, 2) + Math.pow(hh, 2));\r\n\r\n    let cos = Math.cos(rotatedTopLeftAngle),\r\n        sin = Math.sin(rotatedTopLeftAngle);\r\n\r\n    cos = revX === true ? -cos : cos;\r\n    sin = revY === true ? -sin : sin;\r\n\r\n    const rx = cx + radius * cos,\r\n        ry = cy + radius * sin;\r\n\r\n    return {\r\n        left: floatToFixed(rx),\r\n        top: floatToFixed(ry)\r\n    }\r\n}\r\n\r\nexport function toPX(value, parent) {\r\n    if (/px/.test(value)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(value)) {\r\n        return `${(parseFloat(value) * parseFloat(parent) / 100)}px`;\r\n    }\r\n}\r\n\r\nexport function fromPX(value, parent, toUnit) {\r\n    if (/px/.test(toUnit)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(toUnit)) {\r\n        return `${parseFloat(value) * 100 / parseFloat(parent)}%`;\r\n    }\r\n}\r\n\r\nexport function getUnitDimension(value) {\r\n    return value.match(unitRE)[0];\r\n}\r\n\r\nexport function floatToFixed(val) {\r\n    return Number(val.toFixed(6));\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    isDef,\r\n    isUndef,\r\n    isFunc,\r\n    warn\r\n} from '../util/util'\r\n\r\nimport {\r\n    addClass, getTransform, parseMatrix,\r\n    removeClass\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    snapToGrid,\r\n    RAD\r\n} from './common'\r\n\r\nexport default class Subject {\r\n\r\n    constructor(el, Observable) {\r\n\r\n        if (this.constructor === Subject) {\r\n            throw new TypeError('Cannot construct Subject instances directly');\r\n        }\r\n\r\n        this.el = el;\r\n        this.storage = null;\r\n        this.proxyMethods = null;\r\n        this.Ob = Observable;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n    }\r\n\r\n    enable(options) {\r\n\r\n        if (isUndef(this.storage)) {\r\n            this._load(options);\r\n            this._init(this.el);\r\n        } else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n\r\n        const {\r\n            storage,\r\n            proxyMethods,\r\n            el,\r\n            Ob\r\n        } = this;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        // unexpected case\r\n        if (storage.onExecution) {\r\n            this._end();\r\n            Helper(document)\r\n                .off('mousemove', this._onMouseMove)\r\n                .off('mouseup', this._onMouseUp)\r\n                .off('touchmove', this._onTouchMove)\r\n                .off('touchend', this._onTouchEnd);\r\n        }\r\n\r\n        removeClass(el, 'dg-drag');\r\n        this._destroy();\r\n\r\n        Ob.unsubscribe('ongetstate', this);\r\n        Ob.unsubscribe('onapply', this);\r\n        Ob.unsubscribe('onmove', this);\r\n        Ob.unsubscribe('onresize', this);\r\n        Ob.unsubscribe('onrotate', this);\r\n\r\n        proxyMethods.onDestroy.call(this, el);\r\n        delete this.storage;\r\n    }\r\n\r\n    setAngle(angle) {\r\n        const {\r\n            snap,\r\n            controls,\r\n            parent,\r\n        } = this.storage;\r\n        this.storage.transform = {\r\n            matrix: parseMatrix(\r\n                getTransform(Helper(controls))\r\n            ),\r\n            parentMatrix: parseMatrix(\r\n                getTransform(parent)\r\n            )\r\n        };\r\n        console.log('transform', this.storage.transform);\r\n\r\n        this._rotate(angle * Math.PI / 180, snap.angle);\r\n    }\r\n\r\n    _init() { }\r\n\r\n    _destroy() { }\r\n\r\n    _cursorPoint() { }\r\n\r\n    _drag() {\r\n        this._processMove(...arguments);\r\n        this.proxyMethods.onMove.call(this, ...arguments);\r\n    }\r\n\r\n    _rotate() {\r\n        this._processRotate(...arguments);\r\n        this.proxyMethods.onRotate.call(this, ...arguments);\r\n    }\r\n\r\n    _resize() {\r\n        this._processResize(...arguments);\r\n        this.proxyMethods.onResize.call(this, ...arguments);\r\n    }\r\n\r\n    _load(options) {\r\n\r\n        const { el, Ob } = this;\r\n\r\n        addClass(el, 'dg-drag');\r\n\r\n        const _snap = {\r\n            x: 10,\r\n            y: 10,\r\n            angle: 10 * RAD\r\n        };\r\n\r\n        const _each = {\r\n            move: false,\r\n            resize: false,\r\n            rotate: false\r\n        };\r\n\r\n        let _showHandles = true,\r\n            _restrict = null,\r\n            _onInit = () => { },\r\n            _onMove = () => { },\r\n            _onRotate = () => { },\r\n            _onResize = () => { },\r\n            _onDrop = () => { },\r\n            _onDestroy = () => { };\r\n\r\n        let _container = el.parentNode;\r\n\r\n        let _proportions;\r\n\r\n        if (isDef(options)) {\r\n\r\n            const {\r\n                snap,\r\n                each,\r\n                showHandles,\r\n                restrict,\r\n                onInit,\r\n                onDrop,\r\n                onMove,\r\n                onResize,\r\n                onRotate,\r\n                onDestroy,\r\n                container,\r\n                proportions\r\n            } = options;\r\n\r\n            if (isDef(snap)) {\r\n\r\n                const { x, y, angle } = snap;\r\n\r\n                _snap.x = isUndef(x) ? 10 : x;\r\n                _snap.y = isUndef(y) ? 10 : y;\r\n                _snap.angle = isUndef(angle)\r\n                    ? _snap.angle\r\n                    : angle * RAD;\r\n            }\r\n\r\n            if (isDef(each)) {\r\n\r\n                const { move, resize, rotate } = each;\r\n\r\n                _each.move = move || false;\r\n                _each.resize = resize || false;\r\n                _each.rotate = rotate || false;\r\n            }\r\n\r\n            if (isDef(restrict)) {\r\n                _restrict = restrict === 'parent'\r\n                    ? el.parentNode\r\n                    : Helper(restrict)[0] || document\r\n            }\r\n\r\n            _showHandles = isUndef(showHandles) ||\r\n                showHandles === true;\r\n\r\n            _container = Helper(container)[0] || _container;\r\n\r\n            _proportions = proportions || false;\r\n\r\n\r\n            _onInit = createEvent(onInit);\r\n            _onDrop = createEvent(onDrop);\r\n            _onMove = createEvent(onMove);\r\n            _onResize = createEvent(onResize);\r\n            _onRotate = createEvent(onRotate);\r\n            _onDestroy = createEvent(onDestroy);\r\n\r\n            _onInit.call(this, el);\r\n        }\r\n\r\n        this.storage = {\r\n            showHandles: _showHandles,\r\n            restrict: _restrict,\r\n            container: _container,\r\n            snap: _snap,\r\n            each: _each,\r\n            proportions: _proportions\r\n        };\r\n\r\n        this.proxyMethods = {\r\n            onInit: _onInit,\r\n            onDrop: _onDrop,\r\n            onMove: _onMove,\r\n            onResize: _onResize,\r\n            onRotate: _onRotate,\r\n            onDestroy: _onDestroy\r\n        };\r\n\r\n        if (_each.move || _each.resize || _each.rotate) {\r\n            Ob.subscribe('ongetstate', this);\r\n            Ob.subscribe('onapply', this);\r\n        }\r\n\r\n        if (_each.move) {\r\n            Ob.subscribe('onmove', this);\r\n        }\r\n        if (_each.resize) {\r\n            Ob.subscribe('onresize', this);\r\n        }\r\n        if (_each.rotate) {\r\n            Ob.subscribe('onrotate', this);\r\n        }\r\n    }\r\n\r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n\r\n        const ctx = this;\r\n        const { storage } = ctx;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        storage.frame = requestAnimFrame(ctx._animate);\r\n\r\n        if (!storage.doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        let {\r\n            handle,\r\n            handles,\r\n            cx,\r\n            cy,\r\n            nx,\r\n            ny,\r\n            pressang,\r\n            clientX,\r\n            clientY,\r\n            center,\r\n            snap,\r\n            doDrag,\r\n            doResize,\r\n            doRotate,\r\n            revX,\r\n            revY\r\n        } = storage;\r\n\r\n        const {\r\n            move: moveEach,\r\n            resize: resizeEach,\r\n            rotate: rotateEach\r\n        } = storage.each;\r\n\r\n        if (doResize) {\r\n\r\n            const { x, y } = this._pointToElement(\r\n                {\r\n                    x: clientX,\r\n                    y: clientY\r\n                }\r\n            );\r\n\r\n            let dx = snapToGrid(x - cx, snap.x),\r\n                dy = snapToGrid(y - cy, snap.y);\r\n\r\n            const dox = handle.is(handles.ml) ||\r\n                handle.is(handles.mr) ||\r\n                handle.is(handles.tl) ||\r\n                handle.is(handles.tr) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.br);\r\n\r\n            const doy = handle.is(handles.br) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.bc) ||\r\n                handle.is(handles.tr) ||\r\n                handle.is(handles.tl) ||\r\n                handle.is(handles.tc);\r\n\r\n            const isCenter = handle.is(handles.ml) ||\r\n                handle.is(handles.mr) ||\r\n                handle.is(handles.tc) ||\r\n                handle.is(handles.bc);\r\n\r\n            dx = dox ? (revX ? - dx : dx) : 0,\r\n                dy = doy ? (revY ? - dy : dy) : 0;\r\n\r\n            ctx._resize(\r\n                dx,\r\n                dy,\r\n                isCenter\r\n            );\r\n\r\n            if (resizeEach) {\r\n\r\n                ctx.Ob.notify('onresize',\r\n                    ctx,\r\n                    {\r\n                        dx,\r\n                        dy,\r\n                        isCenter\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doDrag) {\r\n\r\n            const dx = snapToGrid(clientX - nx, snap.x),\r\n                dy = snapToGrid(clientY - ny, snap.y);\r\n\r\n            ctx._drag(\r\n                dx,\r\n                dy\r\n            );\r\n\r\n            if (moveEach) {\r\n                ctx.Ob.notify('onmove',\r\n                    ctx,\r\n                    {\r\n                        dx,\r\n                        dy\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doRotate) {\r\n\r\n            const radians = Math.atan2(\r\n                clientY - center.y,\r\n                clientX - center.x\r\n            ) - pressang;\r\n\r\n            ctx._rotate(\r\n                snapToGrid(radians, snap.angle)\r\n            );\r\n\r\n            if (rotateEach) {\r\n                ctx.Ob.notify('onrotate',\r\n                    ctx,\r\n                    {\r\n                        radians\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    _start(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const { storage } = this;\r\n        const computed = this._compute(e);\r\n\r\n        Object.keys(computed).forEach(prop => {\r\n            storage[prop] = computed[prop];\r\n        });\r\n\r\n        const {\r\n            onRightEdge,\r\n            onBottomEdge,\r\n            onTopEdge,\r\n            onLeftEdge,\r\n            handle,\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = computed;\r\n\r\n        const doResize = onRightEdge ||\r\n            onBottomEdge ||\r\n            onTopEdge ||\r\n            onLeftEdge;\r\n\r\n        const doRotate = handle.is(storage.handles.rotator);\r\n\r\n        const {\r\n            clientX,\r\n            clientY,\r\n            ctrlKey\r\n        } = e;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = this._cursorPoint(\r\n            {\r\n                clientX,\r\n                clientY\r\n            }\r\n        );\r\n\r\n        const {\r\n            x: nx,\r\n            y: ny\r\n        } = this._pointToElement({ x, y });\r\n\r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.nx = x;\r\n        storage.ny = y;\r\n        storage.cx = nx;\r\n        storage.cy = ny;\r\n        storage.ctrlKey = ctrlKey;\r\n        storage.doResize = doResize;\r\n        storage.doDrag = !doRotate && !doResize;\r\n        storage.doRotate = doRotate;\r\n        storage.onExecution = true;\r\n\r\n        this.Ob.notify(\r\n            'ongetstate',\r\n            this,\r\n            {\r\n                factor,\r\n                revX,\r\n                revY\r\n            }\r\n        );\r\n\r\n        this._draw();\r\n    }\r\n\r\n    _moving(e) {\r\n\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        const { storage } = this;\r\n\r\n        const { x, y } = this._cursorPoint(e);\r\n\r\n        storage.clientX = x;\r\n        storage.clientY = y;\r\n        storage.doDraw = true;\r\n    }\r\n\r\n    _end(e) {\r\n\r\n        if (isDef(e) && e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const {\r\n            storage,\r\n            proxyMethods\r\n        } = this;\r\n\r\n        const action = storage.doResize\r\n            ? 'resize'\r\n            : (storage.doDrag ? 'drag' : 'rotate');\r\n\r\n        storage.doResize = false;\r\n        storage.doDrag = false;\r\n        storage.doRotate = false;\r\n        storage.doDraw = false;\r\n        storage.onExecution = false;\r\n\r\n        this._apply(action);\r\n\r\n        this.Ob.notify(\r\n            'onapply',\r\n            this,\r\n            action\r\n        );\r\n\r\n        cancelAnimFrame(storage.frame);\r\n        proxyMethods.onDrop.call(this, e, this.el);\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        Helper(document)\r\n            .on('mousemove', this._onMouseMove)\r\n            .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        Helper(document)\r\n            .on('touchmove', this._onTouchMove)\r\n            .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._moving(\r\n            e,\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._moving(\r\n            e.touches[0],\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        Helper(document)\r\n            .off('mousemove', this._onMouseMove)\r\n            .off('mouseup', this._onMouseUp);\r\n        this._end(\r\n            e,\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n        Helper(document)\r\n            .off('touchmove', this._onTouchMove)\r\n            .off('touchend', this._onTouchEnd);\r\n        if (e.touches.length === 0) {\r\n            this._end(\r\n                e.changedTouches[0],\r\n                this.el)\r\n                ;\r\n        }\r\n    }\r\n\r\n    notifyMove(data) {\r\n\r\n        const {\r\n            dx,\r\n            dy\r\n        } = data;\r\n\r\n        this._drag(\r\n            dx,\r\n            dy\r\n        );\r\n    }\r\n\r\n    notifyRotate(data) {\r\n\r\n        const {\r\n            snap\r\n        } = this.storage;\r\n\r\n        this._rotate(\r\n            snapToGrid(data.radians, snap.angle)\r\n        );\r\n    }\r\n\r\n    notifyResize(data) {\r\n\r\n        const {\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        } = data;\r\n\r\n        this._resize(\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        );\r\n    }\r\n\r\n    notifyApply(actionName) {\r\n        this._apply(actionName);\r\n    }\r\n\r\n    notifyGetState(data) {\r\n\r\n        const store = this.storage;\r\n\r\n        const recalc = this._getState(\r\n            data\r\n        );\r\n\r\n        Object.keys(recalc).forEach(key => {\r\n            store[key] = recalc[key];\r\n        });\r\n    }\r\n}\r\n\r\nfunction createEvent(fn) {\r\n    return isFunc(fn)\r\n        ? function () {\r\n            fn.call(this, ...arguments);\r\n        }\r\n        : () => { };\r\n}","import { Helper } from '../helper'\r\nimport Subject from './subject'\r\n\r\nimport {\r\n    addClass,\r\n    getTransform,\r\n    parseMatrix,\r\n    getOffset\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    rotatedTopLeft,\r\n    toPX,\r\n    fromPX,\r\n    getUnitDimension,\r\n    floatToFixed\r\n} from './common'\r\n\r\nconst MIN_SIZE = 20;\r\nconst BRACKETS_START = `<div class=\"dg dg-normal\"></div>\r\n        <div class=\"dg-hdl dg-rotator\"></div>`;\r\nconst BRACKETS_CORNERS = `\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-l dg-hdl-tl\"></div>\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-r dg-hdl-tr\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-r dg-hdl-br\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-l dg-hdl-bl\"></div>`;\r\nconst BRACKETS_SIDES_H = `\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-l dg-hdl-ml\"></div>\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-r dg-hdl-mr\"></div>`;\r\nconst BRACKETS_SIDES_V = `\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-c dg-hdl-tc\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-c dg-hdl-bc\"></div>`;\r\nconst BRACKETS_SIDES = `\r\n       ${BRACKETS_SIDES_H}\r\n       ${BRACKETS_SIDES_V}`;\r\nconst BRACKETS_PROPORTIONS = `\r\n        ${BRACKETS_START}\r\n        ${BRACKETS_CORNERS}\r\n        ${BRACKETS_SIDES_H}`;\r\nconst BRACKETS = `\r\n        ${BRACKETS_START}\r\n        ${BRACKETS_CORNERS}\r\n        ${BRACKETS_SIDES}`;\r\n\r\nexport default class Draggable extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(sel) {\r\n\r\n        const { storage } = this;\r\n\r\n        const container = document.createElement('div');\r\n\r\n        addClass(container, 'dg-wrapper');\r\n        sel.parentNode.insertBefore(container, sel);\r\n\r\n        const _sel = Helper(sel);\r\n\r\n        const {\r\n            left,\r\n            top,\r\n            width,\r\n            height\r\n        } = sel.style;\r\n\r\n        const w = width || _sel.css('width'),\r\n            h = height || _sel.css('height'),\r\n            t = top || _sel.css('top'),\r\n            l = left || _sel.css('left');\r\n\r\n        const _parent = Helper(container.parentNode);\r\n\r\n        const css = {\r\n            top: t,\r\n            left: l,\r\n            width: w,\r\n            height: h,\r\n            transform: getTransform(_sel)\r\n        };\r\n\r\n        const controls = document.createElement('div');\r\n        controls.innerHTML = this.storage.proportions ? BRACKETS_PROPORTIONS : BRACKETS;\r\n\r\n        addClass(controls, 'dg-controls');\r\n\r\n        container.appendChild(controls);\r\n\r\n        const _controls = Helper(controls);\r\n        _controls.css(css);\r\n\r\n        const _container = Helper(container);\r\n\r\n        Object.assign(storage, {\r\n            controls,\r\n            handles: {\r\n                tl: _container.find('.dg-hdl-tl'),\r\n                tr: _container.find('.dg-hdl-tr'),\r\n                br: _container.find('.dg-hdl-br'),\r\n                bl: _container.find('.dg-hdl-bl'),\r\n                tc: _container.find('.dg-hdl-tc'),\r\n                bc: _container.find('.dg-hdl-bc'),\r\n                ml: _container.find('.dg-hdl-ml'),\r\n                mr: _container.find('.dg-hdl-mr'),\r\n                rotator: _container.find('.dg-rotator')\r\n            },\r\n            parent: _parent\r\n        });\r\n\r\n        _controls.on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _destroy() {\r\n\r\n        const {\r\n            controls,\r\n            container\r\n        } = this.storage;\r\n\r\n        Helper(controls)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n\r\n        container.removeChild(controls.parentNode);\r\n    }\r\n\r\n    _compute(e) {\r\n\r\n        const {\r\n            handles,\r\n        } = this.storage;\r\n\r\n        const handle = Helper(e.target);\r\n\r\n        //reverse axis\r\n        const revX = handle.is(handles.tl) ||\r\n            handle.is(handles.ml) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.tc);\r\n\r\n        const revY = handle.is(handles.tl) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.tc) ||\r\n            handle.is(handles.ml);\r\n\r\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n        //reverse angle\r\n        const factor = handle.is(handles.tr) ||\r\n            handle.is(handles.bl)\r\n            ? -1\r\n            : 1;\r\n\r\n        const _computed = this._getState({\r\n            factor,\r\n            revX,\r\n            revY\r\n        });\r\n\r\n        const {\r\n            x: clientX,\r\n            y: clientY\r\n        } = this._cursorPoint(e);\r\n\r\n        const pressang = Math.atan2(\r\n            clientY - _computed.center.y,\r\n            clientX - _computed.center.x\r\n        );\r\n\r\n        _computed.onTopEdge = onTopEdge;\r\n        _computed.onLeftEdge = onLeftEdge;\r\n        _computed.onRightEdge = onRightEdge;\r\n        _computed.onBottomEdge = onBottomEdge;\r\n        _computed.handle = handle;\r\n        _computed.pressang = pressang;\r\n\r\n        return _computed;\r\n    }\r\n\r\n    _pointToElement(data) {\r\n\r\n        const {\r\n            transform,\r\n        } = this.storage;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = data;\r\n\r\n        const ctm = [...transform.matrix];\r\n        ctm[4] = ctm[5] = 0;\r\n\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x,\r\n                y\r\n            },\r\n            matrixInvert(ctm)\r\n        );\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n\r\n        const {\r\n            container\r\n        } = this.storage;\r\n\r\n        const globalMatrix = parseMatrix(\r\n            getTransform(Helper(container))\r\n        );\r\n\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            },\r\n            matrixInvert(\r\n                globalMatrix\r\n            )\r\n        );\r\n    }\r\n\r\n    _apply() {\r\n\r\n        const {\r\n            storage,\r\n            el\r\n        } = this;\r\n\r\n        const _el = Helper(el);\r\n\r\n        const {\r\n            cached,\r\n            parent,\r\n            dimens,\r\n            controls\r\n        } = storage;\r\n\r\n        if (!cached) return;\r\n\r\n        const matrix = [...cached];\r\n\r\n        const pW = parent.css('width'),\r\n            pH = parent.css('height');\r\n\r\n        const diffLeft = matrix[4];\r\n        const diffTop = matrix[5];\r\n\r\n        matrix[4] = 0;\r\n        matrix[5] = 0;\r\n\r\n        const css = matrixToCSS(matrix);\r\n\r\n        const left = parseFloat(\r\n            toPX(\r\n                _el[0].style.left || _el.css('left'),\r\n                pW\r\n            )\r\n        );\r\n\r\n        const top = parseFloat(\r\n            toPX(\r\n                _el[0].style.top || _el.css('top'),\r\n                pH\r\n            )\r\n        );\r\n\r\n        css.left = fromPX(\r\n            left + diffLeft + 'px',\r\n            pW,\r\n            dimens.left\r\n        );\r\n\r\n        css.top = fromPX(\r\n            top + diffTop + 'px',\r\n            pH,\r\n            dimens.top\r\n        );\r\n\r\n        _el.css(css);\r\n        Helper(controls).css(css);\r\n\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    getControls() {\r\n        return this.storage.controls;\r\n    }\r\n\r\n    _processResize(dx, dy, isCenter) {\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            coords,\r\n            cw,\r\n            ch,\r\n            dimens,\r\n            parent,\r\n            transform,\r\n            refang,\r\n            revX,\r\n            revY\r\n        } = storage;\r\n\r\n        const { style } = controls;\r\n\r\n        let newWidth = cw + (this.storage.proportions && !isCenter ? Math.min(dx, dy) : dx),\r\n            newHeight = ch + (this.storage.proportions && !isCenter ? newWidth/cw*ch - ch : dy);\r\n\r\n        if (newWidth < Math.max(MIN_SIZE, (this.storage.minWidth || 0))\r\n            || newHeight < Math.max(MIN_SIZE, (this.storage.minHeight || 0))\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        style.width = `${newWidth}px`;\r\n        style.height = `${newHeight}px`;\r\n\r\n        const matrix = [...transform.matrix];\r\n\r\n        const newCoords = rotatedTopLeft(\r\n            matrix[4],\r\n            matrix[5],\r\n            newWidth,\r\n            newHeight,\r\n            refang,\r\n            revX,\r\n            revY\r\n        );\r\n\r\n        matrix[4] -= (newCoords.left - coords.left);\r\n        matrix[5] -= (newCoords.top - coords.top);\r\n\r\n        const css = matrixToCSS(matrix);\r\n\r\n        Helper(controls).css(css);\r\n\r\n        css.width = fromPX(\r\n            style.width,\r\n            parent.css('width'),\r\n            dimens.width\r\n        );\r\n\r\n        css.height = fromPX(\r\n            style.height,\r\n            parent.css('height'),\r\n            dimens.height\r\n        );\r\n\r\n        Helper(el).css(css);\r\n        storage.cached = matrix;\r\n    }\r\n\r\n    _processMove(dx, dy) {\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            transform\r\n        } = storage;\r\n\r\n        const {\r\n            matrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        // const pctm = [...parentMatrix];\r\n        // pctm[4] = pctm[5] = 0;\r\n\r\n        // const { x, y } = multiplyMatrixAndPoint(\r\n        //     {\r\n        //         x: dx,\r\n        //         y: dy\r\n        //     },\r\n        //     matrixInvert(pctm)\r\n        // );\r\n\r\n        const n_matrix = [...matrix];\r\n\r\n        n_matrix[4] = matrix[4] + dx;\r\n        n_matrix[5] = matrix[5] + dy;\r\n\r\n        const css = matrixToCSS(n_matrix);\r\n\r\n        Helper(controls).css(css);\r\n        Helper(el).css(css);\r\n\r\n        storage.cached = n_matrix;\r\n    }\r\n\r\n    _processRotate(radians) {\r\n\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            transform\r\n        } = storage;\r\n\r\n        const {\r\n            matrix,\r\n            parentMatrix\r\n        } = transform;\r\n        //console.log('matrix', matrix);\r\n        //console.log('parentMatrix', parentMatrix);\r\n\r\n        const cos = floatToFixed(Math.cos(radians)),\r\n            sin = floatToFixed(Math.sin(radians));\r\n\r\n        const rotMatrix = [\r\n            cos,\r\n            sin,\r\n            -sin,\r\n            cos,\r\n            0,\r\n            0\r\n        ];\r\n\r\n        const pctm = [...parentMatrix];\r\n        pctm[4] = pctm[5] = 0;\r\n\r\n        const resRotMatrix = multiplyMatrix(\r\n            matrixInvert(pctm),\r\n            multiplyMatrix(rotMatrix, pctm)\r\n        );\r\n\r\n        const resMatrix = multiplyMatrix(resRotMatrix, matrix);\r\n\r\n        const css = matrixToCSS(resMatrix);\r\n\r\n        Helper(controls).css(css);\r\n        Helper(el).css(css);\r\n\r\n        storage.cached = resMatrix;\r\n    }\r\n\r\n    _getState(params) {\r\n\r\n        const {\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = params;\r\n\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            handles,\r\n            controls,\r\n            parent\r\n        } = storage;\r\n\r\n        const tl_off = getOffset(handles.tl[0]),\r\n            tr_off = getOffset(handles.tr[0]);\r\n\r\n        const refang = Math.atan2(\r\n            tr_off.top - tl_off.top,\r\n            tr_off.left - tl_off.left\r\n        ) * factor;\r\n\r\n        const cw = parseFloat(\r\n            toPX(controls.style.width, parent.css('width'))\r\n        );\r\n        const ch = parseFloat(\r\n            toPX(controls.style.height, parent.css('height'))\r\n        );\r\n\r\n        const _el = Helper(el);\r\n        const styleList = el.style;\r\n\r\n        const dimens = {\r\n            top: getUnitDimension(styleList.top || _el.css('top')),\r\n            left: getUnitDimension(styleList.left || _el.css('left')),\r\n            width: getUnitDimension(styleList.width || _el.css('width')),\r\n            height: getUnitDimension(styleList.height || _el.css('height'))\r\n        };\r\n\r\n        const transform = {\r\n            matrix: parseMatrix(\r\n                getTransform(Helper(controls))\r\n            ),\r\n            parentMatrix: parseMatrix(\r\n                getTransform(parent)\r\n            )\r\n        };\r\n\r\n        //getting current coordinates considering rotation angle                                                                                                  \r\n        const coords = rotatedTopLeft(\r\n            transform.matrix[4],\r\n            transform.matrix[5],\r\n            cw,\r\n            ch,\r\n            refang,\r\n            revX,\r\n            revY\r\n        );\r\n\r\n        const offset_ = getOffset(el);\r\n\r\n        const center_x = offset_.left + cw / 2,\r\n            center_y = offset_.top + ch / 2;\r\n\r\n        const { x, y } = multiplyMatrixAndPoint(\r\n            {\r\n                x: center_x,\r\n                y: center_y\r\n            },\r\n            matrixInvert(transform.parentMatrix)\r\n        );\r\n\r\n        return {\r\n            transform,\r\n            cw,\r\n            ch,\r\n            coords,\r\n            center: {\r\n                x,\r\n                y\r\n            },\r\n            factor,\r\n            refang,\r\n            revX,\r\n            revY,\r\n            dimens\r\n        }\r\n    }\r\n}\r\n\r\nfunction matrixToCSS(arr) {\r\n\r\n    const style = `matrix(${arr.join()})`;\r\n\r\n    return {\r\n        transform: style,\r\n        webkitTranform: style,\r\n        mozTransform: style,\r\n        msTransform: style,\r\n        otransform: style\r\n    }\r\n}\r\n\r\nfunction multiplyMatrixAndPoint(point, matrix) {\r\n\r\n    const {\r\n        x, y\r\n    } = point;\r\n\r\n    const [a, b, c, d, e, f] = matrix;\r\n\r\n    return {\r\n        x: a * x + c * y + e,\r\n        y: b * x + d * y + f\r\n    };\r\n}\r\n\r\n//http://blog.acipo.com/matrix-inversion-in-javascript/\r\nfunction matrixInvert(ctm) {\r\n    // I use Guassian Elimination to calculate the inverse:\r\n    // (1) 'augment' the matrix (left) by the identity (on the right)\r\n    // (2) Turn the matrix on the left into the identity by elemetry row ops\r\n    // (3) The matrix on the right is the inverse (was the identity matrix)\r\n    // There are 3 elemtary row ops: (I combine b and c in my code)\r\n    // (a) Swap 2 rows\r\n    // (b) Multiply a row by a scalar\r\n    // (c) Add 2 rows\r\n\r\n    const M = [\r\n        [ctm[0], ctm[2], ctm[4]],\r\n        [ctm[1], ctm[3], ctm[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    //if the matrix isn't square: exit (error)\r\n    if (M.length !== M[0].length) {\r\n        return;\r\n    }\r\n\r\n    //create the identity matrix (I), and a copy (C) of the original\r\n    const dim = M.length;\r\n\r\n    const I = [],\r\n        C = [];\r\n\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // Create the row\r\n        I[I.length] = [];\r\n        C[C.length] = [];\r\n        for (let j = 0; j < dim; j += 1) {\r\n\r\n            //if we're on the diagonal, put a 1 (for identity)\r\n            if (i == j) {\r\n                I[i][j] = 1;\r\n            } else {\r\n                I[i][j] = 0;\r\n            }\r\n\r\n            // Also, make the copy of the original\r\n            C[i][j] = M[i][j];\r\n        }\r\n    }\r\n\r\n    // Perform elementary row operations\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // get the element e on the diagonal\r\n        let e = C[i][i];\r\n\r\n        // if we have a 0 on the diagonal (we'll need to swap with a lower row)\r\n        if (e === 0) {\r\n            //look through every row below the i'th row\r\n            for (let ii = i + 1; ii < dim; ii += 1) {\r\n                //if the ii'th row has a non-0 in the i'th col\r\n                if (C[ii][i] !== 0) {\r\n                    //it would make the diagonal have a non-0 so swap it\r\n                    for (let j = 0; j < dim; j++) {\r\n                        e = C[i][j]; //temp store i'th row\r\n                        C[i][j] = C[ii][j]; //replace i'th row by ii'th\r\n                        C[ii][j] = e; //repace ii'th by temp\r\n                        e = I[i][j]; //temp store i'th row\r\n                        I[i][j] = I[ii][j]; //replace i'th row by ii'th\r\n                        I[ii][j] = e; //repace ii'th by temp\r\n                    }\r\n                    //don't bother checking other rows since we've swapped\r\n                    break;\r\n                }\r\n            }\r\n            //get the new diagonal\r\n            e = C[i][i];\r\n            //if it's still 0, not invertable (error)\r\n            if (e === 0) {\r\n                return\r\n            }\r\n        }\r\n\r\n        // Scale this row down by e (so we have a 1 on the diagonal)\r\n        for (let j = 0; j < dim; j++) {\r\n            C[i][j] = C[i][j] / e; //apply to original matrix\r\n            I[i][j] = I[i][j] / e; //apply to identity\r\n        }\r\n\r\n        // Subtract this row (scaled appropriately for each row) from ALL of\r\n        // the other rows so that there will be 0's in this column in the\r\n        // rows above and below this one\r\n        for (let ii = 0; ii < dim; ii++) {\r\n            // Only apply to other rows (we want a 1 on the diagonal)\r\n            if (ii == i) {\r\n                continue;\r\n            }\r\n\r\n            // We want to change this element to 0\r\n            e = C[ii][i];\r\n\r\n            // Subtract (the row above(or below) scaled by e) from (the\r\n            // current row) but start at the i'th column and assume all the\r\n            // stuff left of diagonal is 0 (which it should be if we made this\r\n            // algorithm correctly)\r\n            for (let j = 0; j < dim; j++) {\r\n                C[ii][j] -= e * C[i][j]; //apply to original matrix\r\n                I[ii][j] -= e * I[i][j]; //apply to identity\r\n            }\r\n        }\r\n    }\r\n\r\n    //we've done all operations, C should be the identity\r\n    //matrix I should be the inverse:\r\n    return [\r\n        I[0][0], I[1][0],\r\n        I[0][1], I[1][1],\r\n        I[0][2], I[1][2]\r\n    ];\r\n}\r\n\r\nfunction multiplyMatrix(mtrx1, mtrx2) {\r\n\r\n    const m1 = [\r\n        [mtrx1[0], mtrx1[2], mtrx1[4]],\r\n        [mtrx1[1], mtrx1[3], mtrx1[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const m2 = [\r\n        [mtrx2[0], mtrx2[2], mtrx2[4]],\r\n        [mtrx2[1], mtrx2[3], mtrx2[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const result = [];\r\n\r\n    for (let j = 0; j < m2.length; j++) {\r\n        result[j] = [];\r\n        for (let k = 0; k < m1[0].length; k++) {\r\n            let sum = 0;\r\n            for (let i = 0; i < m1.length; i++) {\r\n                sum += m1[i][k] * m2[j][i];\r\n            }\r\n            result[j].push(sum);\r\n        }\r\n    }\r\n\r\n    return [\r\n        result[0][0], result[1][0],\r\n        result[0][1], result[1][1],\r\n        result[0][2], result[1][2]\r\n    ];\r\n}","import { warn } from './../../util/util'\r\n\r\nexport const ALLOWED_ELEMENTS = [\r\n    'circle', 'ellipse',\r\n    'image', 'line',\r\n    'path', 'polygon',\r\n    'polyline', 'rect',\r\n    'text', 'g'\r\n];\r\n\r\nexport function createSVGElement(name) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\n\r\nexport function createSVGMatrix() {\r\n    return createSVGElement('svg').createSVGMatrix();\r\n}\r\n\r\nexport function getTransformToElement(toElement, g) {\r\n    const gTransform = g.getScreenCTM() || createSVGMatrix();\r\n    return gTransform.inverse().multiply(\r\n        toElement.getScreenCTM() || createSVGMatrix()\r\n    );\r\n}\r\n\r\nexport function matrixToString(m) {\r\n    return `matrix(${m.a},${m.b},${m.c},${m.d},${m.e},${m.f})`;\r\n}\r\n\r\nexport function pointTo(ctm, svg, x, y) {\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = x;\r\n    pt.y = y;\r\n    return pt.matrixTransform(ctm);\r\n}\r\n\r\nexport function cloneMatrix(b) {\r\n\r\n    const a = createSVGMatrix();\r\n\r\n    a.a = b.a;\r\n    a.b = b.b;\r\n    a.c = b.c;\r\n    a.d = b.d;\r\n    a.e = b.e;\r\n    a.f = b.f;\r\n\r\n    return a;\r\n}\r\n\r\nexport function checkElement(sel) {\r\n\r\n    const tagName = sel.tagName.toLowerCase();\r\n\r\n    if (ALLOWED_ELEMENTS.indexOf(tagName) === -1) {\r\n        warn(\r\n            'Selected element is not allowed to transform. Allowed elements:\\n' +\r\n            'circle, ellipse, image, line, path, polygon, polyline, rect, text, g'\r\n        );\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}","import {\r\n    warn\r\n} from './../../util/util'\r\n\r\nimport {\r\n    pointTo,\r\n    cloneMatrix\r\n} from './util'\r\n\r\nconst dRE = /\\s*([achlmqstvz])([^achlmqstvz]*)\\s*/gi;\r\nconst sepRE = /\\s*,\\s*|\\s+/g;\r\n\r\nfunction parsePath(path) {\r\n\r\n    let match = dRE.lastIndex = 0;\r\n\r\n    const serialized = [];\r\n\r\n    while ((match = dRE.exec(path))) {\r\n\r\n        const cmd = match[1];\r\n        const upCmd = cmd.toUpperCase();\r\n\r\n        // normalize the data\r\n        const data = match[2]\r\n            .replace(/([^e])-/g, '$1 -')\r\n            .replace(/ +/g, ' ');\r\n\r\n        serialized.push({\r\n            relative: cmd !== upCmd,\r\n            key: upCmd,\r\n            cmd: cmd,\r\n            values: data.trim().split(sepRE).map(val => {\r\n                if (!isNaN(val)) {\r\n                    return Number(val);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    return serialized;\r\n}\r\n\r\nexport function movePath(params) {\r\n\r\n    const {\r\n        path,\r\n        dx,\r\n        dy\r\n    } = params;\r\n\r\n    try {\r\n\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n        let space = ' ';\r\n\r\n        let firstCommand = true;\r\n\r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n\r\n            const item = serialized[i];\r\n\r\n            const {\r\n                values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n\r\n            const coordinates = [];\r\n\r\n            switch (cmd) {\r\n\r\n                case 'M': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        if (!(relative && !firstCommand)) {\r\n                            x += dx;\r\n                            y += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        firstCommand = false;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'A': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 7) {\r\n\r\n                        const set = values.slice(k, k + 7);\r\n\r\n                        if (!relative) {\r\n                            set[5] = set[5] + dx;\r\n                            set[6] = set[6] + dy;\r\n                        }\r\n\r\n                        coordinates.push(...set);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'C': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 6) {\r\n\r\n                        const set = values.slice(k, k + 6);\r\n\r\n                        if (!relative) {\r\n                            set[0] = set[0] + dx;\r\n                            set[1] = set[1] + dy;\r\n                            set[2] = set[2] + dx;\r\n                            set[3] = set[3] + dy;\r\n                            set[4] = set[4] + dx;\r\n                            set[5] = set[5] + dy;\r\n                        }\r\n\r\n                        coordinates.push(...set);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'H': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const set = values.slice(k, k + 1);\r\n\r\n                        if (!relative) {\r\n                            set[0] += dx;\r\n                        }\r\n\r\n                        coordinates.push(set[0]);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'V': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const set = values.slice(k, k + 1);\r\n\r\n                        if (!relative) {\r\n                            set[0] += dy;\r\n                        }\r\n                        coordinates.push(set[0]);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'L':\r\n                case 'T': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        if (!relative) {\r\n                            x += dx;\r\n                            y += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x,\r\n                            y\r\n                        );\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                case 'Q':\r\n                case 'S': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n\r\n                        const [x1, y1, x2, y2] = values.slice(k, k + 4);\r\n\r\n                        if (!relative) {\r\n                            x1 += dx;\r\n                            y1 += dy;\r\n                            x2 += dx;\r\n                            y2 += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x1,\r\n                            y1,\r\n                            x2,\r\n                            y2\r\n                        );\r\n                    }\r\n                    break;\r\n                }\r\n                case 'Z':\r\n                    values[0] = '';\r\n                    space = '';\r\n                    break;\r\n            }\r\n\r\n            str += item.cmd + coordinates.join(',') + space;\r\n        }\r\n\r\n        return str;\r\n\r\n    } catch (err) {\r\n        warn('Path parsing error: ' + err);\r\n    }\r\n}\r\n\r\nexport function resizePath(params) {\r\n\r\n    const {\r\n        path,\r\n        localCTM,\r\n        container\r\n    } = params;\r\n\r\n    try {\r\n\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n        let space = ' ';\r\n\r\n        const res = [];\r\n\r\n        let firstCommand = true;\r\n\r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n\r\n            const item = serialized[i];\r\n\r\n            const {\r\n                values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n\r\n            switch (cmd) {\r\n\r\n                case 'A': {\r\n\r\n                    //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 7) {\r\n\r\n                        const [rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y] =\r\n                            values.slice(k, k + 7);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX,\r\n                            resY\r\n                        );\r\n\r\n                        mtrx.e = mtrx.f = 0;\r\n\r\n                        const {\r\n                            x: newRx,\r\n                            y: newRy\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            rx,\r\n                            ry\r\n                        );\r\n\r\n                        coordinates.unshift(\r\n                            newRx,\r\n                            newRy,\r\n                            x_axis_rot,\r\n                            large_arc_flag,\r\n                            sweep_flag\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'C': {\r\n\r\n                    //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 6) {\r\n\r\n                        const [x1, y1, x2, y2, x, y] = values.slice(k, k + 6);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX1,\r\n                            y: resY1\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x1,\r\n                            y1\r\n                        );\r\n\r\n                        const {\r\n                            x: resX2,\r\n                            y: resY2\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x2,\r\n                            y2\r\n                        );\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX1,\r\n                            resY1,\r\n                            resX2,\r\n                            resY2,\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n                // this command make impossible free transform within group\r\n                // todo: use only proportional resizing or need to be converted to L\r\n                case 'H': {\r\n\r\n                    // H x (or h dx)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const [x] = values.slice(k, k + 1);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            0\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n                // this command make impossible free transform within group\r\n                // todo: use only proportional resizing or need to be converted to L\r\n                case 'V': {\r\n\r\n                    // V y (or v dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const [y] = values.slice(k, k + 1);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            0,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'T': // T x y (or t dx dy)\r\n                case 'L': {\r\n\r\n                    // L x y (or l dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'M': {\r\n\r\n                    // M x y (or dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [x, y] = values.slice(k, k + 2);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative && !firstCommand) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX,\r\n                            resY\r\n                        );\r\n\r\n                        firstCommand = false;\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'Q': {\r\n\r\n                    //Q x1 y1, x y (or q dx1 dy1, dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n\r\n                        const [x1, y1, x, y] = values.slice(k, k + 4);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX1,\r\n                            y: resY1\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x1,\r\n                            y1\r\n                        );\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX1,\r\n                            resY1,\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'S': {\r\n\r\n                    //S x2 y2, x y (or s dx2 dy2, dx dy)\r\n                    const coordinates = [];\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n\r\n                        const [x2, y2, x, y] = values.slice(k, k + 4);\r\n\r\n                        const mtrx = cloneMatrix(localCTM);\r\n\r\n                        if (relative) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n\r\n                        const {\r\n                            x: resX2,\r\n                            y: resY2\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container,\r\n                            x2,\r\n                            y2\r\n                        );\r\n\r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            localCTM,\r\n                            container,\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        coordinates.push(\r\n                            resX2,\r\n                            resY2,\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n\r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n\r\n                case 'Z': {\r\n                    res.push(['']);\r\n                    space = '';\r\n                    break;\r\n                }\r\n            }\r\n\r\n            str += item.cmd + res[i].join(',') + space;\r\n        }\r\n\r\n        return str;\r\n\r\n    } catch (err) {\r\n        warn('Path parsing error: ' + err);\r\n    }\r\n}","import { Helper } from '../../helper'\r\nimport Subject from '../subject'\r\n\r\nimport {\r\n    isUndef\r\n} from '../../util/util'\r\n\r\nimport {\r\n    floatToFixed\r\n} from '../common'\r\n\r\nimport {\r\n    movePath,\r\n    resizePath\r\n} from './path'\r\n\r\nimport {\r\n    ALLOWED_ELEMENTS,\r\n    createSVGElement,\r\n    createSVGMatrix,\r\n    getTransformToElement,\r\n    matrixToString,\r\n    pointTo\r\n} from './util'\r\n\r\nconst MIN_SIZE = 2;\r\nconst ROT_OFFSET = 50;\r\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g;\r\n\r\nexport default class DraggableSVG extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(sel) {\r\n\r\n        const { storage } = this;\r\n\r\n        const {\r\n            showHandles,\r\n            container\r\n        } = storage;\r\n\r\n        const wrapper = createSVGElement('g');\r\n        container.appendChild(wrapper);\r\n\r\n        const {\r\n            width: cw,\r\n            height: ch,\r\n            x: cx,\r\n            y: cy\r\n        } = sel.getBBox();\r\n\r\n        const elCTM = getTransformToElement(sel, container);\r\n        const box = createSVGElement('rect');\r\n\r\n        const attrs = [\r\n            ['width', cw],\r\n            ['height', ch],\r\n            ['x', cx],\r\n            ['y', cy],\r\n            ['fill', 'rgba(0, 168, 255, 0.2)'],\r\n            ['stroke', '#00a8ff'],\r\n            ['stroke-dasharray', '3 3'],\r\n            ['vector-effect', 'non-scaling-stroke'],\r\n            ['transform', matrixToString(elCTM)]\r\n        ];\r\n\r\n        attrs.forEach(item => {\r\n            box.setAttribute(item[0], item[1]);\r\n        });\r\n\r\n        const handlesGroup = createSVGElement('g'),\r\n            normalLineGroup = createSVGElement('g'),\r\n            group = createSVGElement('g');\r\n\r\n        group.appendChild(box);\r\n        wrapper.appendChild(group);\r\n        wrapper.appendChild(normalLineGroup);\r\n        wrapper.appendChild(handlesGroup);\r\n\r\n        const {\r\n            x: bX,\r\n            y: bY,\r\n            width: bW,\r\n            height: bH\r\n        } = box.getBBox();\r\n\r\n        const boxCTM = getTransformToElement(box, box.parentNode);\r\n\r\n        const handles = {\r\n            tl: pointTo(boxCTM, container, bX, bY),\r\n            tr: pointTo(boxCTM, container, bX + bW, bY),\r\n            br: pointTo(boxCTM, container, bX + bW, bY + bH),\r\n            bl: pointTo(boxCTM, container, bX, bY + bH),\r\n            tc: pointTo(boxCTM, container, bX + bW / 2, bY),\r\n            bc: pointTo(boxCTM, container, bX + bW / 2, bY + bH),\r\n            ml: pointTo(boxCTM, container, bX, bY + bH / 2),\r\n            mr: pointTo(boxCTM, container, bX + bW, bY + bH / 2),\r\n            //center: pointTo(boxCTM, container, bX + bW / 2, bY + bH / 2),\r\n            rotator: {}\r\n        };\r\n\r\n        const theta = Math.atan2(\r\n            handles.tl.y - handles.tr.y,\r\n            handles.tl.x - handles.tr.x\r\n        );\r\n\r\n        handles.rotator.x = handles.mr.x - ROT_OFFSET * Math.cos(theta);\r\n        handles.rotator.y = handles.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n        const normalLine = createSVGElement('line');\r\n\r\n        if (showHandles) {\r\n\r\n            normalLine.x1.baseVal.value = handles.mr.x;\r\n            normalLine.y1.baseVal.value = handles.mr.y;\r\n            normalLine.x2.baseVal.value = handles.rotator.x;\r\n            normalLine.y2.baseVal.value = handles.rotator.y;\r\n\r\n            normalLine.setAttribute('stroke', '#00a8ff');\r\n            normalLine.setAttribute('stroke-dasharray', '3 3');\r\n            normalLine.setAttribute('vector-effect', 'non-scaling-stroke');\r\n\r\n            normalLineGroup.appendChild(normalLine);\r\n        }\r\n\r\n        Object.keys(handles).forEach(key => {\r\n            const data = handles[key];\r\n            handles[key] = createHandler(data.x, data.y);\r\n            if (showHandles) {\r\n                handlesGroup.appendChild(handles[key])\r\n            }\r\n        });\r\n\r\n        Object.assign(storage, {\r\n            wrapper,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            parent: sel.parentNode\r\n        });\r\n\r\n        Helper(wrapper).on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _destroy() {\r\n\r\n        const {\r\n            wrapper,\r\n            container\r\n        } = this.storage;\r\n\r\n        Helper(wrapper)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n\r\n        container.removeChild(wrapper);\r\n    }\r\n\r\n    _compute(e) {\r\n\r\n        const {\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            handles\r\n        } = storage;\r\n\r\n        const handle = Helper(e.target);\r\n\r\n        //reverse axis\r\n        const revX = handle.is(handles.tl) ||\r\n            handle.is(handles.ml) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.tc);\r\n\r\n        const revY = handle.is(handles.tl) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.tc) ||\r\n            handle.is(handles.ml);\r\n\r\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n        const _computed = this._getState({\r\n            revX,\r\n            revY\r\n        });\r\n\r\n        const {\r\n            x: clientX,\r\n            y: clientY\r\n        } = this._cursorPoint(e);\r\n\r\n        const pressang = Math.atan2(\r\n            clientY - _computed.center.y,\r\n            clientX - _computed.center.x\r\n        );\r\n\r\n        _computed.onTopEdge = onTopEdge;\r\n        _computed.onLeftEdge = onLeftEdge;\r\n        _computed.onRightEdge = onRightEdge;\r\n        _computed.onBottomEdge = onBottomEdge;\r\n        _computed.handle = handle;\r\n        _computed.pressang = pressang;\r\n\r\n        return _computed;\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n\r\n        const {\r\n            container\r\n        } = this.storage;\r\n\r\n        return pointTo(\r\n            container.getScreenCTM().inverse(),\r\n            container,\r\n            e.clientX,\r\n            e.clientY\r\n        );\r\n    }\r\n\r\n    _pointToElement(data) {\r\n\r\n        const {\r\n            transform,\r\n            container\r\n        } = this.storage;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = data;\r\n\r\n        const { ctm } = transform;\r\n        const matrix = ctm.inverse();\r\n\r\n        const pt = container.createSVGPoint();\r\n        pt.x = x;\r\n        pt.y = y;\r\n        matrix.e = matrix.f = 0;\r\n\r\n        return pt.matrixTransform(matrix);\r\n    }\r\n\r\n    _apply(actionName) {\r\n\r\n        const {\r\n            el: element,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            container,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            cached,\r\n            transform\r\n        } = storage;\r\n\r\n        if (isUndef(cached)) return;\r\n\r\n        const {\r\n            scaleX,\r\n            scaleY,\r\n            dx,\r\n            dy,\r\n            ox,\r\n            oy\r\n        } = cached;\r\n\r\n        const {\r\n            matrix\r\n        } = transform;\r\n\r\n        if (actionName === 'drag') {\r\n\r\n            if (dx === 0 && dy === 0) return;\r\n\r\n            // create translate matrix for an element\r\n            const eM = createSVGMatrix();\r\n\r\n            eM.e = dx;\r\n            eM.f = dy;\r\n\r\n            const translateMatrix = eM.multiply(matrix)\r\n                .multiply(eM.inverse());\r\n\r\n            element.setAttribute(\r\n                'transform',\r\n                matrixToString(translateMatrix)\r\n            );\r\n\r\n            if (isGroup(element)) {\r\n\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n\r\n                    const pt = container.createSVGPoint();\r\n                    const ctm = getTransformToElement(element.parentNode, container).inverse();\r\n                    pt.x = ox;\r\n                    pt.y = oy;\r\n                    ctm.e = ctm.f = 0;\r\n                    const newPT = pt.matrixTransform(ctm);\r\n\r\n                    // create translate matrix for an element\r\n                    const eM = createSVGMatrix();\r\n\r\n                    eM.e = dx;\r\n                    eM.f = dy;\r\n\r\n                    const translateMatrix = eM.multiply(\r\n                        getTransformToElement(child, child.parentNode)\r\n                    ).multiply(eM.inverse());\r\n\r\n                    child.setAttribute(\r\n                        'transform',\r\n                        matrixToString(translateMatrix)\r\n                    );\r\n\r\n                    if (!isGroup(child)) {\r\n                        applyTranslate(child, {\r\n                            x: newPT.x,\r\n                            y: newPT.y\r\n                        });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                applyTranslate(element, {\r\n                    x: dx,\r\n                    y: dy\r\n                });\r\n            }\r\n        }\r\n\r\n        if (actionName === 'resize') {\r\n\r\n            const {\r\n                x,\r\n                y,\r\n                width: newWidth,\r\n                height: newHeight\r\n            } = box.getBBox();\r\n\r\n            applyTransformToHandles(\r\n                box,\r\n                handles,\r\n                normalLine,\r\n                {\r\n                    x,\r\n                    y,\r\n                    width: newWidth,\r\n                    height: newHeight\r\n                },\r\n                container\r\n            );\r\n\r\n            if (isGroup(element)) {\r\n\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n\r\n                    if (!isGroup(child)) {\r\n\r\n                        applyResize(child, {\r\n                            scaleX,\r\n                            scaleY,\r\n                            defaultCTM: child.__ctm__,\r\n                            bBox: transform.bBox,\r\n                            container,\r\n                            storage\r\n                        });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n\r\n                applyResize(element, {\r\n                    scaleX,\r\n                    scaleY,\r\n                    defaultCTM: transform.ctm,\r\n                    bBox: transform.bBox,\r\n                    container,\r\n                    storage\r\n                });\r\n            }\r\n\r\n            element.setAttribute(\r\n                'transform',\r\n                matrixToString(matrix)\r\n            );\r\n        }\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    getControls() {\r\n        return this.storage.wrapper;\r\n    }\r\n\r\n    _processResize(dx, dy) {\r\n\r\n        const {\r\n            container,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            left,\r\n            top,\r\n            cw,\r\n            ch,\r\n            transform,\r\n            revX,\r\n            revY\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            scMatrix,\r\n            trMatrix,\r\n            scaleX: ptX,\r\n            scaleY: ptY\r\n        } = transform;\r\n\r\n        const { el } = this;\r\n\r\n        let {\r\n            width: newWidth,\r\n            height: newHeight\r\n        } = box.getBBox();\r\n\r\n        newWidth = cw + dx;\r\n        newHeight = ch + dy;\r\n\r\n        if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\r\n\r\n        const scaleX = newWidth / cw,\r\n            scaleY = newHeight / ch;\r\n\r\n        // setup scale matrix\r\n        scMatrix.a = scaleX;\r\n        scMatrix.b = 0;\r\n        scMatrix.c = 0;\r\n        scMatrix.d = scaleY;\r\n        scMatrix.e = 0;\r\n        scMatrix.f = 0;\r\n\r\n        // translate compensation matrix\r\n        trMatrix.e = ptX;\r\n        trMatrix.f = ptY;\r\n\r\n        //now must to do: translate(x y) scale(sx sy) translate(-x -y)\r\n        const scaleMatrix = trMatrix\r\n            .multiply(scMatrix)\r\n            .multiply(trMatrix.inverse());\r\n\r\n        const res = matrix.multiply(scaleMatrix);\r\n\r\n        el.setAttribute(\r\n            'transform',\r\n            matrixToString(res)\r\n        );\r\n\r\n        this.storage.cached = {\r\n            scaleX,\r\n            scaleY\r\n        };\r\n\r\n        applyTransformToHandles(\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            {\r\n                x: revX ? left - dx : left,\r\n                y: revY ? top - dy : top,\r\n                width: newWidth,\r\n                height: newHeight,\r\n            },\r\n            container\r\n        );\r\n    }\r\n\r\n    _processMove(dx, dy) {\r\n        const {\r\n            container,\r\n            transform,\r\n            wrapper\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            trMatrix,\r\n            scMatrix,\r\n            wrapperMatrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        scMatrix.e = dx;\r\n        scMatrix.f = dy;\r\n\r\n        const moveWrapper = scMatrix.multiply(wrapperMatrix);\r\n\r\n        wrapper.setAttribute(\r\n            'transform',\r\n            matrixToString(moveWrapper)\r\n        );\r\n\r\n        parentMatrix.e = parentMatrix.f = 0;\r\n        const { x, y } = pointTo(\r\n            parentMatrix.inverse(),\r\n            container,\r\n            dx,\r\n            dy\r\n        );\r\n\r\n        trMatrix.e = x;\r\n        trMatrix.f = y;\r\n\r\n        const moveElement = trMatrix.multiply(matrix);\r\n\r\n        this.el.setAttribute(\r\n            'transform',\r\n            matrixToString(moveElement)\r\n        );\r\n\r\n        this.storage.cached = {\r\n            dx: x,\r\n            dy: y,\r\n            ox: dx,\r\n            oy: dy\r\n        }\r\n    }\r\n\r\n    _processRotate(radians) {\r\n\r\n        const {\r\n            center,\r\n            transform,\r\n            wrapper\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            wrapperMatrix,\r\n            parentMatrix,\r\n            trMatrix,\r\n            scMatrix,\r\n            rotMatrix\r\n        } = transform;\r\n\r\n        const cos = floatToFixed(Math.cos(radians)),\r\n            sin = floatToFixed(Math.sin(radians));\r\n\r\n        // rotate(a cx cy) is equivalent to translate(cx cy) rotate(a) translate(-cx -cy)\r\n        trMatrix.e = center.x;\r\n        trMatrix.f = center.y;\r\n\r\n        rotMatrix.a = cos;\r\n        rotMatrix.b = sin;\r\n        rotMatrix.c = - sin;\r\n        rotMatrix.d = cos;\r\n\r\n        const wrapMatrix = trMatrix.multiply(rotMatrix)\r\n            .multiply(trMatrix.inverse())\r\n            .multiply(wrapperMatrix);\r\n\r\n        wrapper.setAttribute(\r\n            'transform',\r\n            matrixToString(wrapMatrix)\r\n        );\r\n\r\n        scMatrix.e = center.el_x;\r\n        scMatrix.f = center.el_y;\r\n\r\n        parentMatrix.e = parentMatrix.f = 0;\r\n        const resRotMatrix = parentMatrix.inverse()\r\n            .multiply(rotMatrix)\r\n            .multiply(parentMatrix);\r\n\r\n        const rotateMatrix = scMatrix.multiply(resRotMatrix)\r\n            .multiply(scMatrix.inverse());\r\n\r\n        const elMatrix = rotateMatrix.multiply(matrix);\r\n\r\n        this.el.setAttribute(\r\n            'transform',\r\n            matrixToString(elMatrix)\r\n        );\r\n    }\r\n\r\n    _getState(params) {\r\n\r\n        const {\r\n            revX,\r\n            revY\r\n        } = params;\r\n\r\n        const {\r\n            el: element,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            container,\r\n            box,\r\n            wrapper,\r\n            parent\r\n        } = storage;\r\n\r\n        const eBBox = this.el.getBBox();\r\n\r\n        const {\r\n            x: el_x,\r\n            y: el_y,\r\n            width: el_w,\r\n            height: el_h\r\n        } = eBBox;\r\n\r\n        const {\r\n            width: cw,\r\n            height: ch,\r\n            x: c_left,\r\n            y: c_top\r\n        } = box.getBBox();\r\n\r\n        const elMatrix = getTransformToElement(element, parent);\r\n        const boxGroup = box.parentNode;\r\n\r\n        const transform = {\r\n            matrix: elMatrix,\r\n            ctm: getTransformToElement(element, container),\r\n            wrapperMatrix: getTransformToElement(wrapper, wrapper.parentNode),\r\n            boxCTM: getTransformToElement(boxGroup, container),\r\n            boxMatrix: getTransformToElement(boxGroup, boxGroup.parentNode),\r\n            parentMatrix: getTransformToElement(parent, container),\r\n            trMatrix: createSVGMatrix(),\r\n            scMatrix: createSVGMatrix(),\r\n            rotMatrix: createSVGMatrix(),\r\n            scaleX: (revX ? el_w + el_x : el_x),\r\n            scaleY: (revY ? el_h + el_y : el_y),\r\n            bBox: eBBox\r\n        };\r\n\r\n        const hW = cw / 2,\r\n            hH = ch / 2;\r\n\r\n        const boxCenter = pointTo(\r\n            getTransformToElement(box, container),\r\n            container,\r\n            c_left + hW,\r\n            c_top + hH\r\n        );\r\n\r\n        const elementCenter = pointTo(\r\n            elMatrix,\r\n            container,\r\n            el_x + el_w / 2,\r\n            el_y + el_h / 2\r\n        );\r\n\r\n        checkChildElements(element).forEach(child => {\r\n            child.__ctm__ = getTransformToElement(child, container);\r\n        });\r\n\r\n        return {\r\n            transform,\r\n            cw,\r\n            ch,\r\n            center: {\r\n                x: boxCenter.x,\r\n                y: boxCenter.y,\r\n                el_x: elementCenter.x,\r\n                el_y: elementCenter.y\r\n            },\r\n            left: c_left,\r\n            top: c_top,\r\n            revX,\r\n            revY\r\n        };\r\n    }\r\n}\r\n\r\nfunction applyTranslate(element, data) {\r\n\r\n    const {\r\n        x,\r\n        y\r\n    } = data;\r\n\r\n    const attrs = [];\r\n\r\n    switch (element.tagName.toLowerCase()) {\r\n\r\n        case 'use':\r\n        case 'image':\r\n        case 'text':\r\n        case 'rect': {\r\n\r\n            const resX = Number(element.getAttribute('x')) + x,\r\n                resY = Number(element.getAttribute('y')) + y;\r\n\r\n            attrs.push(\r\n                ['x', resX],\r\n                ['y', resY]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'circle':\r\n        case 'ellipse': {\r\n\r\n            const resX = Number(element.getAttribute('cx')) + x,\r\n                resY = Number(element.getAttribute('cy')) + y;\r\n\r\n            attrs.push(\r\n                ['cx', resX],\r\n                ['cy', resY]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'line': {\r\n\r\n            const resX1 = Number(element.getAttribute('x1')) + x,\r\n                resY1 = Number(element.getAttribute('y1')) + y,\r\n                resX2 = Number(element.getAttribute('x2')) + x,\r\n                resY2 = Number(element.getAttribute('y2')) + y;\r\n\r\n            attrs.push(\r\n                ['x1', resX1],\r\n                ['y1', resY1],\r\n                ['x2', resX2],\r\n                ['y2', resY2]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n            const points = parsePoints(element.getAttribute('points'));\r\n            const result = points.map(item => {\r\n\r\n                item[0] = Number(item[0]) + x;\r\n                item[1] = Number(item[1]) + y;\r\n\r\n                return item.join(' ');\r\n            }).join(' ');\r\n\r\n            attrs.push(\r\n                ['points', result]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'path': {\r\n\r\n            const path = element.getAttribute('d');\r\n\r\n            attrs.push(['d', movePath(\r\n                {\r\n                    path,\r\n                    dx: x,\r\n                    dy: y\r\n                }\r\n            )]);\r\n        }\r\n\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(item => {\r\n        element.setAttribute(item[0], item[1]);\r\n    });\r\n}\r\n\r\nfunction applyResize(element, data) {\r\n\r\n    const {\r\n        scaleX,\r\n        scaleY,\r\n        bBox,\r\n        defaultCTM,\r\n        container\r\n    } = data;\r\n\r\n    const {\r\n        width: boxW,\r\n        height: boxH\r\n    } = bBox;\r\n\r\n    const attrs = [];\r\n\r\n    const ctm = getTransformToElement(element, container);\r\n    const localCTM = defaultCTM.inverse().multiply(ctm);\r\n\r\n    switch (element.tagName.toLowerCase()) {\r\n\r\n        case 'text': {\r\n\r\n            const x = element.x.baseVal.value,\r\n                y = element.y.baseVal.value;\r\n\r\n            const {\r\n                x: resX,\r\n                y: resY\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                x,\r\n                y\r\n            );\r\n\r\n            attrs.push(\r\n                ['x', resX + (scaleX < 0 ? boxW : 0)],\r\n                ['y', resY + (scaleY < 0 ? boxH : 0)]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'circle': {\r\n\r\n            const r = element.r.baseVal.value,\r\n                cx = element.cx.baseVal.value,\r\n                cy = element.cy.baseVal.value,\r\n                newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\r\n\r\n            const {\r\n                x: resX,\r\n                y: resY\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                cx,\r\n                cy\r\n            );\r\n\r\n            attrs.push(\r\n                ['r', newR],\r\n                ['cx', resX],\r\n                ['cy', resY]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'image':\r\n        case 'rect': {\r\n\r\n            const width = element.width.baseVal.value,\r\n                height = element.height.baseVal.value,\r\n                x = element.x.baseVal.value,\r\n                y = element.y.baseVal.value;\r\n\r\n            const {\r\n                x: resX,\r\n                y: resY\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                x,\r\n                y\r\n            );\r\n\r\n            localCTM.e = localCTM.f = 0;\r\n\r\n            const {\r\n                x: newW,\r\n                y: newH\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                width,\r\n                height\r\n            );\r\n\r\n            const newWidth = Math.abs(newW),\r\n                newHeight = Math.abs(newH);\r\n\r\n            attrs.push(\r\n                ['x', resX - (scaleX < 0 ? newWidth : 0)],\r\n                ['y', resY - (scaleY < 0 ? newHeight : 0)],\r\n                ['width', newWidth],\r\n                ['height', newHeight]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'ellipse': {\r\n\r\n            const rx = element.rx.baseVal.value,\r\n                ry = element.ry.baseVal.value,\r\n                cx = element.cx.baseVal.value,\r\n                cy = element.cy.baseVal.value;\r\n\r\n            const {\r\n                x: cx1,\r\n                y: cy1\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                cx,\r\n                cy\r\n            );\r\n\r\n            localCTM.e = localCTM.f = 0;\r\n\r\n            const {\r\n                x: nRx,\r\n                y: nRy\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                rx,\r\n                ry\r\n            );\r\n\r\n            attrs.push(\r\n                ['rx', Math.abs(nRx)],\r\n                ['ry', Math.abs(nRy)],\r\n                ['cx', cx1],\r\n                ['cy', cy1]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'line': {\r\n\r\n            const resX1 = element.x1.baseVal.value,\r\n                resY1 = element.y1.baseVal.value,\r\n                resX2 = element.x2.baseVal.value,\r\n                resY2 = element.y2.baseVal.value;\r\n\r\n            const {\r\n                x: resX1_,\r\n                y: resY1_\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                resX1,\r\n                resY1\r\n            );\r\n\r\n            const {\r\n                x: resX2_,\r\n                y: resY2_\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                resX2,\r\n                resY2\r\n            );\r\n\r\n            attrs.push(\r\n                ['x1', resX1_],\r\n                ['y1', resY1_],\r\n                ['x2', resX2_],\r\n                ['y2', resY2_]\r\n            );\r\n        }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n            const points = parsePoints(element.getAttribute('points'));\r\n            const result = points.map(item => {\r\n\r\n                const {\r\n                    x,\r\n                    y\r\n                } = pointTo(\r\n                    localCTM,\r\n                    container,\r\n                    Number(item[0]),\r\n                    Number(item[1])\r\n                );\r\n\r\n                item[0] = x;\r\n                item[1] = y;\r\n\r\n                return item.join(' ');\r\n\r\n            }).join(' ');\r\n\r\n            attrs.push(['points', result]);\r\n        }\r\n            break;\r\n\r\n        case 'path': {\r\n\r\n            const path = element.getAttribute('d');\r\n\r\n            attrs.push(['d', resizePath(\r\n                {\r\n                    path,\r\n                    localCTM,\r\n                    container\r\n                }\r\n            )]);\r\n        }\r\n            break;\r\n\r\n        default: { }\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(attr => {\r\n        element.setAttribute(attr[0], attr[1]);\r\n    });\r\n}\r\n\r\nfunction applyTransformToHandles(\r\n    box,\r\n    handles,\r\n    normalLine,\r\n    data,\r\n    container\r\n) {\r\n\r\n    let {\r\n        x,\r\n        y,\r\n        width,\r\n        height\r\n    } = data;\r\n\r\n    const hW = width / 2,\r\n        hH = height / 2;\r\n\r\n    const boxCTM = getTransformToElement(\r\n        box,\r\n        box.parentNode.parentNode\r\n    );\r\n\r\n    const attrs = {\r\n        tl: pointTo(boxCTM, container, x, y),\r\n        tr: pointTo(boxCTM, container, x + width, y),\r\n        br: pointTo(boxCTM, container, x + width, y + height),\r\n        bl: pointTo(boxCTM, container, x, y + height),\r\n        tc: pointTo(boxCTM, container, x + hW, y),\r\n        bc: pointTo(boxCTM, container, x + hW, y + height),\r\n        ml: pointTo(boxCTM, container, x, y + hH),\r\n        mr: pointTo(boxCTM, container, x + width, y + hH),\r\n        //center: pointTo(boxCTM, container, x + hW, y + hH),\r\n        rotator: {}\r\n    };\r\n\r\n    const theta = Math.atan2(\r\n        attrs.tl.y - attrs.tr.y,\r\n        attrs.tl.x - attrs.tr.x\r\n    );\r\n\r\n    attrs.rotator.x = attrs.mr.x - ROT_OFFSET * Math.cos(theta);\r\n    attrs.rotator.y = attrs.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n    normalLine.x1.baseVal.value = attrs.mr.x;\r\n    normalLine.y1.baseVal.value = attrs.mr.y;\r\n    normalLine.x2.baseVal.value = attrs.rotator.x;\r\n    normalLine.y2.baseVal.value = attrs.rotator.y;\r\n\r\n    x = x + (width < 0 ? width : 0);\r\n    y = y + (height < 0 ? height : 0);\r\n\r\n    const boxAttrs = {\r\n        x,\r\n        y,\r\n        width: Math.abs(width),\r\n        height: Math.abs(height)\r\n    };\r\n\r\n    Object.keys(boxAttrs).forEach(attr => {\r\n        box.setAttribute(attr, boxAttrs[attr]);\r\n    });\r\n\r\n    Object.keys(handles).forEach(key => {\r\n        const hdl = handles[key];\r\n        hdl.setAttribute('cx', attrs[key].x);\r\n        hdl.setAttribute('cy', attrs[key].y);\r\n    });\r\n}\r\n\r\nfunction isGroup(element) {\r\n    return element.tagName.toLowerCase() === 'g';\r\n}\r\n\r\nfunction checkChildElements(element) {\r\n\r\n    const arrOfElements = [];\r\n\r\n    if (isGroup(element)) {\r\n\r\n        element.childNodes.forEach(item => {\r\n\r\n            if (item.nodeType === 1) {\r\n\r\n                const tagName = item.tagName.toLowerCase();\r\n\r\n                if (ALLOWED_ELEMENTS.indexOf(tagName) !== -1) {\r\n                    if (tagName === 'g') {\r\n                        arrOfElements.push(...checkChildElements(item));\r\n                    }\r\n                    arrOfElements.push(item);\r\n                }\r\n            }\r\n        });\r\n\r\n    } else {\r\n        arrOfElements.push(element);\r\n    }\r\n\r\n    return arrOfElements;\r\n}\r\n\r\nfunction parsePoints(pts) {\r\n    return pts.match(floatRE).reduce(\r\n        (result, value, index, array) => {\r\n            if (index % 2 === 0) {\r\n                result.push(array.slice(index, index + 2));\r\n            }\r\n            return result;\r\n        },\r\n        []\r\n    );\r\n}\r\n\r\nfunction createHandler(l, t) {\r\n\r\n    const handler = createSVGElement('circle');\r\n\r\n    const items = {\r\n        cx: l,\r\n        cy: t,\r\n        r: '5',\r\n        fill: 'rgba(0, 168, 255, 0.2)',\r\n        stroke: '#00a8ff',\r\n        'vector-effect': 'non-scaling-stroke'\r\n    };\r\n\r\n    Object.keys(items).map(key => {\r\n        handler.setAttribute(key, items[key]);\r\n    });\r\n\r\n    return handler;\r\n}","import Observable from '../observer/Observer'\r\nimport Draggable from './html'\r\nimport DraggableSVG from './svg/index'\r\n\r\nimport { checkElement } from './svg/util'\r\nimport { arrReduce } from '../util/util'\r\n\r\n// factory method for creating draggable elements\r\nexport default function _drag(options) {\r\n    if (this.length) {\r\n        const Ob = new Observable();\r\n        return arrReduce.call(this, (result, item) => {\r\n            if (!(item instanceof SVGElement)) {\r\n                result.push(\r\n                    new Draggable(item, options, Ob)\r\n                );\r\n            } else {\r\n                if (checkElement(item)) {\r\n                    result.push(\r\n                        new DraggableSVG(item, options, Ob)\r\n                    );\r\n                }\r\n            }\r\n            return result;\r\n        }, []);\r\n    }\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    warn,\r\n    isDef,\r\n    isUndef,\r\n    isFunc\r\n} from '../util/util'\r\n\r\nimport {\r\n   getOffset,\r\n   objectsCollide\r\n} from '../util/css-util'\r\n\r\nexport default class Clone {\r\n\r\n    constructor(el, options) {\r\n\r\n        this.el = el;\r\n        this.options = options || {};\r\n        this.storage = null;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n\r\n        this.enable();\r\n    }\r\n\r\n    enable() {\r\n        if (isUndef(this.storage)) {\r\n            this._init();\r\n        }  else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n        _destroy.call(this);\r\n    }\r\n\r\n    _init() {\r\n\r\n        const ctx = this;\r\n\r\n        const sel = ctx.el;\r\n        const _sel = Helper(sel);\r\n\r\n        const {\r\n            style,\r\n            onDrop,\r\n            appendTo,\r\n            stack\r\n        } = ctx.options;\r\n\r\n        const css = {\r\n            position: 'absolute',\r\n            'z-index': '2147483647'\r\n        };\r\n\r\n        if (isDef(style) && typeof style === 'object') {\r\n            Object.assign(css, style);\r\n        }\r\n\r\n        const dropZone = isDef(stack) \r\n                        ? Helper(stack)[0] \r\n                        : document;\r\n\r\n        const _onDrop = isFunc(onDrop)\r\n            ? function(evt) {\r\n\r\n                const {\r\n                    clone\r\n                } = this.storage;\r\n\r\n                const result = objectsCollide(\r\n                    clone,\r\n                    dropZone\r\n                );\r\n\r\n                if (result) {\r\n                    onDrop.call(this, evt, this.el, clone);\r\n                }\r\n            }\r\n            : () => {};\r\n\r\n        ctx.storage = {\r\n            onDrop: _onDrop,\r\n            options: this.options,\r\n            css,\r\n            parent: Helper(appendTo)[0] || document.body,\r\n            stack: dropZone\r\n        };\r\n\r\n        _sel.on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _start(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n        \r\n        const { \r\n            storage,\r\n            el\r\n        } = this;\r\n    \r\n        const {\r\n            parent,\r\n            css\r\n        } = storage; \r\n    \r\n        const offset = getOffset(parent);\r\n    \r\n        const { \r\n            clientX, \r\n            clientY \r\n        } = e; \r\n    \r\n        css.left = `${(clientX - offset.left)}px`;\r\n        css.top = `${(clientY - offset.top)}px`;\r\n    \r\n        const clone = el.cloneNode(true);\r\n        Helper(clone).css(css);\r\n    \r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.cx = clientX;\r\n        storage.cy = clientY;\r\n        storage.clone = clone;\r\n    \r\n        Helper(parent)[0].appendChild(clone);\r\n        this._draw();\r\n    }\r\n\r\n    _move(e) {\r\n\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n    \r\n        const { storage } = this;\r\n    \r\n        storage.clientX = e.clientX;\r\n        storage.clientY = e.clientY;\r\n        storage.doDraw = true;\r\n        storage.doMove = true;\r\n    }\r\n    \r\n    _end(e) {\r\n    \r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n    \r\n        const { \r\n            storage\r\n        } = this;\r\n    \r\n        const {\r\n            clone,\r\n            frameId,\r\n            onDrop\r\n        } = storage;\r\n    \r\n        storage.doDraw = false;\r\n        cancelAnimFrame(frameId);\r\n    \r\n        if (isUndef(clone)) return;\r\n    \r\n        onDrop.call(this, e);\r\n        clone.parentNode.removeChild(clone);\r\n    \r\n        delete storage.clone;\r\n    }\r\n    \r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n\r\n        const { storage } = this;\r\n    \r\n        storage.frameId = requestAnimFrame(this._animate);\r\n\r\n        const {\r\n            doDraw,\r\n            clientX,\r\n            clientY,\r\n            cx,\r\n            cy,\r\n            clone\r\n        } = storage;\r\n\r\n        if (!doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        const translate = `translate(${clientX - cx}px, ${clientY - cy}px)`;\r\n\r\n        Helper(clone).css({\r\n            transform: translate,\r\n            webkitTranform: translate,\r\n            mozTransform: translate,\r\n            msTransform: translate,\r\n            otransform: translate \r\n        });\r\n    }\r\n    \r\n    _destroy() {\r\n    \r\n        if (isUndef(this.storage)) return;\r\n        Helper(this.el)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n        delete this.storage;\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        Helper(document)\r\n            .on('mousemove', this._onMouseMove)\r\n            .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._move(e);\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        this._end(e);\r\n        Helper(document)\r\n            .off('mousemove', this._onMouseMove)\r\n            .off('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        Helper(document)\r\n            .on('touchmove', this._onTouchMove)\r\n            .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._move(e.touches[0]);\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n\r\n        if (e.touches.length === 0) {\r\n            this._end(e.changedTouches[0]);\r\n        }\r\n        Helper(document)\r\n            .off('touchmove', this._onTouchMove)\r\n            .off('touchend', this._onTouchEnd);\r\n    }\r\n}","/* @license\r\n * Move/Rotate/Resize tool\r\n * Released under the MIT license, 2018-2019\r\n * nichollascarter@gmail.com\r\n*/\r\n\r\nimport '../style/subjx.css'\r\nimport _drag from './core/transform/index'\r\nimport _clone from './core/clone/index'\r\nimport { Helper_ } from './core/helper'\r\n\r\nclass Subjx extends Helper_ {\r\n\r\n    constructor(params) {\r\n        super(params);\r\n    }\r\n\r\n    drag(params) {\r\n        return _drag.call(this, params);\r\n    }\r\n    clone(params) {\r\n        return _clone.call(this, params);\r\n    }\r\n}\r\n\r\nexport default function(params) {\r\n    return new Subjx(params);\r\n}","import {\r\n    arrMap\r\n} from '../util/util'\r\n\r\nimport Clone from './clone'\r\n\r\nexport default function _clone(options) {\r\n    if (this.length) {\r\n        return arrMap.call(this, item => {\r\n            return new Clone(item, options);\r\n        });\r\n    }\r\n}"],"sourceRoot":""}